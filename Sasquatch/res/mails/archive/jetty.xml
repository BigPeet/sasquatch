<?xml version="1.0" encoding="UTF-8"?>
<mails>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 17 15:13:59 CEST 2013</date>
    <body>It’s basically signalling between CFML and Nginx, it says to Nginx “serve this file, just as you would any static file”, then everything from that point on is handled by Nginx.   I like the idea of using the Jetty APIs, Railo (like any CFML engine) has access to the underlying Java objects, so through learning it I also understand a fair amount of Java. Can you point me in the right direction as to how I can maybe access these APIs? If I can see some Java code samples I can likely translate those to CFML.   From: jetty-users-bounces@xxxxxxxxxxx [mailto:jetty-users-bounces@xxxxxxxxxxx] On Behalf Of Greg Wilkins Sent: June-17-13 5:46 AM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9 as a Front-end Server   Shane, This is certainly possible and there are lots of different ways to skin this particular cat. One would be to have a filter that intercepts the request to the base64 encoded identifier and it works out the real resource.    It then does an RequestDispatcher.forward to a named dispatcher obtained for "default", which is the jetty default servlet.    This way the real path is hidden from the client. Another way to proceed is to write a servlet that uses the Jetty APIs directly for sending the file efficiently and asynchronously.  This may be able to offer you more flexibility. The decision to use fast memory mapped buffers could depend somewhat if the file is to be served only once or many many times.    If it is to be served only once, it may be better to have a large direct buffer that reads/writes the content.  Jetty-9 has some APIs to do that with file channels. However, I still am a bit vague about some of the details of you scheme.  What dose the X-Accel-Redirect header do?  Is it the client that handles that header?  or is it just doing some signalling between the CFML and nginx? cheers       shane@xxxxxxxxxxxxx Let me see if I can explain it a bit better... - User logs into our Information Management System. - User wants to download a file. The meta-information is store in a database, and the physical file is stored in a private directory on the server, the name of which is generated from the File ID and Revision ID. This physical, on-disk file name and path should never be seen by the client. - The users is directed to a URL, /files/(base64-encoded identifier), which via URL rewriting is handled by a CFML page. - The CFML page decodes the identifier, authenticates the session, and if all is well, builds a path to the physical file. - The CFML page sets the response header "X-Accel-Redirect" to this path. At this point, Railo is done processing and control is returned to the servlet container. - Nginx intercepts this response header, and responds to the browser with the content of the file. This is the part that I want Jetty to do, without having to make the path publically available. -----Original Message----- From: jetty-users-bounces@xxxxxxxxxxx [mailto: jetty-users-bounces@xxxxxxxxxxx ] On Behalf Of Simone Bordet Sent: June-10-13 2:05 PM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9 as a Front-end Server Hi, shane@xxxxxxxxxxxxx Well then you have to be more precise in your use case. I am not familiar with Railo, nginx, &amp;lt;cfheader&amp;gt; or whatever you're doing. I know Jetty can serve content asynchronously via direct buffers, and I believe what you have tersely described in your emails, if I understood it correctly, is doable in Jetty. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users -- gregw@xxxxxxxxxxx http://www.webtide.com Developer advice and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 17 11:46:09 CEST 2013</date>
    <body>Shane, This is certainly possible and there are lots of different ways to skin this particular cat. One would be to have a filter that intercepts the request to the base64 encoded identifier and it works out the real resource.    It then does an RequestDispatcher.forward to a named dispatcher obtained for "default", which is the jetty default servlet.    This way the real path is hidden from the client. Another way to proceed is to write a servlet that uses the Jetty APIs directly for sending the file efficiently and asynchronously.  This may be able to offer you more flexibility. The decision to use fast memory mapped buffers could depend somewhat if the file is to be served only once or many many times.    If it is to be served only once, it may be better to have a large direct buffer that reads/writes the content.  Jetty-9 has some APIs to do that with file channels. However, I still am a bit vague about some of the details of you scheme.  What dose the X-Accel-Redirect header do?  Is it the client that handles that header?  or is it just doing some signalling between the CFML and nginx? cheers On 11 June 2013 04:13, Shane Curless shane@xxxxxxxxxxxxx -- gregw@xxxxxxxxxxx http://www.webtide.com Developer advice and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>[jetty-users] Configuring init parameters for GuiceServletContext	and Si</header>
    <date>Sun Jun 16 16:17:31 CEST 2013</date>
    <body>Hello, I am new to Jetty, and I am writing a web-app using Guice for dependency injection and SIteBricks for service definition. I am trying to find the best / standard method to define init parameters: .properties file, JNDI, System properties? Can you please advise? Thanks</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 - Windows - File locking issue</header>
    <date>Sat Jun 15 04:04:05 CEST 2013</date>
    <body>Thanks for the quick answer.Â Returned to Jetty 8 until this is fixed. On Fri, Jun 14, 2013 at 9:18 PM, Craig Ching craigching@xxxxxxxxx -- Andrew Penhorwood andrew@xxxxxxxxxxxx www.coldbits.com</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 - Windows - File locking issue</header>
    <date>Sat Jun 15 03:18:40 CEST 2013</date>
    <body>It's a bug, should be fixed in 9.0.4.  I am going to test this and another next week: https://bugs.eclipse.org/bugs/show_bug.cgi?id=408830 On Fri, Jun 14, 2013 at 6:30 PM, Andrew Penhorwood penhorwood@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty 9 - Windows - File locking issue</header>
    <date>Sat Jun 15 01:30:01 CEST 2013</date>
    <body>I am running Jetty 9.0.3.v20130506 and have configured my webdefault.xml like this: I read the following information links. http://www.eclipse.org/jetty/documentation/current/troubleshooting-locked-files-on-windows.html But I am still experiencing file locking issue on my xxx.html files.Â I reviewed this bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=395885 .Â But that should be fixed. Is anyone else experiencing file locking issues with Jetty 9 on Windows 7 x64. -- Andrew Penhorwood andrew@xxxxxxxxxxxx www.coldbits.com</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Error ( "No object for id=DeploymentManager" ) while s</header>
    <date>Fri Jun 14 14:03:49 CEST 2013</date>
    <body>you need to have jetty-deploy.xml in there as well, preceding the jetty-webapps.xml cheers, jesse -- jesse mcconnell jesse.mcconnell@xxxxxxxxx On Fri, Jun 14, 2013 at 6:52 AM, Tripathi, Harikesh Harikesh.Tripathi@xxxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Error ( "No object for id=DeploymentManager" ) while start</header>
    <date>Fri Jun 14 13:52:56 CEST 2013</date>
    <body>Hello Jetty Users , I am hitting this error while starting jetty8 with jetty-webapps.xml . I am not sure what is the problem. Jetty is starting well if I remove jetty-webapps.xml from the command line.  I have copied my web apps to web apps directory inside jetty home.  I need your help to resolve this. [root@kakuzu jetty]# java -jar start.jar jetty.home=/opt/NTAPdfm/jetty jetty.port=8123 etc/jetty.xml etc/jetty-webapps.xml  2013-06-15 06:25:04.803:WARN:oejx.XmlConfiguration:Config error at &amp;lt;Ref id="DeploymentManager"&amp;gt;&amp;lt;Call id="webappprovider" name="addAppProvider"&amp;gt;&amp;lt;Arg&amp;gt;|              &amp;lt;New class="org.eclipse.jetty.deploy.providers.WebAppProvider"&amp;gt;&amp;lt;Set name="monitoredDirName"&amp;gt;&amp;lt;Property name="jetty.home" default="."/&amp;gt;/webapps&amp;lt;/Set&amp;gt;&amp;lt;Set name="defaultsDescriptor"&amp;gt;&amp;lt;Property name="jetty.home" default="."/&amp;gt;/etc/webdefault.xml&amp;lt;/Set&amp;gt;&amp;lt;Set name="scanInterval"&amp;gt;1&amp;lt;/Set&amp;gt;&amp;lt;Set name="contextXmlDir"&amp;gt;&amp;lt;Property name="jetty.home" default="."/&amp;gt;/contexts&amp;lt;/Set&amp;gt;&amp;lt;Set name="extractWars"&amp;gt;true&amp;lt;/Set&amp;gt;&amp;lt;/New&amp;gt;|            &amp;lt;/Arg&amp;gt;&amp;lt;/Call&amp;gt;&amp;lt;/Ref&amp;gt; java.lang.IllegalStateException: No object for id=DeploymentManager java.lang.reflect.InvocationTargetException at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.eclipse.jetty.start.Main.invokeMain(Main.java:473) at org.eclipse.jetty.start.Main.start(Main.java:615) at org.eclipse.jetty.start.Main.main(Main.java:96) Caused by: java.lang.IllegalStateException: No object for id=DeploymentManager at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.refObj(XmlConfiguration.java:832) at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:396) at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:343) at org.eclipse.jetty.xml.XmlConfiguration.configure(XmlConfiguration.java:296) at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:1247) at java.security.AccessController.doPrivileged(Native Method) at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:1182) ... 7 more Usage: java -jar start.jar [options] [properties] [configs]        java -jar start.jar --help  # for more information [root@kakuzu jetty]# vi etc/jetty-webapps.xml </body>
  </mail>
  <mail>
    <header>[jetty-users] Two web apps in one vm which communicate with each	other</header>
    <date>Thu Jun 13 15:14:41 CEST 2013</date>
    <body>Hello,   I am running an embedded Jetty 8.1.11 server. I have two web applications deployed in the same server.   Web App A is called from an external source via a HTTP GET request and now needs to contact the servlet of Web App B. I am currently using HttpUrlConnection from Java to send a POST request to the servlet of Web App B.  Requesting an OutputStream and writing the body of the POST request works, but when I try to read the result, I will receive a SocketReadTimeout exception. It seems as if servlet B only receives the request after the request send to servlet A completes.   Is such a scenario possible with Jetty?   Thanks and regards   Jan Rosczak</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] ServletContextHandler behaviour change for jetty	9 ?</header>
    <date>Thu Jun 13 11:02:34 CEST 2013</date>
    <body>I made a testcase and created a bug-report for this, since it seems like  a bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=410693 Kristian</body>
  </mail>
  <mail>
    <header>[jetty-users] ServletContextHandler behaviour change for jetty 9 ?</header>
    <date>Thu Jun 13 09:10:29 CEST 2013</date>
    <body>I have come across a problem when upgrading to jetty 9: Our application contains a ServletContextHandler with a WicketServlet and a spring context loader listener. With jetty 8 I was able to call setHandler( new ClasspathResourceHandler("/webapp", useCaches)) on this context and get the expected result (a wicket application with classpath resources). With jetty9, if I add the classpathresource handler it makes the spring context loader invoked too early (when there is no request scope available). If I remove the call to setHandler, it all works fine (apart from the missing resources because I didn't add the classpathresourcehandler) . Is this a known behaviour change for jetty9 or a bug ? Kristian</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] How to configure Jetty 9 so x509 client certificate is</header>
    <date>Wed Jun 12 17:26:07 CEST 2013</date>
    <body>Alex, I'm using the maven plugin and followed the "Configuring a Https Connector" instructions at http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html#configuring-jetty-container with the following caveats: - the plugin didn't like the &amp;lt;Configure id="sslContextFactory" class="org.eclipse.jetty.util.ssl.SslContextFactory"&amp;gt; tag, since SslContextFactory is not a server, so I combined jetty.xml, jetty-ssl.xml and jetty-https.xml into one file and replaced the Configure tag with New tag for SslContextFactory. - I added the following tag to the SslContextFactory: Sounds like you tried something like this for standalone Jetty (not the maven plugin), but this worked for me. I do get abort behavior for IE (sometimes after identifying the cert), but Ffx and Chrome work properly. That is, they ask for the cert and the page is rendered. Java clients (e.g. SoapUI) work properly as well. -- View this message in context: http://jetty.4.x6.nabble.com/jetty-users-How-to-configure-Jetty-9-so-x509-client-certificate-is-transferred-in-https-requests-tp4960680p4960726.html Sent from the Jetty User mailing list archive at Nabble.com.</body>
  </mail>
  <mail>
    <header>[jetty-users] WebSocketConnection and possible classloader leak</header>
    <date>Tue Jun 11 14:30:28 CEST 2013</date>
    <body>Hi. I am observing the following behaviour with Jetty 8.1.8: 1. Jetty is up and running. 2. I make a websocket connection to it with Atmosphere JS 3. Eventually constructor of org.eclipse.jetty.websocket.WebSocketConnectionRFC6455 is called. This constructor, among other things, does the following: Context classloader is Jetty's WebAppClassLoader. This WebSocketConnection is stored in _connection field of org.eclipse.jetty.io.nio.SelectChannelEndPoint. As a result, we have Jetty's selector thread, which stores reference toÂWebSocketConnection, which has reference to WebAppClassLoader. And this selector thread holds reference toÂWebSocketConnection even after application undeploy, which results in classloader leak. Is my analysis correct? And what can be done in this case to prevent memory leak? Nikita Salnikov-Tarnovski Plumbr Found and Master Developer http://plumbr.eu</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 20:13:45 CEST 2013</date>
    <body>Let me see if I can explain it a bit better... - User logs into our Information Management System. - User wants to download a file. The meta-information is store in a database, and the physical file is stored in a private directory on the server, the name of which is generated from the File ID and Revision ID. This physical, on-disk file name and path should never be seen by the client. - The users is directed to a URL, /files/(base64-encoded identifier), which via URL rewriting is handled by a CFML page. - The CFML page decodes the identifier, authenticates the session, and if all is well, builds a path to the physical file. - The CFML page sets the response header "X-Accel-Redirect" to this path. At this point, Railo is done processing and control is returned to the servlet container. - Nginx intercepts this response header, and responds to the browser with the content of the file. This is the part that I want Jetty to do, without having to make the path publically available. -----Original Message----- From: jetty-users-bounces@xxxxxxxxxxx [ mailto:jetty-users-bounces@xxxxxxxxxxx ] On Behalf Of Simone Bordet Sent: June-10-13 2:05 PM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9 as a Front-end Server Hi, Well then you have to be more precise in your use case. I am not familiar with Railo, nginx, &amp;lt;cfheader&amp;gt; or whatever you're doing. I know Jetty can serve content asynchronously via direct buffers, and I believe what you have tersely described in your emails, if I understood it correctly, is doable in Jetty. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 20:04:38 CEST 2013</date>
    <body>Hi, Well then you have to be more precise in your use case. I am not familiar with Railo, nginx, &amp;lt;cfheader&amp;gt; or whatever you're doing. I know Jetty can serve content asynchronously via direct buffers, and I believe what you have tersely described in your emails, if I understood it correctly, is doable in Jetty. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] getting hold of the client certificate during an encry</header>
    <date>Mon Jun 10 19:53:15 CEST 2013</date>
    <body>Awesome! - E I went ahead and created 2 bugzillas based on this... https://bugs.eclipse.org/bugs/show_bug.cgi?id=410370 WebSocketCreator.createWebSocket() should use servlet specific parameters https://bugs.eclipse.org/bugs/show_bug.cgi?id=410372 Make SSL client certificate information available to server websockets As for the changes, either of these would be interface changes. We are planning a next 9.0 release this week, so we'll see what it takes to get this implemented. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Mon, Jun 10, 2013 at 10:24 AM, Erich Bremer erich@xxxxxxxxxxx &lt;blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"&gt; Hi Joakim,     WebSocketCreator is how I made the modification for my program.  It required making a few more modifications in three other files, but it works fine.  The difficulty for me is having to make the changes each time Jetty get upgraded.  Yes, server-side is where I need it.  My Jetty server needs to get a handle on the cert to verify certain information.  Specifically, I've implemented WebID authentication for my project ( http://www.ebremer.com/nexus/WebIDauthentication ).  Without the server being able to associate the cert from the initial http session with it's upgraded websocket connection, things get confused. Question (sort of related) In WebSocketServerFactory, there is a line in the method acceptWebSocket:     Object websocketPojo = who's parameters are set a few lines before with:         ServletWebSocketRequest sockreq = new         ServletWebSocketResponse sockresp = new where     ServletWebSocketRequest and ServletWebSocketResponse are extended versions of UpgradeRequest and UpgradeResponse respectively, but, in the class definition for WebSocketCreator the method changes these parameters     createWebSocket(UpgradeRequest req, UpgradeResponse Why create sockreq and sockresp as ServletWebSocketRequest and ServletWebSocketResponse just to cast them into UpgradeRequest and UpgradeResponse?  ServletWebSocketRequest actually stores the http request in a private variable, and that if exposed via a getter, could give access to the cert in the user-defined WebSocketCreator.         - Erich PS - any hope to get this cert support added in anytime soon, or should I just keep making the modifications?  - E Interesting request. Currently there is no support for that. Wonder where a good place for that would be ... Gut reaction is to make it available via the WebSocketCreator, letting you capture and hold onto it at websocket creation time. That would make it server side specific functionality, which is what i think you intend. Another option would be to expose the SSL details via the Session object, but what that would mean to the websocket-client implementation of Session I don't know (yet) -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Sun, Jun 9, 2013 at 8:40 AM, Erich Bremer erich@xxxxxxxxxxx &lt;blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"&gt; Hi,     I have a case where I am encrypting a websockets connection and requiring a client give it's certificate during the initial http connection before upgrading to a encrypted WebSockets connection. What is the easiest way to get hold of the client certificate for a particular websockets connection?  I've only been able to do this by modifying the core Jetty code by passing the certificate to the websocket pojo in a modified websocketfactory.  I'm hoping there is an easier way, thanks!  - Erich _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 19:49:39 CEST 2013</date>
    <body>I'm not sure what you mean by mapping to DefaultServlet.. I don't want these files to be directly available to the public. And I need to use Content-Disposition to output the real filename stored in a database. -----Original Message----- From: jetty-users-bounces@xxxxxxxxxxx [ mailto:jetty-users-bounces@xxxxxxxxxxx ] On Behalf Of Simone Bordet Sent: June-10-13 1:47 PM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9 as a Front-end Server Hi, specific file after it has located it via meta-information from the database. name="X-Accel-Redirect" value="/path/to/the/file" /&amp;gt;, is there a similar thing I  can do using Jetty standalone? As I said, if "/path/to/file" maps to DefaultServlet, you don't even need to set the header: it will be served asynchronously and via direct buffers. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 19:47:03 CEST 2013</date>
    <body>Hi, As I said, if "/path/to/file" maps to DefaultServlet, you don't even need to set the header: it will be served asynchronously and via direct buffers. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] getting hold of the client certificate during an encry</header>
    <date>Mon Jun 10 19:45:37 CEST 2013</date>
    <body>I went ahead and created 2 bugzillas based on this... https://bugs.eclipse.org/bugs/show_bug.cgi?id=410370 WebSocketCreator.createWebSocket() should use servlet specific parameters https://bugs.eclipse.org/bugs/show_bug.cgi?id=410372 Make SSL client certificate information available to server websockets As for the changes, either of these would be interface changes. We are planning a next 9.0 release this week, so we'll see what it takes to get this implemented. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Mon, Jun 10, 2013 at 10:24 AM, Erich Bremer erich@xxxxxxxxxxx _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 19:39:35 CEST 2013</date>
    <body>I'm not talking about Jetty being efficient or not, I know it is a very efficient server which is why I switched from Tomcat. The feature I need is for Railo to be able to tell Jetty to serve a specific file after it has located it via meta-information from the database. This works perfectly well using Nginx and &amp;lt;cfheader name="X-Accel-Redirect" value="/path/to/the/file" /&amp;gt;, is there a similar thing I  can do using Jetty standalone? The "loading gigabyte files into RAM" thing I was referring to is using the &amp;lt;cffile&amp;gt; tag of Railo to spit out the contents.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty Http client support for traversing through	proxi</header>
    <date>Mon Jun 10 19:35:45 CEST 2013</date>
    <body>Hi, http://www.eclipse.org/jetty/documentation/current/http-client-other.html#http-client-proxy Any Jetty 7 or 8 recent release has proxy support. Jetty's HttpClient supports "http" and "https" schemes. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 19:33:33 CEST 2013</date>
    <body>Hi, No problems. I know of at least one production environment that is handling 10-15k requests/s with 10% of CPU or so. I have benchmarked CometD/Jetty and reached 40k-50k requests/s: http://webtide.intalio.com/2011/09/cometd-2-4-0-websocket-benchmarks/ What little faith you have in Jetty :) If we were doing this, we would be really naive... Jetty builds on 15 years of experience and optimizations. Jetty's DefaultServlet serves content asynchronously and using direct buffers whenever possible (you can think of this as the Java "sendfile"). Depending on your needs, you can configure a new DefaultServlet to map to the directory where you have the files you are serving (e.g. if you're creating them dynamically), or even use for that the out-of-the-box DefaultServlet that is installed behind the scenes by Jetty to serve static files. Jetty does not need any header to tell DefaultServlet to be efficient, but the details of your case may be different. You can pretty much figure out how to configure DefaultServlet from its Javadocs though: http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/servlet/DefaultServlet.html -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] getting hold of the client certificate during an encry</header>
    <date>Mon Jun 10 19:24:32 CEST 2013</date>
    <body>Hi Joakim,     WebSocketCreator is how I made the modification for my program.  It required making a few more modifications in three other files, but it works fine.  The difficulty for me is having to make the changes each time Jetty get upgraded.  Yes, server-side is where I need it.  My Jetty server needs to get a handle on the cert to verify certain information.  Specifically, I've implemented WebID authentication for my project ( http://www.ebremer.com/nexus/WebIDauthentication ).  Without the server being able to associate the cert from the initial http session with it's upgraded websocket connection, things get confused. Question (sort of related) In WebSocketServerFactory, there is a line in the method acceptWebSocket:     Object websocketPojo = who's parameters are set a few lines before with:         ServletWebSocketRequest sockreq = new         ServletWebSocketResponse sockresp = new where     ServletWebSocketRequest and ServletWebSocketResponse are extended versions of UpgradeRequest and UpgradeResponse respectively, but, in the class definition for WebSocketCreator the method changes these parameters Why create sockreq and sockresp as ServletWebSocketRequest and ServletWebSocketResponse just to cast them into UpgradeRequest and UpgradeResponse?  ServletWebSocketRequest actually stores the http request in a private variable, and that if exposed via a getter, could give access to the cert in the user-defined WebSocketCreator.         - Erich PS - any hope to get this cert support added in anytime soon, or should I just keep making the modifications?  - E Interesting request. Currently there is no support for that. Wonder where a good place for that would be ... Gut reaction is to make it available via the WebSocketCreator, letting you capture and hold onto it at websocket creation time. That would make it server side specific functionality, which is what i think you intend. Another option would be to expose the SSL details via the Session object, but what that would mean to the websocket-client implementation of Session I don't know (yet) -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Sun, Jun 9, 2013 at 8:40 AM, Erich Bremer erich@xxxxxxxxxxx &lt;blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"&gt; Hi,     I have a case where I am encrypting a websockets connection and requiring a client give it's certificate during the initial http connection before upgrading to a encrypted WebSockets connection. What is the easiest way to get hold of the client certificate for a particular websockets connection?  I've only been able to do this by modifying the core Jetty code by passing the certificate to the websocket pojo in a modified websocketfactory.  I'm hoping there is an easier way, thanks!  - Erich _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] getting hold of the client certificate during an encry</header>
    <date>Mon Jun 10 18:17:33 CEST 2013</date>
    <body>Interesting request. Currently there is no support for that. Wonder where a good place for that would be ... Gut reaction is to make it available via the WebSocketCreator, letting you capture and hold onto it at websocket creation time. That would make it server side specific functionality, which is what i think you intend. Another option would be to expose the SSL details via the Session object, but what that would mean to the websocket-client implementation of Session I don't know (yet) -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Sun, Jun 9, 2013 at 8:40 AM, Erich Bremer erich@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty 9 as a Front-end Server</header>
    <date>Mon Jun 10 15:15:27 CEST 2013</date>
    <body>Hello all,   During my recent conversations on this list and the IRC channel, it was brought to my attention that using Nginx as a reverse proxy to Jetty is merely creating a bottleneck. I’ll gladly switch to using Jetty as the front-end server, as long as it meets the two conditions below:   ·         It is capable of handling hundreds, maybe even thousands of requests per second without significant latency (in a production environment). ·         There is functionality equivalent to Apache’s X-SendFile and Nginx’s X-Accel-Redirect headers. We need to be able to output a header from Railo that tells the server to stream out a static file of any size – Loading multi-gigabyte sized files into RAM is not the most efficient way of doing this.   So, can anybody vouch for this? And if so, what do I have to do to get the X-SendFile type functionality?</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9: Named Connectors and Virtual Hosts</header>
    <date>Mon Jun 10 15:08:34 CEST 2013</date>
    <body>Good news,   I solved this problem by completely removing the VirtualHost from the ims-login.com web app. This appears to have to have the effect that all requests that aren’t matched by any other web app go to this one.   My question is now, is this the expected behaviour? Or will there be issues later on?   From: jetty-users-bounces@xxxxxxxxxxx [mailto:jetty-users-bounces@xxxxxxxxxxx] On Behalf Of Joakim Erdfelt Sent: June-07-13 12:05 PM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9: Named Connectors and Virtual Hosts   What do you mean when you say ...    "However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector"?   Can you detail what you are doing, and what you are expecting? -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org   shane@xxxxxxxxxxxxx Hello, I am trying to set up a special configuration in Jetty whereby all requests on a specific IP address go to a specific WebApp. What I have done so far, is set up an extra HTTP connector named "IMSConnector", to do this I have added the following test to etc/jetty-http.xml:         &amp;lt;Set name="idleTimeout"&amp;gt;&amp;lt;Property name="http.timeout" This appears to be working, as the log files show references to 127.0.0.2:8082 via Telnet, and Nginx as a reverse-proxy. I have the following in an XML file under webapps directory: ims-login.com       &amp;lt;Item&amp;gt;*. ims-login.com According to the documentation, I should be able to use @IMSConnector to answer all requests on that connector. If I go to ims-login.com or anything.ims-login.com , it works exactly as it should. However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector. I use Nginx as a reverse-proxy, so requests on the external IP are proxied to 127.0.0.2:8082 on the server. I am certain this is nothing to do with Nginx, as connecting directly to 127.0.0.2:8082 via telnet and issuing a GET request has exactly the same result. Can anyone point out where I may be going wrong? _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users  </body>
  </mail>
  <mail>
    <header>Re: [jetty-users] NAT with HTTP 1.0 returns internal IP address</header>
    <date>Mon Jun 10 10:38:59 CEST 2013</date>
    <body>Hi, http://tomcat.apache.org/tomcat-6.0-doc/config/http.html For the record, this is now available out of the box in Jetty 9 using a HostHeaderCustomizer, see http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/tree/jetty-server/src/main/java/org/eclipse/jetty/server/HostHeaderCustomizer.java . Will be in 9.0.4. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>[jetty-users] getting hold of the client certificate during an encrypted</header>
    <date>Sun Jun 09 17:40:49 CEST 2013</date>
    <body>Hi, I have a case where I am encrypting a websockets connection and requiring a client give it's certificate during the initial http connection before upgrading to a encrypted WebSockets connection. What is the easiest way to get hold of the client certificate for a particular websockets connection?  I've only been able to do this by modifying the core Jetty code by passing the certificate to the websocket pojo in a modified websocketfactory.  I'm hoping there is an easier way, thanks!  - Erich</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Fri Jun 07 20:51:59 CEST 2013</date>
    <body>Thank you very much Alex. ----- Mensaje original ----- Para: jetty-users@xxxxxxxxxxx CC: Enviado: Viernes, 7 de junio, 2013 2:46 A.M. Asunto: Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory. It's most likely because you don't have any rules left for your RewriteHandler (i.o.w. you commented out the only "Call name='addRule'" present in jetty-rewrite.xml, but left the creation of RewriteHandler), so it gets a null pointer when it tries to apply them. I would guess that that's intended behavior -- either disable rewrite handler completely, or have some rules defined for it. Â Yes, this is true. If you have even a single rule, then there is no exception. If thatâs the intended behavior then it is OK. Â Thank you again for your help. O. O.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9: Named Connectors and Virtual Hosts</header>
    <date>Fri Jun 07 18:16:49 CEST 2013</date>
    <body>Here’s what I am trying to do. We are running a Railo server, and are building two independent but related web apps on the following domains:   ·         *.ims-login.com: This is our actual Information Management System, a single Railo application handles all domains. ·         www.fluentims.com : This will be the public-facing website for our product.   This setup as of right now is working perfectly for subdomains of ims-login.com, however what we would now like to do is allow for customers to have their own domain pointed to our IP address. For example “ims.some-domain.org”.   Of course, this won’t be matched by the wildcard sub-domain because the TLD is different. So what we are doing is having a secondary IP (we have 2 static IPs on the VPS) dedicated to the ims-login.com area.   So basically, any and all requests on this IP address, regardless of the domain, or HTTP Host header, should be going to the ims-login.com web application.   I expected that simply having a named connector, and referencing that name by @ConnectorName as a virtual host would work. But the result is just a 404, because it is not going to the correct web application context.   From: jetty-users-bounces@xxxxxxxxxxx [mailto:jetty-users-bounces@xxxxxxxxxxx] On Behalf Of Joakim Erdfelt Sent: June-07-13 12:05 PM To: JETTY user mailing list Subject: Re: [jetty-users] Jetty 9: Named Connectors and Virtual Hosts   What do you mean when you say ...    "However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector"?   Can you detail what you are doing, and what you are expecting? -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org   shane@xxxxxxxxxxxxx Hello, I am trying to set up a special configuration in Jetty whereby all requests on a specific IP address go to a specific WebApp. What I have done so far, is set up an extra HTTP connector named "IMSConnector", to do this I have added the following test to etc/jetty-http.xml:         &amp;lt;Set name="idleTimeout"&amp;gt;&amp;lt;Property name="http.timeout" This appears to be working, as the log files show references to 127.0.0.2:8082 via Telnet, and Nginx as a reverse-proxy. I have the following in an XML file under webapps directory: ims-login.com       &amp;lt;Item&amp;gt;*. ims-login.com According to the documentation, I should be able to use @IMSConnector to answer all requests on that connector. If I go to ims-login.com or anything.ims-login.com , it works exactly as it should. However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector. I use Nginx as a reverse-proxy, so requests on the external IP are proxied to 127.0.0.2:8082 on the server. I am certain this is nothing to do with Nginx, as connecting directly to 127.0.0.2:8082 via telnet and issuing a GET request has exactly the same result. Can anyone point out where I may be going wrong? _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users  </body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9: Named Connectors and Virtual Hosts</header>
    <date>Fri Jun 07 18:04:39 CEST 2013</date>
    <body>What do you mean when you say ...  "However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector"? Can you detail what you are doing, and what you are expecting? -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Fri, Jun 7, 2013 at 8:38 AM, Shane Curless shane@xxxxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty 9: Named Connectors and Virtual Hosts</header>
    <date>Fri Jun 07 17:38:29 CEST 2013</date>
    <body>Hello, I am trying to set up a special configuration in Jetty whereby all requests on a specific IP address go to a specific WebApp. What I have done so far, is set up an extra HTTP connector named "IMSConnector", to do this I have added the following test to etc/jetty-http.xml: This appears to be working, as the log files show references to via Telnet, and Nginx as a reverse-proxy. I have the following in an XML file under webapps directory: According to the documentation, I should be able to use @IMSConnector to answer all requests on that connector. If I go to ims-login.com or anything.ims-login.com, it works exactly as it should. However, I am getting a HTTP 404 when I try to go to a random domain linked to the IMSConnector. I use Nginx as a reverse-proxy, so requests on the external IP are proxied to 127.0.0.2:8082 on the server. I am certain this is nothing to do with Nginx, as connecting directly to 127.0.0.2:8082 via telnet and issuing a GET request has exactly the same result. Can anyone point out where I may be going wrong?</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Fri Jun 07 09:46:45 CEST 2013</date>
    <body>Thank you very much Alexei! Regex lookarounds are something I have trouble with.  Did you do this off the top of your head?</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Thu Jun 06 18:38:20 CEST 2013</date>
    <body>Thank you very much Alexei! Regex lookarounds are something I have trouble with.Â Did you do this off the top of your head? It worked perfectly, but I am trying to figure out how to debug this, so that I learn from all this. Â ÂÂÂÂÂÂÂÂÂÂÂ My first problem is that after getting your suggestion to work i.e. enabling OPTIONS=rewrite etc/jetty-rewrite.xml in my start.ini and putting your suggestion into jetty-rewrite.xml, I decided to comment out the new rule from jetty-rewrite.xml. I have no other rules at this time, but I am running Solr on this jetty instance. When I attempt to access / i.e. http://localhost:7070/ I get a 500 error, not a 404 error that I expected and I get the following exception in my log file. Â 1412 [main] INFOÂ org.apache.solr.servlet.SolrDispatchFilterÂ - user.dir=C:\Users\&amp;lt;&amp;lt;MyUserName&amp;gt;&amp;gt;\Documents\Jetty\NewJetty9 1412 [main] INFOÂ org.apache.solr.servlet.SolrDispatchFilterÂ - SolrDispatchFilter.init() done 2013-06-06 11:14:31.008:INFO:oejsh.ContextHandler:main: Started 2013-06-06 11:14:31.075:INFO:oejs.ServerConnector:main: 2013-06-06 11:14:31.207:WARN:oejs.HttpChannel:qtp1881283994-32: / java.lang.NullPointerException ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.rewrite.handler.RuleContainer.apply(RuleContainer.java:199) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.rewrite.handler.RuleContainer.matchAndApply(RuleContainer.java:186) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.rewrite.handler.RewriteHandler.handle(RewriteHandler.java:313) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.server.Server.handle(Server.java:445) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:260) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:225) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:596) ÂÂÂÂÂÂÂÂÂÂÂ at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:527) ÂÂÂÂÂÂÂÂÂÂÂ at java.lang.Thread.run(Unknown Source) Â Just to make sure, I restored jetty-rewrite.xml from the original download and I still get this exception. However, if I disable i.e. comment out the two lines mentioned above in the start.ini, then I correctly get the expected 404. Why does this happen? Â ÂÂÂÂÂÂÂÂÂÂÂ I also attempted to modify your suggestion to make rewrite possible from http://localhost:7070/foo/bar to http://localhost:7070/solr/#/foo/bar (Iâm just playing here). I tried the following: Â ÂÂÂ &amp;lt;New ÂÂÂÂÂ &amp;lt;Set ÂÂÂÂÂ &amp;lt;Set Â This did not work. Do I need to escape the # ? I didnât think # is a special character in regex. Â Thank you for all the help. O. O. ----- Mensaje original ----- Para: jetty-users@xxxxxxxxxxx CC: Enviado: Jueves, 6 de junio, 2013 1:59 A.M. Asunto: Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory. Hi there, http://localhost:7070/ to http://localhost:7070/solr/ It somewhat depends on what effect you want to achieve. I would assume you want http://localhost:7070/foo/bar be redirected to http://localhost:7070/solr/foo/bar ? In this case, regex would be something like: Here, regex matches any characters after root context, (excluding "/solr/", since that's where you want your redirect to go), and groups them so we can reference those in "replacement". It's not the most elegant regex, but at least it's (somewhat) readable. Hope that helps, Alex- http://www.eclipse.org/jetty/documentation/current/jetty-handlers.html#rewrite-handler . _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Thu Jun 06 08:59:06 CEST 2013</date>
    <body>Hi there, Perfect Joakim! Thank you very much. Could someone please show me how to edit the jetty-rewrite.xml to rewrite from http://localhost:7070/ to http://localhost:7070/solr/</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Add JNDI DataSource to WebAppContext</header>
    <date>Wed Jun 05 22:16:17 CEST 2013</date>
    <body>I'm getting following error on using  H2 DataSource: Can some one help me with writing a H2 datasource for Jetty? Error :  at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.newObj(XmlConfiguration.java:799) at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:413) at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configure(XmlConfiguration.java:289) at org.eclipse.jetty.xml.XmlConfiguration.configure(XmlConfiguration.java:248) at org.eclipse.jetty.webapp.JettyWebXmlConfiguration.configure(JettyWebXmlConfiguration.java:102) at org.eclipse.jetty.webapp.WebAppContext.configure(WebAppContext.java:464) at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1316) at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:724) at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:490) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69) at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108) at org.eclipse.jetty.server.Server.start(Server.java:342) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:90) at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:58) at org.eclipse.jetty.server.Server.doStart(Server.java:290) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69) at com.tutorial.WebServer.main(WebServer.java:22) On Wed, Jun 5, 2013 at 11:13 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx This is the code that I'm using to run the jetty server and how do I add a JNDI Data source MyH2DS to WebAppContext wac. JNDI DataSource: Jetty Server (Embedded) Code: try catch (Exception e) Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Wed, Jun 5, 2013 at 10:48 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx Hello, Is there a way to add JNDI DataSource to WebAppContext using Jetty API; without needing to create any context XML file? Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago .</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 22:08:14 CEST 2013</date>
    <body>Perfect Joakim! Thank you very much.   Could someone please show me how to edit the jetty-rewrite.xml to rewrite from http://localhost:7070/ to http://localhost:7070/solr/   As mentioned in my original post I looked at http://www.eclipse.org/jetty/documentation/current/jetty-handlers.html#rewrite-handler . Is this the correct way to add the rewrite rule? (I have absolutely no clue, but someone suggested this online.)             &amp;lt;New             &amp;lt;Set             &amp;lt;Set   Thank you again, O. O. ________________________________ Enviado: Miércoles, 5 de junio, 2013 11:45 A.M. Asunto: Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory. The best way to check the server classpath is to use the command line. Example: [jetty-distribution]$ java -jar start.jar --version Use "java -jar start.jar --help" for more information. Active Options: [Server, annotations, client, ext, jaas, jmx, jndi, jndi.demo, jsp, plus, resources, rewrite, websocket] Version Information on 36 entries in the classpath. Note: order presented here is how they would appear on the classpath.       changes to the OPTIONS=[option,option,...] command line option will be reflected here. This is the best way to see what your start.ini + start.d + command line will result in on the server classpath. -- webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty - cometd.org</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Configuring Jetty 9 websockets handling - Configuring</header>
    <date>Wed Jun 05 19:17:58 CEST 2013</date>
    <body>Some more information about the WebSocketCreator can be found in the documentation. http://www.eclipse.org/jetty/documentation/current/jetty-websocket-server-api.html#d0e17384 -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 10:14 AM, Max Kington mkington@xxxxxxxxxxxxx _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Configuring Jetty 9 websockets handling - Configuring</header>
    <date>Wed Jun 05 19:17:26 CEST 2013</date>
    <body>Some more information about the WebSocketCreator can be found in the docs. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 10:14 AM, Max Kington mkington@xxxxxxxxxxxxx _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Configuring Jetty 9 websockets handling - Configuring</header>
    <date>Wed Jun 05 19:14:07 CEST 2013</date>
    <body>Apologies, I obviously didn't come by this when I was digging around.  WebSocketCreator is a slicker/higher level concept than I had perhaps realized and not looked closesly enough at it. Cheers, Max p.s. Thanks for the prompt reply too. On 05/06/2013 18:03, Joakim Erdfelt This was answered on stackoverflow ... http://stackoverflow.com/questions/15646213/how-do-i-access-instantiated-websockets-in-jetty-9/15649791#15649791 In short, look into the WebSocketCreator concept. Note, the WebSocketCreator is a Jetty concept.  This ability is not present on the JSR-356 standard. -- Joakim Erdfelt webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty - cometd.org On Wed, Jun 5, 2013 at 9:56 AM, Max Kington Hi Folks, I was reading the design thread with interest and look forward to getting my mits onto 9.1.  I have a couple of questions, the design ethos behind them now start to make more obvious sense after reading the design thread. I have a Simple server: With a simple servlet in turn: @Override and a connection handler: etc I understand the desire to ensure the thread safety of the servlet and the connection handler however, it makes obtaining shared resources inside the connection handler if not tricky, certainly inelegant.  I have a set of message processors which exist to handle the messages all of which are threadsafe and consume a number of other components, to actually do what the client needs me to.  What I need to do is inject them somehow into my ConnectionHandler.  I can certainly use some synchrnoized static factories to achieve this but that's pretty bone. Is there another interface (configurable? context? Servers love a "context" interface) that I can have connection handler implement to be able to pass in some of the *stuff* it needs?  Do I need to start looking at creating my own WebSocketServletFactory or WebSocketServlet? Trawling through the code that looks all closer to the knuckle than I need to be.  FWIW I am "sprung". Cheers, Max _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Configuring Jetty 9 websockets handling - Configuring</header>
    <date>Wed Jun 05 19:03:17 CEST 2013</date>
    <body>This was answered on stackoverflow ... http://stackoverflow.com/questions/15646213/how-do-i-access-instantiated-websockets-in-jetty-9/15649791#15649791 In short, look into the WebSocketCreator concept. Note, the WebSocketCreator is a Jetty concept.  This ability is not present on the JSR-356 standard. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 9:56 AM, Max Kington mkington@xxxxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Configuring Jetty 9 websockets handling - Configuring	Conn</header>
    <date>Wed Jun 05 18:56:50 CEST 2013</date>
    <body>Hi Folks, I was reading the design thread with interest and look forward to getting my mits onto 9.1.  I have a couple of questions, the design ethos behind them now start to make more obvious sense after reading the design thread. I have a Simple server: With a simple servlet in turn: @Override and a connection handler: etc I understand the desire to ensure the thread safety of the servlet and the connection handler however, it makes obtaining shared resources inside the connection handler if not tricky, certainly inelegant.  I have a set of message processors which exist to handle the messages all of which are threadsafe and consume a number of other components, to actually do what the client needs me to.  What I need to do is inject them somehow into my ConnectionHandler.  I can certainly use some synchrnoized static factories to achieve this but that's pretty bone. Is there another interface (configurable? context? Servers love a "context" interface) that I can have connection handler implement to be able to pass in some of the *stuff* it needs?  Do I need to start looking at creating my own WebSocketServletFactory or WebSocketServlet? Trawling through the code that looks all closer to the knuckle than I need to be.  FWIW I am "sprung". Cheers, Max</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 18:45:48 CEST 2013</date>
    <body>The best way to check the server classpath is to use the command line. Example: [jetty-distribution]$ java -jar start.jar --version Use "java -jar start.jar --help" for more information. Active Options: [Server, annotations, client, ext, jaas, jmx, jndi, jndi.demo, jsp, plus, resources, rewrite, websocket] Version Information on 36 entries in the classpath. Note: order presented here is how they would appear on the classpath.       changes to the OPTIONS=[option,option,...] command line option will be reflected here. This is the best way to see what your start.ini + start.d + command line will result in on the server classpath. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 9:39 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Wed Jun 05 18:42:35 CEST 2013</date>
    <body>Inline ... On Thu, May 30, 2013 at 8:06 AM, Nils Kilden-Pedersen nilskp@xxxxxxxxx Each connection's Endpoint handling is handled via a single Thread obtained from the Server thread pool. Most events notified back to the end user's local WebSocket implementation are on the same Thread. However, starting with 9.1 (in active development), those endpoints that register an interest in receiving messages as InputStream (BINARY messages) or Reader (TEXT / UTF8 messages) will have the stream dispatched to the Local WebSocket Endpoint on a different thread.   We use java.nio.ByteBuffers extensively within Jetty 9. Each jetty server instance has its own  org.eclipse.jetty.io.ByteBufferPool instance that all connectors, connections, and thread on that server share. (Curious note, it is possible to have multiple jetty server instances per JVM, but that's an atypical configuration) Where appropriate we use direct ByteBuffers already, however with the various extensions in the mix, it is often not possible to carry that direct ByteBuffer all the way through from the Local WebSocket Endpoint down to the network bytes layer.   Since this will introduce a new behavior, it will certainly not be part of 9.0.x It is almost certain to be part of 9.1 (likely along with the Servlet API 3.1 effort)   Glad to help </body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 18:39:12 CEST 2013</date>
    <body>I am  not sure if jetty-rewrite.jar has been added to the classpath  - check your .classpath file for  jetty-rewrite Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Wed, Jun 5, 2013 at 11:35 AM, O. Olson olson_ot@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 18:35:25 CEST 2013</date>
    <body>Thank you Joakim &amp;amp; Thomas. How do I add jetty-rewrite.jar to the class path? I first added the following to the end of my start.ini: OPTIONS=rewrite etc/jetty-rewrite.xml             Without any modifications to jetty-rewrite.xml, I do not get any exceptions. However, I am not sure if jetty-rewrite.jar has been added to the classpath. According to the link you sent me, I did: java -jar start.jar --dry-run The output of this did not seem to have jetty-rewrite.jar. It did however have a number of jars in the lib directory. Any clues on how to add jetty-rewrite.jar to the class path? Thank you, O. O. ________________________________ Enviado: Miércoles, 5 de junio, 2013 10:52 A.M. Asunto: Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory. Correction ... OPTIONS=rewrite -- webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty - cometd.org http://localhost:7070/ to http://localhost:7070/solr/ . I looked at http://www.eclipse.org/jetty/documentation/current/jetty-handlers.html#rewrite-handler and I added the following to the bottom of my jetty.xml. https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Add JNDI DataSource to WebAppContext</header>
    <date>Wed Jun 05 18:13:28 CEST 2013</date>
    <body>This is the code that I'm using to run the jetty server and how do I add a JNDI Data source MyH2DS to WebAppContext wac. JNDI DataSource: Jetty Server (Embedded) Code: try catch (Exception e) Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Wed, Jun 5, 2013 at 10:48 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] create user programatically</header>
    <date>Wed Jun 05 17:55:33 CEST 2013</date>
    <body>Users are part of the security system that you choose to use. If you choose to use the security realms built into the servlet spec, then you'll want to look into possibly creating your own LoginService. http://www.eclipse.org/jetty/documentation/current/configuring-security.html Take a look at the default HashLoginService  http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/tree/jetty-security/src/main/java/org/eclipse/jetty/security/HashLoginService.java -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 7:43 AM, Dimitar Georgiev dimitar.georgiev.bg@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 17:52:27 CEST 2013</date>
    <body>Correction ... OPTIONS=rewrite -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 8:51 AM, Joakim Erdfelt joakim@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 17:51:17 CEST 2013</date>
    <body>Add OPTION=rewrite -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, Jun 5, 2013 at 8:06 AM, O. Olson olson_ot@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Add JNDI DataSource to WebAppContext</header>
    <date>Wed Jun 05 17:48:16 CEST 2013</date>
    <body>Hello, Is there a way to add JNDI DataSource to WebAppContext using Jetty API; without needing to create any context XML file? Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago .</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 17:24:38 CEST 2013</date>
    <body>Hi O., you're most probably not adding the jetty-rewrite.jar to your classpath. In your start.ini file you will find an OPTIONS line. Simply add rewrite to the OPTIONS list and this problem should be solved. Have a look at the documentation for further details: http://www.eclipse.org/jetty/documentation/current/advanced-jetty-start.html Cheers, Thomas Am 6/5/13 5:06 PM, schrieb O. Olson: Hi, I did not notice this before, but I get an exception when I started Jetty on the Commandline. I did not notice this before because I thought the exception should have been redirected to the log file. 2013-06-05 09:37:03.279:WARN:oejx.XmlConfiguration:main: Config error at &amp;lt;New id ="Rewrite" class="org.eclipse.jetty.rewrite.handler.RewriteHandler"&amp;gt;&amp;lt;Set name="r ewriteRequestURI"&amp;gt;true&amp;lt;/Set&amp;gt;&amp;lt;Set name="rewritePathInfo"&amp;gt;false&amp;lt;/Set&amp;gt;&amp;lt;Set name="or iginalPathAttribute"&amp;gt;requestedPath&amp;lt;/Set&amp;gt;&amp;lt;Call name="addRule"&amp;gt;&amp;lt;Arg&amp;gt;|          &amp;lt;Ne w class="org.eclipse.jetty.rewrite.handler.RedirectPatternRule"&amp;gt;&amp;lt;Set name="patte rn"&amp;gt;^$&amp;lt;/Set&amp;gt;&amp;lt;Set name="replacement"&amp;gt;/solr&amp;lt;/Set&amp;gt;&amp;lt;/New&amp;gt;|        &amp;lt;/Arg&amp;gt;&amp;lt;/Call&amp;gt;&amp;lt;/New java.lang.ClassNotFoundException:</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 17:06:09 CEST 2013</date>
    <body>Hi,               I did not notice this before, but I get an exception when I started Jetty on the Commandline. I did not notice this before because I thought the exception should have been redirected to the log file.   2013-06-05 09:37:03.279:WARN:oejx.XmlConfiguration:main: Config error at &amp;lt;New id ="Rewrite" class="org.eclipse.jetty.rewrite.handler.RewriteHandler"&amp;gt;&amp;lt;Set name="r ewriteRequestURI"&amp;gt;true&amp;lt;/Set&amp;gt;&amp;lt;Set name="rewritePathInfo"&amp;gt;false&amp;lt;/Set&amp;gt;&amp;lt;Set name="or iginalPathAttribute"&amp;gt;requestedPath&amp;lt;/Set&amp;gt;&amp;lt;Call name="addRule"&amp;gt;&amp;lt;Arg&amp;gt;|          &amp;lt;Ne w class="org.eclipse.jetty.rewrite.handler.RedirectPatternRule"&amp;gt;&amp;lt;Set name="patte rn"&amp;gt;^$&amp;lt;/Set&amp;gt;&amp;lt;Set name="replacement"&amp;gt;/solr&amp;lt;/Set&amp;gt;&amp;lt;/New&amp;gt;|        &amp;lt;/Arg&amp;gt;&amp;lt;/Call&amp;gt;&amp;lt;/New org.eclipse.jetty.rewrite.handler.RewriteHan dler in file:/C:/Users/&amp;lt;&amp;lt;MyUserName&amp;gt;&amp;gt;/Documents/Jetty/Jetty9/etc/jetty.xml java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.eclipse.jetty.start.Main.invokeMain(Main.java:509)         at org.eclipse.jetty.start.Main.start(Main.java:651)         at org.eclipse.jetty.start.Main.main(Main.java:99) Caused by: java.lang.ClassNotFoundException: org.eclipse.jetty.rewrite.handler.R ewriteHandler         at java.net.URLClassLoader$1.run(Unknown Source)         at java.net.URLClassLoader$1.run(Unknown Source)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source)         at java.lang.ClassLoader.loadClass(Unknown Source)         at org.eclipse.jetty.util.Loader.loadClass(Loader.java:100)         at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.nodeClas s(XmlConfiguration.java:354)         at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.newObj(X mlConfiguration.java:743)         at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configur e(XmlConfiguration.java:413)         at org.eclipse.jetty.xml.XmlConfiguration$JettyXmlConfiguration.configur e(XmlConfiguration.java:344)         at org.eclipse.jetty.xml.XmlConfiguration.configure(XmlConfiguration.jav a:262)         at org.eclipse.jetty.xml.XmlConfiguration$1.run(XmlConfiguration.java:12 24)         at java.security.AccessController.doPrivileged(Native Method)         at org.eclipse.jetty.xml.XmlConfiguration.main(XmlConfiguration.java:116 0)         ... 7 more   Usage: java -jar start.jar [options] [properties] [configs]        java -jar start.jar --help  # for more information     I think this may be the reason it is failing to redirect. O. O. ________________________________ Enviado: Miércoles, 5 de junio, 2013 9:30 A.M. Asunto: Jetty 9 Redirect from Root to Sub-Directory. Hi,             I have downloaded Jetty 9, and I am curious how to do a redirect from the root to a particular sub directory. I basically want to redirect from http://localhost:7070/ to http://localhost:7070/solr/ . I looked at http://www.eclipse.org/jetty/documentation/current/jetty-handlers.html#rewrite-handler and I added the following to the bottom of my jetty.xml.     &amp;lt;New id="Rewrite"       &amp;lt;Set       &amp;lt;Set       &amp;lt;Set       &amp;lt;!-- redirect the response. This is a redirect which is visible to the browser.            After the           &amp;lt;New             &amp;lt;Set             &amp;lt;Set             &amp;lt;!-- add     &amp;lt;Set  Is this pattern "^$" correct for my situation? Thank you for all your help. O. O.</body>
  </mail>
  <mail>
    <header>[jetty-users] create user programatically</header>
    <date>Wed Jun 05 16:43:23 CEST 2013</date>
    <body>Hi, Is there a way to create a new jetty user from within a running jetty app? The end-user scenario is self-registration for a website. Preferably this should be done through some kind of API which is agnostic of the currently used user storage. If not, what is the most secure non-programmatic way to achieve this, which comes out of the box with Jetty? Is db store with Crypt encryption my best bet? If I add a new user to the DB (or the property file if i am using that storage), will it be read by Jetty on the next logon attempt? Thanks in advance. Best Regards, Dimitar</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty 9 Redirect from Root to Sub-Directory.</header>
    <date>Wed Jun 05 16:30:06 CEST 2013</date>
    <body>Hi,               I have downloaded Jetty 9, and I am curious how to do a redirect from the root to a particular sub directory. I basically want to redirect from http://localhost:7070/ to http://localhost:7070/solr/ . I looked at http://www.eclipse.org/jetty/documentation/current/jetty-handlers.html#rewrite-handler and I added the following to the bottom of my jetty.xml.       id="Rewrite"                           the response. This is a redirect which is visible to the browser.            After the                                                                                                             Is this pattern "^$" correct for my situation? Thank you for all your help.   O. O.</body>
  </mail>
  <mail>
    <header>[jetty-users] How to configure Jetty 9 so x509 client certificate is tra</header>
    <date>Wed Jun 05 15:27:53 CEST 2013</date>
    <body>Hello all, I'm trying to setup Jetty 9 so that client certificate is passed with HTTPs requests. I followed current instructions when setting up ssl (including certificates generation): http://www.eclipse.org/jetty/documentation/current/configuring-ssl.html . I also have a dummy client certificate that I added to my FireFox certificates. My very basic simple servlet that prints out value of always prints null back instead of Object reference. The odd thing is that server doesn't "ask" for user certificate when I call servlet (i.o.w. there is no popup "select certificate", as it is for instance when I connect to Apache's ssl connection) via https://myserver:8443/simple-servlet . I have a working setup with Jetty 6.1.26 and AJP connector (so request chain looks like Apache:443 -&amp;gt; Jetty's AJP:8009). In this environment, the same servlet outputs an Object reference (naturally, url is slightly different, https://myserver:443/simple-servlet ). I wonder whether I'm missing something in my Jetty 9 ssl/https configuration files? So far I only found a number of references to setting "NeedClientAuth" property to true for SslContextFactory, but doing that only causes the request to be aborted by Jetty (nothing gets logged in stderr, but I can see that in Firebug's NET tab). It also is very possible I'm missing something obvious, or trying to do something that is impossible -- this area is fairly new to me. I can provide my current config files if that's needed. Thanks in advance, Alex-</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty Http client support for traversing through	proxies.</header>
    <date>Wed Jun 05 06:46:02 CEST 2013</date>
    <body>Hi , I am trying to use Jetty Http client(in cometd with Jdk6) and wondering what versions of Jetty http client support proxies and which schemes. Looking at Jetty9 documentation it supports proxies for Basic and Digest schemes http://www.eclipse.org/jetty/documentation/current/http-client-other.html#http-client-proxy As Jetty9 works with only JDK7+ and I am looking for any JDK6 netty http clients, can some one help on versions of jetty http client that has proxy support. Also let me know the supported schemes. Thanks Vamsi</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Tue Jun 04 15:25:27 CEST 2013</date>
    <body>Joakim, any chance you could answer my additional questions? On Thu, May 30, 2013 at 10:06 AM, Nils Kilden-Pedersen nilskp@xxxxxxxxx Â Is this a single thread, multiple, or configurable? Meaning the async selector? Â Â Buffering? Is this handled per connection or system wide, e.g. a buffer pool? Â ÂHave you considered direct memory buffers? They seem ideal for this sort of thing. Â Â ÂWhat's the alternative? 9.0 or 9.2? Â</body>
  </mail>
  <mail>
    <header>[jetty-users] 3rd party cookies</header>
    <date>Tue Jun 04 07:21:22 CEST 2013</date>
    <body>Hi, Story: My web app which is deployed on jetty is also used inside iframe in another web app. User browser settings are set to not accept 3-rd party cookies. When user first visit the app as 1-st party a cookie with JSESSIONID will be created for him.  Then when he go to app via iframe all requests will have jsessionid inside request params.  Problem: When Jetty is looking for session it first browse for cookies and then for jsession param in request. And of course it will get wrong session because this one from cookie is old. Is it a bug or expected behavior ? Does jetty should browse for those cookies ? Or maybe order of looking for session should be different ?  It works in glassfish. Solution: If its not a bug can it be somehow configurable ? For now i need to provide my own implementation of  SessionHandler.  Only to reverse order in  checkRequestedSessionId  method. I saw that i can disable cookies via property but its not an option. Waiting for hints. Cheers, Michal</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Tue Jun 04 04:05:42 CEST 2013</date>
    <body>https://bugs.eclipse.org/bugs/show_bug.cgi?id=409801 Happy to test once it's landed, I'll keep an eye out for an update on the bugzilla bug.  Thanks Jan! On Mon, Jun 3, 2013 at 8:48 PM, Jan Bartel janb@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Tue Jun 04 03:48:02 CEST 2013</date>
    <body>If you could open a bugzilla for it, it would be good! And also standby for testing of it when ready. thanks, Jan On 4 June 2013 11:42, Craig Ching craigching@xxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Tue Jun 04 03:42:29 CEST 2013</date>
    <body>That would definitely work for me.  Do you need me to do anything?  Open a defect?  Agree to test it? ;-) Thanks Jan, much appreciated! On Mon, Jun 3, 2013 at 8:27 PM, Jan Bartel janb@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Tue Jun 04 03:27:19 CEST 2013</date>
    <body>Hhm, well we could certainly implement a fallback scheme: if relative     if found relative to bundle, job done     else if found relative to jetty.home, job done     else exception WDYT? Jan On 4 June 2013 11:23, Craig Ching craigching@xxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Tue Jun 04 03:23:40 CEST 2013</date>
    <body>Right, but absolute doesn't work for me, I need it to be relative, even relative to jetty.home is fine, but relative. On Fri, May 31, 2013 at 11:35 PM, Jan Bartel janb@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Searching for the missing link in configuring the	Asyn</header>
    <date>Sun Jun 02 22:06:31 CEST 2013</date>
    <body>looks like you are using Jetty 6, which has been EOL for a couple of years now.. you should use jetty 7, 8 or 9 http://www.eclipse.org/jetty/documentation/current/proxy-servlet.html cheers, jesse -- jesse mcconnell jesse.mcconnell@xxxxxxxxx On Sun, Jun 2, 2013 at 9:28 AM, Erwin Hogeweg erwin.hogeweg@xxxxxx If the class is really inÂorg.eclipse.jetty.servlets.ProxyServlet$Transparent. Problem solved. Regards, Erwin Hi, For the past couple of hours (almost a day now), I have been trying to wrap my mind around setting up a simple transparent proxy. According to the documentation Jetty can do that just fine, right out of the box. I can't figure out how to configure it though. I feel I am missing a link (possibly in my brain...). I expect I need something like: java -jar start.jar OPTIONS=All etc/jetty-proxy.xml Âand than configure the servlet as specified here: http://docs.codehaus.org/display/JETTY/Asynchronous+Proxy+Servlet From there it gets a tad fuzzy though. Do I need to create a web.xml file, if so, where? Or add that servlet definition to the override-web.xml? In both casesÂI am getting the dreaded ClassNotFoundExceptions on the org.mortbay.proxy.AsyncProxyServlet$Transparent class. I have read most of the documents, watched Greg's Getting Started video several times, but the penny hasn't dropped yet. Any help is highly appreciated. Kind Regards, Erwin _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Searching for the missing link in configuring the Asyn</header>
    <date>Sun Jun 02 16:28:09 CEST 2013</date>
    <body>All, Duh... Of course I get this exception... ClassNotFoundExceptions on the org.mortbay.proxy.AsyncProxyServlet$Transparent class.</body>
  </mail>
  <mail>
    <header>[jetty-users] Searching for the missing link in configuring the Asynchro</header>
    <date>Sat Jun 01 22:50:33 CEST 2013</date>
    <body>Hi, For the past couple of hours (almost a day now), I have been trying to wrap my mind around setting up a simple transparent proxy. According to the documentation Jetty can do that just fine, right out of the box. I can't figure out how to configure it though. I feel I am missing a link (possibly in my brain...). I expect I need something like: java -jar start.jar OPTIONS=All etc/jetty-proxy.xml  and than configure the servlet as specified here: http://docs.codehaus.org/display/JETTY/Asynchronous+Proxy+Servlet From there it gets a tad fuzzy though. Do I need to create a web.xml file, if so, where? Or add that servlet definition to the override-web.xml? In both cases I am getting the dreaded ClassNotFoundExceptions on the org.mortbay.proxy.AsyncProxyServlet$Transparent class. I have read most of the documents, watched Greg's Getting Started video several times, but the penny hasn't dropped yet. Any help is highly appreciated. Kind Regards, Erwin</body>
  </mail>
  <mail>
    <header>[jetty-users] How to configure embedded jetty in RAP-2.0?</header>
    <date>Sat Jun 01 19:04:25 CEST 2013</date>
    <body>Hi, Is it possible to use jetty.xml (or any other server configuration file) in an Eclipse RAP-2.0 application? I have an application that is currently running with a contextPath, but it needs to run under the root path ("/"). My thought is to configure a RewriteHandler but I can't figure out how to specify that as VM Arguments. Any suggestions are highly appreciated. Kind Regards, Erwin</body>
  </mail>
  <mail>
    <header>[jetty-users] http request not redirecting to https and secure port</header>
    <date>Sat Jun 01 10:08:49 CEST 2013</date>
    <body>Hi,   Using Jetty 6.1.26, I want requests on http port 9080 to redirect to https port 8443. The http is redirected to https but the port 9080 remains the same as in the request and I need the port number to change as well.   What settings will achieve this?   John</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Sat Jun 01 06:35:42 CEST 2013</date>
    <body>Yes, the webdefault.xml specified in the Jetty-defaultWebXmlFilePath can be an absolute, external location, *or* internal to the bundle. Jan On 1 June 2013 00:48, Craig Ching craigching@xxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] webdefault in OSGi</header>
    <date>Fri May 31 16:48:28 CEST 2013</date>
    <body>Hi Jan, Thanks for the information, I had found that, but what I really wanted to be able to do was have the webdefault editable outside of a bundle so that a user could make a change to it if necessary.  But let me rethink that, it might not be necessary for this. Thanks again! Cheers, Craig On Mon, May 27, 2013 at 12:16 AM, Jan Bartel janb@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty8: Add listener after ServletContextHandler	started</header>
    <date>Fri May 31 16:21:21 CEST 2013</date>
    <body>Hi, i figured out, that jetty . ServletContextHandler.Context throws an exception if a li stener is added after the context became started. I n my case i am using HttpService to register a servlet . But t his serv let uses the ServletContext to add a listener to it and an exception bec omes thrown. Ist there a way to av o id that problem? Thanks, Florian</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 : Jasper not saving .class files to work	dir?</header>
    <date>Fri May 31 03:31:39 CEST 2013</date>
    <body>Simon, I updated the documentation, which is here: http://www.eclipse.org/jetty/documentation/   I haven't updated the wiki for jetty-7/8 as those versions are passing into history, although if I get a spare minute I'll see what I can do. BTW, you may want to get your product listed here in the Jetty Powered pages: http://www.eclipse.org/jetty/powered/ Jan On 31 May 2013 11:15, Simon Mills simonmills70@xxxxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 : Jasper not saving .class files to work dir?</header>
    <date>Fri May 31 03:15:25 CEST 2013</date>
    <body>Jan, thanks so much for your help. I used 'saveByteCode' because that is how it is written in the docs, at  http://wiki.eclipse.org/Jetty/Howto/Configure_JSP The page also says "if the value you set doesn't take effect, try using all lower case instead of camel case", and I had tested "savebytecode" as well, but it did not occur to me to try a mix of lowercase and camelcase... Perhaps you could update the documentation so that others don't have the same problem? Also this as a general feedback - having .class files precompiled in the work dir is a big help performance wise, because when a server restarts for whatever reason it does not have to recompile everything again. When you have hundreds of jsps in a web app, it does make a difference. Our app also does an 'inside precompilation' at startup, by connecting to itself and loading each jsp. If no .class files are saved, at every restart it takes minutes of 100% cpu to recompile everything -  something that did not occur with Jetty 7. I know for sure that  other developers use the same method, as it's something I've seen in several blogs of JSP developers. And even if you don't do a precompilation, your first customer of the day will experience slow response times at every click. Was it ever considered the idea of leaving the default behavior that was in Jetty 7 in newer versions? I'm not sure how many end users realize that this is the new 'normal'. Anyway, just a personal feedback. Thanks for your prompt help, it saved my day. Date: Fri, 31 May 2013 10:14:24 +1000 From: janb@xxxxxxxxxxx To: jetty-users@xxxxxxxxxxx Subject: Re: [jetty-users] Jetty 9 : Jasper not saving .class files to work	dir? Simon, Previous versions of jsp (eg in jetty-7) always used the JDT java compiler. That compiler always writes out the class files to disk. Jasper changed in version 2.2 to prefer the jvm's compiler, which does not write out the classes unless you explicitly set the init-param "saveBytecode" for the jsp servlet. Note the exact capitalization - your example posted "saveByteCode" with proper camel-case but that's not what they use :) Make sure when you're adding that init-param to the jsp servlet that if you edit $JETTY_HOME/etc/webdefault.xml that you need to ensure that file is applied to your webapp (by default it is not - the webdefault.xml inside the jetty-webapp jar is used instead) by calling setDefaultsDescriptor() on your context. regards Jan On 30 May 2013 19:38, Simon Mills simonmills70@xxxxxxxxxxx Hi All, after recently upgrading from Jetty 7 to Jetty 9, I noticed that in the scratch/work dir, Jasper no longer writes a .class file for each JSP that it compiles. It only writes the generated .java file. the JSPs work fine, but there seems to be no .class file written to the scratch/work dir. This used to occur in Jetty 7. To explain what I'm talking about: 1. I get latest Jetty 9 distribution (I used 9.0.3.v20130506) 2. I run it with "java -jar start.jar" 3. I open http://127.0.0.1:8080/test/jsp/dump.jsp  in my browser, and see the JSP's correct output 4. somewhere in my temp directory (for me it's C:\Users\simon\AppData\Local\Temp\jetty-0.0.0.0-8080-test.war-_test-any-\jsp\org\apache\jsp\jsp), I find the file dump_jsp.java being generated, but no .class The same occurs in Jetty 8.1.11: no .class file. If however I do the same test in Jetty 7 (7.1.6.v20100715 is the version I was using in the past), I see the file dump_jsp.class in the corresponding scratch dir for that server. For reference, I used JDK 1.7.0_21 64 bit for Windows in all tests. This is just with the plain distribution, without any change from me.  I also tried editing the webdefault.xml in my own web app, adding/removing keepgenerated,  saveByteCode, and other JspServlet init parameters, but all I could do was turn off the preservation of the .java file via keepgenerated. But I cannot get to see the .class file saved to disk anywhere. I also thought this could be a compilation error (hence the reason why the .java file is still around), but it doesn't make much sense, because I can see the correct output of the jsp in the browser... and there are no error messages in the server's console either. Is there a reason for this? How does this affect response times when restarting the server? Does Jetty/Jasper have to recompile that .java file every time the server is restarted? Or, worse, every time the jsp is accessed? If this is covered somewhere in the documentation or faq, please forgive me for not finding it. I searched around for half a day but could not find any mention of this anywhere. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty 9 : Jasper not saving .class files to work	dir?</header>
    <date>Fri May 31 02:14:24 CEST 2013</date>
    <body>Simon, Previous versions of jsp (eg in jetty-7) always used the JDT java compiler. That compiler always writes out the class files to disk. Jasper changed in version 2.2 to prefer the jvm's compiler, which does not write out the classes unless you explicitly set the init-param "saveBytecode" for the jsp servlet. Note the exact capitalization - your example posted "saveByteCode" with proper camel-case but that's not what they use :) Make sure when you're adding that init-param to the jsp servlet that if you edit $JETTY_HOME/etc/webdefault.xml that you need to ensure that file is applied to your webapp (by default it is not - the webdefault.xml inside the jetty-webapp jar is used instead) by calling setDefaultsDescriptor() on your context. regards Jan On 30 May 2013 19:38, Simon Mills simonmills70@xxxxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Get Rid of Warning: test-realm is deployed.</header>
    <date>Thu May 30 21:53:26 CEST 2013</date>
    <body>yes, smoke those and you should be fine, if you still warnings let us know and we'll update the documentation to reflect this, thanks cheers, jesse -- jesse mcconnell jesse.mcconnell@xxxxxxxxx On Thu, May 30, 2013 at 2:49 PM, O. Olson olson_ot@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Get Rid of Warning: test-realm is deployed.</header>
    <date>Thu May 30 21:49:59 CEST 2013</date>
    <body>Hi,               I am new to Jetty. I have downloaded Jetty 9 on Windows 7. Unfortunately, when I start it I get the following warning:   2013-05-30 14:39:40.952:WARN::main: test-realm is deployed. DO NOT USE IN PRODUCTION!   How do I disable this warning?   From http://www.eclipse.org/jetty/documentation/current/quickstart-running-jetty.html it seems that this warning is because this example apps seem to be deployed. How do I disable them? (This page: http://www.eclipse.org/jetty/documentation/current/quickstart-deploying-webapps.html does not explain.)               I am wondering if I should just delete 900-demo.ini in the start.d directory, and the webapps.demos directory. Is this the correct way of disabling these demos?   Thank you, O. O.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Thu May 30 17:06:12 CEST 2013</date>
    <body>Thanks for the detailed answer. I have a few questions and comments inline. On Thu, May 30, 2013 at 9:01 AM, Joakim Erdfelt joakim@xxxxxxxxxxx Is this a single thread, multiple, or configurable? Meaning the async selector? Â Buffering? Is this handled per connection or system wide, e.g. a buffer pool? Â Have you looked into direct memory buffers? They seem ideal for this sort of thing. Â What's the alternative? 9.0 or 9.2? Â Very much, yes. Thanks. Â</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Thu May 30 16:01:09 CEST 2013</date>
    <body>That's an awfully wide open topic. ;-) A quick breakdown of everything from the start (obviously from a Jetty 9.0.x perspective)... In order to have a websocket, you must first create the universe. skipping a few obvious steps... The incoming connection arrives to Jetty as a standard HTTP (plain or SSL) connection, which hits the normal flow of internal Jetty handlers and eventually makes its way to the WebSocketServlet implementation. The WebSocket Upgrade Handshake: At this point a few tests are done against the request headers to determine if its a HTTP upgrade, is it a WebSocket upgrade, does the origin match, etc. If this all checks out then the WebSocketCreator is asked for a websocket instance.  The default creator will create a new instance of the WSE (WebSocket Endpoint) each time, but you can provide your own logic and reuse instances or even go stateless with a single instance for all WSEs if you so desire. If the WebSocketServlet gets a WSE at this point it proceeds to respond on the HTTP that the upgrade is successful, sending HTTP Response 101 Switching Protocols. The WebSocket Initialization: In the setup of the WebSocketConnection , the following is initialized as well..  * WebSocket Session (this represents the connected session)  * WebSocket Parser (frame parser)  * WebSocket Generator (frame generator)  * EventDriver (this is the common abstraction for talking to a WSE instance using any of the WSE definition techniques)  * WebSocket Extension Stack (using any of the negotiated extensions during the WebSocket upgrade handshake) The plumbing from the physical connection to the WSE is done by chaining up IncomingFrames and OutgoingFrames implementations. It looks sort of like this ... Now, internally to Jetty, the WebSocketServlet has notified the HTTP handling that the HTTP connection handling is now a WebSocketConnection. The WebSocketConnection is setup with the WebSocket Endpoint The Open WebSocket: At this point the RFC6455 state transitions from CONNECTING to OPEN. The local WSE is notified that the Session is now open. The JIOE (Jetty I/O Endpoint) now does its Async/NIO handling of read and write interests and notifying the WebSocketConnection when the physical connection is capable of doing a read or a write. If a read, it fills up an input buffer and parses what it can. The Parser notifies its IncomingFrames on each frame encountered, which goes through the extension stack and eventually hits the WSE. If its a write, the Connection's outgoing queue of frames is used to create a output buffer via the Generator. At this point, the Thread that is handling the JIOE side is the same thread that Jetty pulled from the ThreadPool for the HTTP handling. When the WebSocket Connection gets its read/write events it will continue to use that same thread to parse, send the frame through the extension stack, and hit the EventDriver, and eventually the WSE. When the WSE gets the event for say a Text message, then its actually operating on the same Thread that the JIOE is using. When a JIOE event to write is detected, the same Thread is used to generate and write to the network. Memory consumption is not constant with WebSocket, due to the nature of the message based (not streaming) WebSocket protocol. Everything you do is based on a WebSocket message. reading and writing. Per RFC6455, a WebSocket message has no upper limit in size, only the individual frames do. A WebSocket message is 0..n frames.  a frame can be 0 to 9,223,372,036,854,775,807 bytes in size (63-bit value btw). In Jetty, we obviously can't support that with modern hardware (who has 9 exabytes of memory on their computer??) So we provide a means to limit the per-message size via the WebSocketPolicy.setMaxMessageSize()  which will be checked on incoming frames, if in violation it results in a RFC6455 close code 1009 MESSAGE_TOO_LARGE . Outgoing messages are not checked, as it should be obvious to you if you can handle it or not. Dealing with Extensions: The need to support RFC6455 WebSocket extensions means we have a layer between the WSE and the physical connection called the ExtensionStack. This complicates matters as the extensions can change the framing, the number of frames, etc, making the traditional approach of read/write to the physical connection from the WSE impossible. Performance with Jetty 9.0.3: We've done some simple (really simple) load testing on WebSockets. On a simple test of 1000 active WebSockets we got an average rate of 200,000 messages a second per socket.  But we need MUCH more testing here, along with paying attention to memory and CPU, not just I/O. The cometd project has already embraced Jetty 9's WebSocket and have been testing the performance from their point of view, while they have some concerns with memory (the jetty websocket implementation seems to have frequent, but small, GC behavior), overall they are happy with what they see. The future of WebSocket on Jetty 9. We are close to completion on our implementation of JSR-356 (the javax.websocket standard API). It will likely show up in Jetty 9.1 (but this isn't fully decided yet) It brings a few nice things to the Jetty side API as well.  * The WebSocketPolicy.setMaxMessage() is split up between text and binary now.  * Support for streaming messages has been added     - you can write a message with an OutputStream or Writer now.    - you can receive InputStream or Readers (one for each message) on your annotated WSE's now  * The RemoteEndpoint (how you write to a remote WSE) has some guards to notify you if you abuse the message writing in a multi-threaded environment.    - Note: the RemoteEndpoint operates in a similar way, threading wise, as a OutputStream (in other words, it is not advisable to attempt to write from multiple threads) Once we get a stable build with JSR-356 out into the hands of our users, we can start to tackle various performance testing and concerns. Hope this rambling post helped... -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Thu, May 30, 2013 at 5:51 AM, Nils Kilden-Pedersen nilskp@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] jndi datasource jetty</header>
    <date>Thu May 30 15:30:35 CEST 2013</date>
    <body>I've finally deployed the app on the jetty server. Fixed the issues about configurarion and dependency (putting the dependency of commons-dbcp and commons-pool and hsqldb in the section of maven plugin in pom.xml) I had to disable the firewall. My local firewall blocked the start up of hsqldb database server.   2013/5/29 Luca Rossi luca.rossi81@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Thu May 30 15:30:32 CEST 2013</date>
    <body>Hi, We have not benchmarked yet what you would like to know. The Jetty WebSocket API have a non-blocking version along with a blocking version. We're working on JSR 356 which has its own semantic, which is however pretty close to Jetty's WebSocket API. -- Simone Bordet ---- http://cometd.org http://webtide.com http://intalio.com Developer advice, training, services and support from the Jetty &amp;amp; CometD experts. Intalio, the modern way to build business applications.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jetty9 websocket design</header>
    <date>Thu May 30 14:51:35 CEST 2013</date>
    <body>Trying once more. Presumably this is documented somewhere I haven't been able to find. On Mon, May 27, 2013 at 8:34 AM, Nils Kilden-Pedersen nilskp@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Jetty 9 : Jasper not saving .class files to work dir?</header>
    <date>Thu May 30 11:38:08 CEST 2013</date>
    <body>Hi All, after recently upgrading from Jetty 7 to Jetty 9, I noticed that in the scratch/work dir, Jasper no longer writes a .class file for each JSP that it compiles. It only writes the generated .java file. the JSPs work fine, but there seems to be no .class file written to the scratch/work dir. This used to occur in Jetty 7. To explain what I'm talking about: 1. I get latest Jetty 9 distribution (I used 9.0.3.v20130506) 2. I run it with "java -jar start.jar" 3. I open http://127.0.0.1:8080/test/jsp/dump.jsp  in my browser, and see the JSP's correct output 4. somewhere in my temp directory (for me it's C:\Users\simon\AppData\Local\Temp\jetty-0.0.0.0-8080-test.war-_test-any-\jsp\org\apache\jsp\jsp), I find the file dump_jsp.java being generated, but no .class The same occurs in Jetty 8.1.11: no .class file. If however I do the same test in Jetty 7 (7.1.6.v20100715 is the version I was using in the past), I see the file dump_jsp.class in the corresponding scratch dir for that server. For reference, I used JDK 1.7.0_21 64 bit for Windows in all tests. This is just with the plain distribution, without any change from me.  I also tried editing the webdefault.xml in my own web app, adding/removing keepgenerated,  saveByteCode, and other JspServlet init parameters, but all I could do was turn off the preservation of the .java file via keepgenerated. But I cannot get to see the .class file saved to disk anywhere. I also thought this could be a compilation error (hence the reason why the .java file is still around), but it doesn't make much sense, because I can see the correct output of the jsp in the browser... and there are no error messages in the server's console either. Is there a reason for this? How does this affect response times when restarting the server? Does Jetty/Jasper have to recompile that .java file every time the server is restarted? Or, worse, every time the jsp is accessed? If this is covered somewhere in the documentation or faq, please forgive me for not finding it. I searched around for half a day but could not find any mention of this anywhere.</body>
  </mail>
  <mail>
    <header>[jetty-users] Cannot run unassembled webapp using ResourceCollection und</header>
    <date>Thu May 30 01:21:45 CEST 2013</date>
    <body>Hi, http://mvnrepository.com/artifact/org.mortbay.jetty/jetty-maven-plugin/7.6.11.v20130520 http://jira.codehaus.org/browse/JETTY-1417 However, when I run my unassembled webapp using 7.5.0 or higher, I get a 503 for any request sent to that particular context.  I can assemble my webapp and run it in a contextHandler just fine, but that's too slow for my developers to keep reassembling.    I can also see another contextHandler works, so I can only assume that the 7.5.0 fix was incomplete or something.  Any help would be appreciated. Here's my output for the webapp running under 7.5.0 that shows 503.  Somehow this doesn't look right to me, doesn't look like the other context handlers: org.mortbay.jetty.plugin.JettyServer@e12eceb STARTING +- org.eclipse.jetty.server.handler.HandlerCollection@553503e5#STARTED STARTED |   +- org.eclipse.jetty.server.handler.ContextHandlerCollection@b92db17#STARTED STARTED |   |   |   +- WebAppClassLoader=383778547@16dffef3 |   |   |   |   | |   |   |   |   +- ClassRealm[plugin&amp;gt;org.mortbay.jetty:jetty-maven-plugin:7.5.0.v20110901, parent: sun.misc.Launcher$AppClassLoader@69cd2e5f] |   |   |   | |   |   |   +- org.eclipse.jetty.tlds=[jar:file:/Users/dwinsor/.m2/repository/opensymphony/sitemesh/2.4.2/sitemesh-2.4.2.jar!/META-INF/sitemesh-decorator.tld, jar:file:/Users/dwinsor/.m2/repository/opensymphony/sitemesh/2.4.2/sitemesh-2.4.2.jar!/META-INF/sitemesh-page.tld, jar:file:/Users/dwinsor/neo/neo-js/target/neo-js/WEB-INF/lib/sitemesh-2.4.2.jar!/META-INF/sitemesh-decorator.tld, jar:file:/Users/dwinsor/neo/neo-js/target/neo-js/WEB-INF/lib/sitemesh-2.4.2.jar!/META-INF/sitemesh-page.tld] |   |   |   +- org.eclipse.jetty.webFragments=[file:/Users/dwinsor/.m2/repository/org/springframework/spring-web/3.2.2.RELEASE/spring-web-3.2.2.RELEASE.jar, file:/Users/dwinsor/neo/neo-js/target/neo-js/WEB-INF/lib/spring-web-3.2.2.RELEASE.jar] |   |   |   +- org.eclipse.jetty.tmpdirConfigured=true |   |   |   +- javax.servlet.context.tempdir=/Users/dwinsor/neo/neo-js/target/tmp Here's parts of my effective pom: Any help would be appreciated. Thank you, Daniel Winsor Associate, IT Architecture</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Maven Jetty Plug-in + WebApplicationInitializer throw</header>
    <date>Thu May 30 00:30:49 CEST 2013</date>
    <body>Thanks Robert, I added this bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=409436 Problem is caused by programmatically added servlets not be removed from the context on a stop, so they already exist on the restart, causing the registration process to return null (correctly according to the servlet spec api). Looking into it. Jan On 30 May 2013 01:19, Robert Novotny robert.novotny@xxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 23:19:41 CEST 2013</date>
    <body>Hi Joakim, The example you provided forwards a request- response pair from a servlet to a jsp file. I'm looking for something reverse of it. I'm trying to push parameters from a jsp file to servlet and jetty is not able to get the servlet definition. Could you please help me with this issue? Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Wed, May 29, 2013 at 1:26 PM, Jesse McConnell jesse.mcconnell@xxxxxxxxx -- janb@xxxxxxxxxxx www.webtide.com – Developer advice, services and support from the Jetty &amp;amp; CometD experts. _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 20:26:46 CEST 2013</date>
    <body>On Wed, May 29, 2013 at 1:24 PM, Ranjith Koduri nanikpranjith9@xxxxxxxxx No, and that is it cheers, jesse Â _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 20:24:26 CEST 2013</date>
    <body>do we need to add any jars explicitly to get Jsp support for Jetty 9 ? or just removing comments for OPTIONS=jsp in start.ini file is sufficient to get the Jsp support?  On Wed, May 29, 2013 at 11:59 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx On Tue, May 28, 2013 at 6:26 PM, Jan Bartel janb@xxxxxxxxxxx Ranjith, There's not really enough info in your post to be able to help you. Can you post again and show your embedding code? Also the html form generated by the jsp. Many times 404 errors are caused by servlets not actually being deployed at the mapping path that you think they are ... try hitting the servlet directly. Jan On 29 May 2013 06:21, Ranjith Koduri nanikpranjith9@xxxxxxxxx I've tried using servlet definition without annotations and I still face the same issue.  Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Tue, May 28, 2013 at 2:03 PM, Ranjith Koduri nanikpranjith9@xxxxxxxxx Hi, I'm trying to post values from a Jsp form to a servlet using embedded jetty. I'm using annotations for configuring servlets, unfortunately I'm getting a 404 error once I post jsp form to servlet. Is there any working example of posting a jsp form to servlet using embedded jetty ?  Thank you.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Redirect/Copy Jetty 9 Commandline output to file</header>
    <date>Wed May 29 19:24:10 CEST 2013</date>
    <body>The default Jetty logging implementation writes to STDERR (aka System.err) via the StdErrLog implementation. You have 3 choices. 1) Do nothing, and be happy with the default. :-) uncomment the the appropriate lines ) 3) Use a 3rd party logging framework and configure your logging output in that frameworks perferred way.  a) like log4j  b) or  java.util.logging  built into the JVM  c) or everything logging framework that can produce logging and is supported by slf4j  . If you use any 3rd party libraries, then option #3c will be your best choice. If you are going to use JSP then option #3b and #3c are good choices If you are going to be simple and use servlets you've created and don't really care do much, then option #2 is probably sufficient. -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Wed, May 29, 2013 at 10:10 AM, O. Olson olson_ot@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Redirect/Copy Jetty 9 Commandline output to file</header>
    <date>Wed May 29 19:10:50 CEST 2013</date>
    <body>Hi, Â I am new to Jetty and I just downloaded Jetty 9 for Windows. I start it simply on the command line using: Â java -jar start.jar Â Do the logging messages I see on the command line also get directed to a file? I donât see anything in the logs subdirectory. If no, is there someway I can send a copy of these log messages that appear on the commandline to a file? I am sure it must be some setting, but I have no clue where to start. Â I looked at http://www.eclipse.org/jetty/documentation/current/configuring-logging.html and it seems to be more about the logging level (warn, info, debug etc. ) rather than where to redirect/copy the logging messages. Â Thank you for your help. O. O.</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 18:59:52 CEST 2013</date>
    <body>On Executing the below command I could retrieve following options java -jar start.jar--list-options Output: There are 30 OPTIONs available to use. Each option is listed along with associated available classpath entries,  in the  order that they would appear from that mode. Note: If using multiple options (eg: 'Server,servlet,webapp,jms,jmx') then overl apping entries will not be repeated in the eventual classpath. GLOBAL option (Prepended Entries) ------------------------------------------------------------- Empty option, no classpath entries active. GLOBAL option (Appended Entries) (*) ------------------------------------------------------------- Option [ajp] ------------------------------------------------------------- Empty option, no classpath entries active. Option [All] (Aggregate) ------------------------------------------------------------- jar 071233.jar 1005082020.jar 5210645.jar ar v201108011116.jar .v200803061910.jar 0308.jar 0130308.jar 0130308.jar 20130308.jar jar r 01105211821.jar 011158.jar .2.v201112011158.jar ssfish-1.2.0.v201112081803.jar r 08.jar r Option [annotations] ------------------------------------------------------------- ar v201108011116.jar .v200803061910.jar Option [client] ------------------------------------------------------------- Option [default] ------------------------------------------------------------- jar Option [deploy] ------------------------------------------------------------- Option [ext] ------------------------------------------------------------- Empty option, no classpath entries active. Option [jaas] ------------------------------------------------------------- Option [jmx] ------------------------------------------------------------- Option [jndi] ------------------------------------------------------------- 071233.jar 1005082020.jar 5210645.jar Option [jsp] ------------------------------------------------------------- jar r 01105211821.jar 011158.jar .2.v201112011158.jar ssfish-1.2.0.v201112081803.jar Option [overlay] ------------------------------------------------------------- Empty option, no classpath entries active. Option [overlays] ------------------------------------------------------------- Empty option, no classpath entries active. Option [plus] ------------------------------------------------------------- 071233.jar 1005082020.jar 5210645.jar Option [policy] ------------------------------------------------------------- Empty option, no classpath entries active. Option [proxy] ------------------------------------------------------------- Option [resources] ------------------------------------------------------------- Option [rewrite] ------------------------------------------------------------- Option [security] ------------------------------------------------------------- Option [server] ------------------------------------------------------------- jar Option [Server] (Aggregate) ------------------------------------------------------------- jar Option [servlet] ------------------------------------------------------------- Option [servlets] ------------------------------------------------------------- Option [setuid] ------------------------------------------------------------- Option [spdy] ------------------------------------------------------------- r 08.jar r Option [webapp] ------------------------------------------------------------- Option [websocket] ------------------------------------------------------------- 0308.jar 0130308.jar 0130308.jar 20130308.jar Option [xml] ------------------------------------------------------------- On Wed, May 29, 2013 at 10:15 AM, Ranjith Koduri nanikpranjith9@xxxxxxxxx Servlet - MainServlet /**  * Servlet implementation class MainServlet  */ @WebServlet("/MainServlet")             /**      * @see HttpServlet#HttpServlet()      */         // TODO Auto-generated constructor stub /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response) */ // TODO Auto-generated method stub /** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] jndi datasource jetty</header>
    <date>Wed May 29 18:16:25 CEST 2013</date>
    <body>Hi, I resolved the last problem but now the server throw this exception java.lang.IllegalArgumentException: Object of class 'org.mortbay.jetty.plugin.JettyWebAppContext' is not of type 'org.mortbay.jetty.plugin.JettyServer'.  Sorry,  I am a newbee of jetty Luc 2013/5/29 Luca Rossi luca.rossi81@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] jndi datasource jetty</header>
    <date>Wed May 29 17:31:57 CEST 2013</date>
    <body>OK, this is reasonable. I put the dependency into the jetty plugin..but now I have another problem:  java.lang.ClassNotFoundException: org.eclipse.jetty.webapp.WebAppContext It's enough odd, because of this is a dependency already setted in plugin pom. Thanks a lot for your previous responses! Luca 2013/5/28 Jesse McConnell jesse.mcconnell@xxxxxxxxx</body>
  </mail>
  <mail>
    <header>[jetty-users] Maven Jetty Plug-in + WebApplicationInitializer throw	NPE</header>
    <date>Wed May 29 17:19:22 CEST 2013</date>
    <body>Hi, I have created a simple tutorial project that uses Spring 3.2 web application without web.xml, using WebApplicationInitializer mechanism instead. However, whenever I setup manual reloading within Maven plugin: and press Enter within the console, the application context gets reloaded, but the WebApplicationInitializer throws a NullPointerException (see below) I am attaching a simple project, which indicated that the reason may lie in the WebApplicationInitializer or the servletcontext not being properly cleaned up in the undeployment phase. The actual line is: ServletRegistration.Dynamic dispatcher = while addServlet() method returns null whenever the servlet is already mapped. However, the freshly deployed application should not have this servlet already mapped and it should not return null. This issue affects the 8.1.x branch as well, the last version of Jetty Maven plug-in that works without NPEs is the 8.1.9.v20130131. The exception is: java.lang.NullPointerException at jettybug.WebApplicationInitializer.onStartup(WebApplicationInitializer.java:22) at org.springframework.web.SpringServletContainerInitializer.onStartup(SpringServletContainerInitializer.java:180) at org.eclipse.jetty.plus.annotation.ContainerInitializer.callStartup(ContainerInitializer.java:105) at org.eclipse.jetty.annotations.ServletContainerInitializerListener.doStart(ServletContainerInitializerListener.java:107) at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:69) at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:108) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:82) Robert Attachment: jetty-webinitializer-npe.zip Description: Zip compressed data</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 17:15:17 CEST 2013</date>
    <body>Hi Joakim, Thank you for providing the example code. I have changed my ServerConnector class accordingly and included asm and annotations-api jars to classpath which were causing classnotfound exception. After making all these changes, I still get  HTTP ERROR 404  Problem accessing /. Reason: Not Found. I have uncommented Options for jsp in start.ini and have  javax.servlet.jsp-2.2.0.v201112011158.jar in lib/jsp of jetty server.  My Console looks like this :   Initializing server... Starting server... 2013-05-29 09:43:45.308:INFO:oejs.Server:main: jetty-9.0.0.v20130308 2013-05-29 09:43:45.411:INFO:oejpw.PlusConfiguration:main: No Transaction manager found - if your webapp requires one, please configure one. 2013-05-29 09:43:45.425:INFO:oejw.StandardDescriptorProcessor:main: NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet 0.0.0.0:8080 2013-05-29 09:43:57.127:INFO:/:qtp27880366-15: No JSP support.  Check that JSP jars are in lib/jsp and that the JSP option has been specified to start.jar ServerConnector class: public class ServerConnector @SuppressWarnings("deprecation") public static void main(String[] args) throws Exception try new AnnotationConfiguration(), new WebXmlConfiguration(), new WebInfConfiguration(), new TagLibConfiguration(), new PlusConfiguration(), new MetaInfConfiguration(), catch (Exception e) Thanks &amp;amp; Regards, Ranjith MS-MIS, Univ Of Illinois at Chicago . On Wed, May 29, 2013 at 12:48 AM, Joakim Erdfelt joakim@xxxxxxxxxxx JSP Form - home.jsp http://www.w3.org/TR/html4/loose.dtd</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] jetty monitoring</header>
    <date>Wed May 29 16:46:19 CEST 2013</date>
    <body>Also, we (of jetty) can only control what we expose for JMX for jetty classes, we can't control if a datasource exposes anything via JMX. Â If there is something specifically in jetty that you want exposed via JMX let us know though, perhaps there is some room for our jndi bits to be exposed more/better jesse -- jesse mcconnell jesse.mcconnell@xxxxxxxxx On Wed, May 29, 2013 at 9:41 AM, Thomas Becker tbecker@xxxxxxxxxxx</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] jetty monitoring</header>
    <date>Wed May 29 16:41:45 CEST 2013</date>
    <body>Hi Pooja, have you read this already? http://www.eclipse.org/jetty/documentation/current/jmx-chapter.html Cheers, Thomas Am 5/29/13 3:37 PM, schrieb Dilip-Mehta, Pooja: Hi, I'm fairly new to jetty. I want to set up monitoring for jetty, esp. for data source and connections. I'm able to connect to jconsole successfully, but all it gives me are memory monitors. I know that some probes are available, but I would like to monitor using jmx itself. Could you please let me know how can I configure jetty to monitor data sources? Regards, Pooja Mehta _______________________________________________ jetty-users mailing list jetty-users@xxxxxxxxxxx https://dev.eclipse.org/mailman/listinfo/jetty-users</body>
  </mail>
  <mail>
    <header>[jetty-users] jetty monitoring</header>
    <date>Wed May 29 15:37:28 CEST 2013</date>
    <body>Hi, I'm fairly new to jetty. I want to set up monitoring for jetty, esp. for data source and connections. I'm able to connect to jconsole successfully, but all it gives me are memory monitors.   I know that some probes are available, but I would like to monitor using jmx itself. Could you please let me know how can I configure jetty to monitor data sources?       Regards, Pooja Mehta  </body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 07:48:06 CEST 2013</date>
    <body>There are no servlets available on your environment. Some advice: while (true) try catch (InterruptedException e) That is overkill. The while(true) loop is not needed.  as server.join() will wait on the current thread (in other words, the main() thread in your case) till the server stops (typically with a Ctrl+C). Remove that whole block. ResourceHandler is the most basic and primitive way to serve static content only. Do this instead, drop the whole ResourceHandler + DefaultHandler and create a WebAppContext instead. Since you obviously have JSP and Servlet 3.0 concepts, this will be the best choice for you. You'll need a web.xml (even if its essentially a stub xml). Then you'll want to specify the appropriate configurations for annotation based servlets on the WebAppContext. Finally, configure the DefaultServlet to serve static content. (configuring the DefaultServlet can be done in the web.xml or via the override webdefault.xml) If you want an example of using servlet 3 concepts, like the annotations, look at the example project. https://github.com/jetty-project/embedded-servlet-3.0/ Example of the embedded server start: https://github.com/jetty-project/embedded-servlet-3.0/blob/master/src/test/java/com/company/foo/EmbedMe.java The stub web.xml that EmbedMe uses: https://github.com/jetty-project/embedded-servlet-3.0/blob/master/src/main/webapp/WEB-INF/web.xml -- joakim@xxxxxxxxxxx webtide.com Developer advice, services and support from the Jetty &amp;amp; CometD experts eclipse.org/jetty  -  cometd.org On Tue, May 28, 2013 at 10:22 PM, Ranjith Koduri nanikpranjith9@xxxxxxxxx I'm running Jetty Server in embedded mode using this class ServerConnector public class ServerConnector public static void main(String[] args) throws Exception try catch (Exception e) while (true) try catch (InterruptedException e)</body>
  </mail>
  <mail>
    <header>Re: [jetty-users] Jsp form to Servlet jetty embedded</header>
    <date>Wed May 29 07:22:20 CEST 2013</date>
    <body>Hi, I'm get  HTTP ERROR: 404 Problem accessing /MainServlet. Reason:  Not Found on submitting home.jsp which I'm accessing through localhost:8080 url. On submit the url changes to localhost:8080/MainServlet and gives me the above mentioned error This is my project's web.xml http://www.w3.org/2001/XMLSchema-instance " xmlns=" http://java.sun.com/xml/ns/javaee " xmlns:web=" http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd " xsi:schemaLocation=" http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd "</body>
  </mail>
</mails>

