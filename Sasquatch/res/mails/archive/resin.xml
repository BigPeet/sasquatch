<?xml version="1.0" encoding="UTF-8"?>
<mails>
  <mail>
    <header>[Resin-interest] difference between http request and forward()</header>
    <date>Fri May 10 13:35:38 CEST 2013</date>
    <body>Hello I use resin 4.0.13 and I would like to put my jsp page near my javascript files, to have them near each-other which seems logical, and helps saving time to search for files. My javascripts are in the directory "/res/js", and are available to http requests. So I would like to put my jsp pages in directory "/res/jsp". When I do so, all works fine. But unfortunately the browser can request the jsp page : " http://domain/res/jsp/home.jsp" ;. I don't want this behavior because all my pages are sent through a forward() after url parsing and query processing. I tried to put in the conf : This answers 404 for all " http://domain/res/jsp/home.jsp" ; requests, fine. But I found strange that my java calls to request.getRequestDispatcher("/res/jsp/home.jsp"). forward(request,response); answer also 404... then nothing works at all. Another way would be to set a password on the directory : This works all right and forbid only the external http request, but it is rather complicate (and by the way password-digest-realm does not seems to work on resin 4,0,13) Is there any way to simply tell that path mapping should be applied only to external request and not to forward() calls ? Thanks -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 16 rue de Belle Isle 37100 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] difference between http request and forward()</header>
    <date>Fri May 10 15:05:13 CEST 2013</date>
    <body>Is writing your own filter no option, whose logic decides, what is external and what is internal?</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] difference between http request and forward()</header>
    <date>Sat May 11 10:23:35 CEST 2013</date>
    <body>Well I wanted something simple... Is it possible to know if the file requested is from a http request or a forward() in a filter ? How do you do this ? Thanks http://maillist.caucho.com/mailman/listinfo/resin-interest -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 16 rue de Belle Isle 37100 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] difference between http request and forward()</header>
    <date>Sat May 11 13:05:26 CEST 2013</date>
    <body>An idea is to put an attribute "INTERNAL" (not as parameter) to the request when forwarding. The next one in the chain could read this attribute and decide to not executing the "prevent direct/external access" logic. Am 11.05.2013 10:23, schrieb Riccardo Cohen:</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] difference between http request and forward()</header>
    <date>Mon May 13 10:59:21 CEST 2013</date>
    <body>Thanks a lot, I'll try that http://maillist.caucho.com/mailman/listinfo/resin-interest -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 16 rue de Belle Isle 37100 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest] How do I limit the number concurrent requests from mod_caucho in Apache to Resin?</header>
    <date>Tue Apr 16 17:25:29 CEST 2013</date>
    <body>Hi. We have a web app that uses quite a bit of memory, so after roughly 20 instances per GB allocated memory it starts to spend more and more time doing garbage collection. With enough concurrent connections it grinds to a halt. I've been trying to limit the number of threads that are started at once. &amp;lt;port-thread-max&amp;gt; seems to work for this, and does what I want when I setup Resin as a http server. However I've been unable to get it to work with mod_caucho. Setting &amp;lt;port-thread-max&amp;gt; in &amp;lt;port-default&amp;gt; or setting port_thread_max in resin.properties does not seem to affect the traffic coming in from mod_caucho. The only way I've been able to limit it at all is to set thread-max in working). Of course I don't want to do this, since this limits all system threads and setting it too low causes weird problems if resin runs out of threads. Setting keepalive-max, connection-max, or thread-idle-max in server doesn't help, and accept-thread-max isn't applicable. Is there a setting I'm overlooking somewhere? Regards - Vidar Engh Skaugen</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] How do I limit the number concurrent requests from mod_caucho in Apache to Resin?</header>
    <date>Tue Apr 16 18:12:26 CEST 2013</date>
    <body>If this is for Resin 4.0, you might try &amp;lt;cluster-port&amp;gt;, which has the same syntax as &amp;lt;http&amp;gt; and lets you configure the 6800 port properties. The config looks like: ... If you're in a clustered environment, that limit might cause problems with the clustering. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] How do I limit the number concurrent requests from mod_caucho in Apache to Resin?</header>
    <date>Wed Apr 17 12:02:51 CEST 2013</date>
    <body>Thank you very much for the reply Scott. I wasn't aware that was an option. After extrapolating from your reply I ended up using: Also, sorry for the late reply. I've been testing it quite a bit since there's still a problem somewhere with an occasional response getting dropped, but I'm pretty sure now that the port-thread-max bit works perfectly and it's an unrelated issue (there are quite a few places if could happen since it goes through apache and mod_caucho before reaching resin). Regards - Vidar Engh Skaugen</body>
  </mail>
  <mail>
    <header>[Resin-interest] URL Rewrite Rules Lost After Webapp Deploy?</header>
    <date>Fri Apr 12 00:40:31 CEST 2013</date>
    <body>It seems like the URL rewrite rules defined at the cluster level (and I believe at other levels too) are not preserved after a deploy or undeploy operation. For example, starting with a stock installation of Resin Pro 4.0.35, and two versions of a simple web app war file (containing a single index.html file for its web content that does nothing more than display some text in the body), performing the following will demonstrate the issue: - edit resin.properties, enabling webapp_multiversion_routing. - edit resin.xml and add a rewrite rule directly underneath the 'app' cluster: e.g.: ... - start resin - deploy and test version 1 of a simple web app. The rewrite rule should work as expected, forcing a 404. - deploy and test version 2 of your web app (without restarting resin). The rewrite rule no longer takes effect. You will see your page. Has anyone else experienced this? Dan</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] URL Rewrite Rules Lost After Webapp Deploy?</header>
    <date>Fri Apr 12 17:10:44 CEST 2013</date>
    <body>Hi Dan, Thanks, I confirmed this is a bug related to multi-version routing, and have entered a bug report: http://bugs.caucho.com/view.php?id=5418 The issue clears after a Resin restart.  You can also work around this by putting the rewrite rule in the web app rather than the cluster level.  For example, add a file named resin-web.xml in your WEB-INF directory: http://caucho.com/ns/resin" I understand this may not be as convenient as placing the rewrite at the cluster level depending on how many webapps you have deployed… Although it's preferable in some cases, as modifying resin.xml triggers a Resin restart, while modifying resin-web.xml, only the web app will restart. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] URL Rewrite Rules Lost After Webapp Deploy?</header>
    <date>Fri Apr 12 19:34:37 CEST 2013</date>
    <body>Thanks Paul. Yeah, I had started with the rules defined at the web app level, but some of them need access to the host name and port from the URL. Maybe I missed it, but I couldn't find a stock way of getting that info at the web app level. I have since played around with custom rules and think I can get it done that way, but if there's an easier way, I'm all ears. :) Dan http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Versioned Deploy from Command Line</header>
    <date>Thu Apr 11 23:30:20 CEST 2013</date>
    <body>The following command works as expected in 4.0.32: It's not working for me in 4.0.33 and later. The command returns almost instantaneously and the web app is not deployed. Is this a known issue -- related to http://bugs.caucho.com/view.php?id=5415 ? Dan</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Versioned Deploy from Command Line</header>
    <date>Fri Apr 12 16:09:05 CEST 2013</date>
    <body>http://bugs.caucho.com/view.php?id=5415 ? Hi Dan, Yes, it's the same bug, sorry, we were too aggressive on trapping "--version" on the command line. You should still be able to deploy via REST or the resin-admin web app until we patch the issue in the next release. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] Non-pro Question</header>
    <date>Wed Apr 10 22:38:13 CEST 2013</date>
    <body>In resin-4.0.35 I am spinning on a typical BufferedInputStream read loop to read from a multipart stream.  It works great, but for some reason a large percent of the connections hang at some point on the blocked read call.   I thought that the default SocketTimeout setting in Resin would cause that to eventually throw an exception, but that does not appear to be happening. Here is a partial thread dump of the blocked call: at java.net.SocketInputStream.socketRead0 (SocketInputStream.java:-2) at java.net.SocketInputStream.read (SocketInputStream.java:150) at java.net.SocketInputStream.read (SocketInputStream.java:121) at sun.security.ssl.InputRecord.readFully (InputRecord.java:442) at sun.security.ssl.InputRecord.read (InputRecord.java:480) -- locked java.lang.Object@0x627eabb3 at sun.security.ssl.SSLSocketImpl.readRecord (SSLSocketImpl.java:927) at sun.security.ssl.SSLSocketImpl.readDataRecord (SSLSocketImpl.java:884) at sun.security.ssl.AppInputStream.read (AppInputStream.java:102) at com.caucho.vfs.SocketStream.read (SocketStream.java:187) at com.caucho.vfs.ReadStream.read (ReadStream.java:472) at com.caucho.server.http.ContentLengthStream.read (ContentLengthStream.java:79) .... Any ideas why the socketRead0 just hangs and the SocketTimeout never fires? Thanks, Aaron</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Non-pro Question</header>
    <date>Thu Apr 11 00:51:28 CEST 2013</date>
    <body>Some of our internal stream wrappers swallow the exception, log it, and return -1. You're saying it's just blocking, but as a first step I recommend you turn on FINER logging for "com.caucho.vfs", and maybe "com.caucho.server.http" also. Then check the logs for exceptions logged when you would expect the timeout. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] 4.0.35 works great locally on OS X,	slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 04:37:28 CEST 2013</date>
    <body>I have a server that's completely annotation-driven, and it was mostly working on .33, but .35 fixes an issue I had with mappings. Now it works perfectly locally on my OS X laptop, but when I run it on the server, everything seems to load except some resources under /css, which come back as 404. I get errors like this in the log: 19:32:14.099 WARN  servlet.DispatcherServlet (DispatcherServlet.java:1108) No mapping found for HTTP request with URI [/css/tt.css] in DispatcherServlet with name 'dispatcher' 19:32:14.102 WARN  servlet.DispatcherServlet (DispatcherServlet.java:1108) No mapping found for HTTP request with URI [/css/foundation.css] in DispatcherServlet with name 'dispatcher' It's very nearly an out-of-box installation. The only differences I can think of: - on OS X, I didn't run configure/make/make install. On Ubuntu I did. On OS X, I just unzipped and dragged to the install location. - on OS X, resin.properties is more stock, without an admin user, no setuid user/group, port 8080. As to the dispatcher servlet, getServletMappings looks like this: protected java.lang.String[] getServletMappings() I have a Spring controller at /service/* that works great. Just stuff under /css is 404. Any ideas? -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X,	slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 04:42:49 CEST 2013</date>
    <body>I may have spoken too soon. Looks like they might've been cached locally, as now it's also failing locally. More investigating... http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X, slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 04:45:51 CEST 2013</date>
    <body>That's not a Resin message (I just searched to make sure), so I'm not sure what the context is. From that getServletMappings() method, I'm wondering if you've overridden the default servlet. If you have, then it makes sense that Resin is no longer service static files like css, because your servlet has taken over for Resin's default servlet ("resin-file"). -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X,	slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 04:53:18 CEST 2013</date>
    <body>You're right, that's from Spring, I'm pretty sure. I'm not sure. I still don't know how the new servlet hotness is supposed to work. So, *something* is still serving up *.jsp. I can even find /css/test.jsp. I see that in app-default.xml, it has: servlet-name="resin-file" Can I change that to "*.css" and "*.js", etc? I wish there was a way to say, "anything one of my Spring controllers maps, let my code handle it, anything else, resin should try." -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X,	slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 05:08:45 CEST 2013</date>
    <body>So, the answer appears to be "no." Not sure how it is that *.jsp is handled but *.css isn't. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X, slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Wed Apr 10 02:05:48 CEST 2013</date>
    <body>Check your web.xml.  You're probably sending /* or /service/* to your servlet, which means YOU have to handle serving the CSS files.  If you'd rather let Resin handle those, try using /*.jsp or /service/*.jsp (or something more specific to your situation). (*Chris*) http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.35 works great locally on OS X,	slightly busted on Rackspace Ubuntu 12.04</header>
    <date>Tue Apr 09 04:59:17 CEST 2013</date>
    <body>Trying changing my mappings to: /service/               didn't work /service/*              didn't work But I noticed requesting "/service" (no trailing slash) actually did hit the right method, but none of the others under /service, including "/", work. Is there an explanation of how a request is handled in a purely annotation-configured webapp? -- Rick http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] calling JspServlet instance directly</header>
    <date>Thu Mar 21 18:52:06 CET 2013</date>
    <body>Hello I'm refactoring my url requests processing and need some advice. I've learnt mostly by myself, and I'm not sure to make the good choices. Presently my request processing is a mixing of servlet configurations like : and some java code in UrlManager.java servlet, analysing the url request, processing the request, and calling at the end : QUESTION 1: When I call req.getRequestDispatcher("/page.jsp").forward(req,res); this goes through a certain process depending on resin.xml conf (first line above), analysing the pseudo-request "/page.jsp", and finally calling service() of the instance of com.caucho.jsp.JspServlet created by resin. I was wondering how to call directly the JspServlet instance myself ? It would be much quicker because I know this is a jsp page (systematic final step of the processing). QUESTION 2 What I would like is having a better control on requests, by gathering all the processing in one point, not half configuration, half java code. My solution would be to have all requests handled by my unique urlmanager servlet, and I would dispatch them myself with built-in resin servlets. Any suggestion will be appreciated, as long as performance is "very" good. I must say I'm a bit afraid of these big frameworks like spring/struts that brings many features that already exists in Resin, like persistency, tag library, dependency injection etc. One of the reason I like resin, apart from performances, is that there is everything in it. Thanks for your help. -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] calling JspServlet instance directly</header>
    <date>Thu Mar 21 19:00:19 CET 2013</date>
    <body>Since all that processing is cached, the cost is really just a hash map lookup, which probably isn't noticeable. You could also use ServletContext.getRequestDispatcher("...") in an init() method (or lazily) and save the RequestDispatcher object. The RequestDispatcher is reusable. So calling directly shouldn't actually be a measurable gain. Someone else would be in a better position to answer, but that sounds like a reasonable architecture to me. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] calling JspServlet instance directly</header>
    <date>Thu Mar 21 19:44:30 CET 2013</date>
    <body>I share your fear of frameworks so I created my own request handlers using Resin 4 and a couple of simple classes. Not sure why you specifically want to handle JSP requests with a servlet so I might be missing something but: I put all my JSPs under WEB-INF for privatization (WEB-INF/views/*.jsp). Set a regex in web.xml to send everything except WEB-INF (and other non-logic requests like css, js, images, etc) to a single controller*. Controller inspects the URL (using an enumeration for speed and simplicity) and then calls a POJO via reflection**. In addition, the Controller holds injected resources (Datasource, Hessian services) that it can then pass to the POJO along with the request and response. It also performs authorization and access control checks. When I want to hand the request to a JSP for rendering, I simply call: WEB.XML What this leaves is a very minor configuration in web.xml (2 lines) and complete control over the URL handling in a single class. To add a new URL, I add a new enum entry (URL path, fully-qualified POJO name, method to invoke on the POJO) and I add the POJO java file. As an aside, Resin has a couple other features that I absolutely love. 1. XML configuration injection into resin.xml I utilize Resin's configuration injection to automatically load app/environment-specific configuration into Resin from a single external XML file. I create an app-env.xml and deploy it along with my war files. My Resin config is set to load all XML files in the web apps directory so when Resin starts, it loads the XML and the WAR; datasource, hessian services, and other environment data defined in the XML is loaded into/injected into the app automatically which makes multi-environment (dev, qa, prod) deployment trivial and allows the exact same WAR file to travel through all the stages since there isn't any environment-specific data in the WAR itself. 2. Multipart form request handling I add "&amp;lt;multipart-form enable="true" /&amp;gt;" to web-app-default and then multipart requests provide all the uploaded file details as request parameters. Super convenient. Hope this is useful. I too am self-taught and certainly no expert but what works and is simple tends to rule my development. matt * Controller is a simple extension of HttpServlet and I send both GET and POST requests to a single custom "execute" method. The execute method just passes along the request so that the handlers can decide to treat GETs and POSTs however they choose. The execute method is also where all the URL handling, authorization, etc is performed. ** The POJOs could be threaded for more scalability but I haven't yet hit a threshold where I need to take on the cost of reprogramming these for concurrency. http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] calling JspServlet instance directly</header>
    <date>Fri Mar 22 10:07:25 CET 2013</date>
    <body>Hi Matthew, Thanks for your sharing. It helps me a lot. I was wondering why you talked about "POJOs could be threaded" ? The request processing itself is already multi-threaded before your pojos are called, so I don't see the need to worry about it. Resin and all application server start a thread from a pool at each request as far as I know. I use the "service()" function of httpservlet, it handles get and post transparantly. Thanks a lot. bye mailto:f...@caucho.com mailto:resin-interest@caucho.com http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] calling JspServlet instance directly</header>
    <date>Fri Mar 22 17:47:20 CET 2013</date>
    <body>Ricardo, Should have said thread safe. I was thinking to make the POJOs reusable to allow for fewer objects to be created. As it stands now, every requests instantiates and destroys a handler POJO. From time to time I consider restructuring these into a worker queue of instantiated objects to eliminate the overhead of creating so many objects. Like I said, haven't had any performance issues yet but I do worry about large amounts of object creation under load. When I first started programming I remember being told not to use the service method. Not sure why and never really investigated it since but glad to know you don't have any issues. m mailto:f...@caucho.com mailto:resin-interest@caucho.com http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest http://www.appartement-maison.fr http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] calling JspServlet instance directly</header>
    <date>Fri Mar 22 18:23:41 CET 2013</date>
    <body>I have one singleton instance of each of my "pojos", processing the requests. They are created only at startup time by the main controller, and called by my main controller depending of the request url. I don't think there is any refactoring difficulties changing a per request creation into a singleton : FROM: urlmanager.service(request,response) if (url like this) pj=new pojo pj.service(request,response) TO: urlmanager() pj=new pojo urlmanager.service(request,response) if (url like this) pj.service(request,response) The only thing to be aware is that there must not be any data stored in the pojo. Only in request or session if necessary. Anyway thanks for your help mailto:f...@caucho.com mailto:resin-interest@caucho.com http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest http://www.appartement-maison.fr http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest] adding to library path</header>
    <date>Tue Mar 12 09:49:13 CET 2013</date>
    <body>Hello I added a jni library (jmagick) to my web application. The C library is in a folder in the application and I set the library path with resin.xml : The problem is that this line replaces the full libary path instead of adding the path to it. How can I add it without deleting the content set by resin ? Thanks for your help. -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Sat Feb 23 12:59:58 CET 2013</date>
    <body>I have a rather long servlet which I'm trying to refactor such that separate helper objects perform the same work. The trouble is, I think I'm missing some config setting because the same working code from the servlet gives npe's when moved to another class. What's special about having these annotation in the servlet class (where ultimately I don't line of APICommand below is null, whereas in the APIServlet it's fine. Thanks. ---------------------------------------------- Servlet definition: @WebServlet(value="/api", name="api-servlet") @PersistenceUnit(unitName="my_persistence_unit") @Inject public void service(HttpServletRequest req, HttpServletResponse ... ... ... ... Helper class definition: ---------------------------------------------- @PersistenceUnit(unitName="my_persistence_unit") @Inject ... ... ...</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Sun Feb 24 06:50:08 CET 2013</date>
    <body>The reason you're getting NPE's is that your instances of APICommand are not themselves injected by the container (you are instantiating them in code somewhere...indicated by the fact that APICommand has a non-injected parameterized constructor). Dan http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Sun Feb 24 11:07:11 CET 2013</date>
    <body>Hi Dan &amp;amp; thanks for this, I looked more at this and realised I need to do as you say, and it seems I need Webbeans and the @Component annotation, plus token META-INF/web-beans.xml to mark it as so? If that's right, I'm now struggling to even get the @Component to resolve - does the webbeans package come with Resin or is it an external download? -- Carl Whalley</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Sun Feb 24 18:21:19 CET 2013</date>
    <body>For Resin 4.0, it's CDI and all the names changed: the magic file in META-INF/beans.xml in a jar or WEB-INF/beans.xml for the WEB-INF/classes. The smallest content of that file "&amp;lt;beans/&amp;gt;". You don't need an annotation on the bean, but you can use something like @javax.inject.Singleton if you want it to be a single instance. The default behavior instantiates a new instance of your bean at each @Inject point. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] custom component providers for injection</header>
    <date>Sun Feb 24 23:07:45 CET 2013</date>
    <body>Hello, by the way, about injection, is there an tutorial out there on how to bind custom component providers to Resin's CDI? For example, i use picocontainer and i would like to have Resin ask picocontainer as well (mostly singletons) For Jersey, which also uses Injection, i have created a bridge, so that it can ask picocontainer, which is stored in the servlet context.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] custom component providers for injection</header>
    <date>Mon Feb 25 19:53:19 CET 2013</date>
    <body>@Produces is probably what you need. You can create a factory/bridge class to return CDI objects. Resin itself does this for the predefined objects. @Singleton probably would be @Produces public static MyObject _myField; // you can use static methods @Produces MyFactory would need to know how to get the picocontainer objects. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] custom component providers for injection</header>
    <date>Wed Feb 27 15:40:12 CET 2013</date>
    <body>Hello, thanks for the answer, Scott. Its confusing. For example, as suggested by you: @Singleton @Produces 1) I get an exception: Can't find a bean for 'class ServiceService' Do i need to register the MyFactory anywhere manually? 2) I have a listener, that starts/stops the ComponentProvider (like pico) and put/removes it into/from the servlet context. Can MyFactory already be given the @inject ServletContext"? So that filters/servlets can be given @inject stuff from MyFactory, that would now implicitly depend on ServletContext? 3) Do i really have to write explicitly, what MyFactory can produce? I have hundreds of components in my provider, that potentially could be used. I would like to be able to define a chain, like, look first in my own ComponentProvider, and then maybe lookup somewhere else. Hm. That all is very confusing. :-) Thx -------- Original-Nachricht --------</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] custom component providers for injection</header>
    <date>Wed Feb 27 20:36:56 CET 2013</date>
    <body>Ole! Yes. I have to put at least an empty beans.xml into META-INF of the jar to include. Yes! Tried and works. Did not find a solution for that one yet. I can give my produce method an InjectionPoint to get more info about the context, but i still have to create a produce method for each type to produce. Any ideas? Nice tutorial by the way: - http://code.google.com/p/jee6-cdi/wiki/DependencyInjectionAnIntroductoryTutorial_Part1</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] custom component providers for injection</header>
    <date>Wed Feb 27 22:18:37 CET 2013</date>
    <body>You could use the extension mechanism. I'm not sure if there's a good tutorial. It's a bit more complicated than basic CDI use. (And I'm not sure I can quickly explain it here.) -- Scott http://code.google.com/p/jee6-cdi/wiki/DependencyInjectionAnIntroductoryTutorial_Part1 http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Sun Feb 24 23:55:02 CET 2013</date>
    <body>Umm ... I hope I read you right - I just added beans.xml to WEB-INF with just "&amp;lt;beans/&amp;gt;" as its content and that ut is still null. I did change it slightly from the code I posted earlier to ensure it really is a bean, in case that was significant: private static final Logger log = @PersistenceUnit(unitName="my_persistence_unit") @Inject ... ... http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Mon Feb 25 19:49:52 CET 2013</date>
    <body>How are you instantiating APICommand? For example, are you injecting it into your servlet? If you used "new APICommand()", CDI wouldn't be invoked, because it's not doing that kind of bytecode generation on the constructor. Two general patterns are: @Inject APICommand _command; // injecting into another bean @Inject Instance&amp;lt;APICommand&amp;gt; _factory; // creates a factory to return new instances -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin Pro 4.0.34 with Eclipselink 2.4.0.v20120608-r11652 - @Inject UserTransaction null</header>
    <date>Tue Feb 26 08:25:49 CET 2013</date>
    <body>That was it - much clearer now, thanks &amp;amp; it all working beautifully;-)</body>
  </mail>
  <mail>
    <header>[Resin-interest] mod_caucho again with resin4</header>
    <date>Wed Feb 13 17:12:17 CET 2013</date>
    <body>Hello again, working with: - resin-pro 4.0.34 (eval license), - two instances (app-0,app-1) - mod_caucho.so for loadbalancing on apache 2.2 prefork Lets start: - resin's /resin-admin: System Health is OK, i see both servers - apache's /caucho-status: i see both servers green as ok Now i disable app-0 for load balancing, so that i can maintain the server: app-0$ ./resinctl disable -server app-0 - resin's access.log no longer has entries. OK. - apache's access.log is now full of "503". Not OK. All traffic should go to app-1. - apache's /caucho-status: both servers show up as green ok. Not OK. app-0 should be red. - app-0/resin-admin is delivering "503". Not OK. How to maintain the server app-0 now? Lets see, if it helps to stop the whole web-app to get it out of load balancing: app-0$ ./resinctl web-app-stop myapp No further change. Not ok. Is it because there are other apps still enabled, thats why mod_caucho keeps the server? But why do i get so many "503" for my webapp context, that i have disabled? Should i probably disable /resin-admin, /resin-rest on "Host: default" as well? app-0$ ./resinctl stop Finally a change: - apache's /caucho-status: app-0 is getting red. Juhu. But still: - apache's access.log is full with "503" (why oh why its not going to app-1, because) - app-1 almost gets almost gets no traffic. app-0$ ./resinctl start - app-0/1 slowly start get request again according to resin's access.log - in between i even start to see "404" in apache's log. Hm, this could be my fault, though resin should not start to deliver, when the webapp is not fully app. In any way, i am pretty lost. The only properties i have overwritten: dev_mode : false app_servers      : 172.17.32.4:6800 172.17.32.5:6800 session_store : false remote_admin_enable : true web_admin_enable : true web_admin_external : true rest_admin_enable : true admin_user : admin admin_password : ... And i have put those two ResinConfigServer ("config triad") into the httpd.conf: ResinConfigServer 172.17.32.4 6800 ResinConfigServer 172.17.32.5 6800 Is anyone using mod_caucho in production and has no problems with it? Am i missing something here? :-) Thanks!</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] mod_caucho again with resin4</header>
    <date>Wed Feb 13 18:21:51 CET 2013</date>
    <body>This is a case where Resin's load balancer is more capable than mod_caucho (we have some open bugs to upgrade it.) mod_caucho primarily handles connection failures. It's not aware of 503's. Currently, neither load balancer is precise enough to handle per-web-app disables (again, an open bug, although it might require Resin 7 for that enhancement because we're revamping the load balancing.) This should work with mod_caucho. We'll need to check on this. With the backend stopped, mod_caucho should failover to the existing servers. If you're using the pre-fork model, though, it may take a number of requests before the Apache processes become aware of the closed server, because each process is independent. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] mod_caucho again with resin4</header>
    <date>Wed Feb 13 18:32:05 CET 2013</date>
    <body>Or in short: Whenever i disable or even stop a resin in a cluster, then i see a lot of 503 in apache's access.log. This should not happen. Why is that so? Why the other servers do not take over? And second: when i disable (not stop) a resin in a cluster, why caucho-status still shows it in green as "ok"?</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] mod_caucho again with resin4</header>
    <date>Wed Feb 13 18:41:33 CET 2013</date>
    <body>For stopping, is this transient or permanent? Because mod_caucho can still connect to the backend Resin. When Resin is disabled, it's still accepting connections; it's just returning 503s. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] mod_caucho again with resin4</header>
    <date>Wed Feb 13 19:46:51 CET 2013</date>
    <body>Scott, thanks for your quick response. Permanent. And i know why. Because when i stop app-1, mod_caucho also stops to deliver to app-0, even caucho-status shows green for it. Also the other way around, if i stop app-0, it also stops delivering to app-1. Interesting is also, what caucho-status shows: Default Virtual Host Error: host unavailable/busy Source: Cache File (/tmp/172.17.32.4_6800, Thu Jan 1 01:00:00 1970 ) Last-Update: Thu Jan 1 01:00:00 1970 And shortly later without "host unavailable/busy": Default Virtual Host Source: Cache File (/tmp/172.17.32.4_6800, Thu Jan 1 01:00:00 1970 ) Last-Update: Thu Jan 1 01:00:00 1970 And then again later: Default Virtual Host Source: Resin-ETag (Wed Feb 13 19:26:21 2013 ) Last-Update: Wed Feb 13 19:26:21 2013 And hopping between all that. Alright. It would be totally awesome to have a way to take the server out of load balancing for mod_caucho, without having to stop it. The server should be happy and alive for whatever, maintenaince, calming down, resin-admin and so on. In the old days, there i would just remove the server from apache's local resin.conf and mod_caucho was happy with it. And Resin as Loadbalancer: this would open more issues for me right now and is a tough decision: perl, mod_proxy, lots of rewrite rules to convert. First i need to sell resin4 anyways. :)</body>
  </mail>
  <mail>
    <header>[Resin-interest]  which version of ActiveMQ works with Resin 3.1?</header>
    <date>Tue Feb 12 22:08:01 CET 2013</date>
    <body>Hello, I was wondering if anyone has tried the latest version of ActiveMQ 5.x with Resin 3.1? Does Resin support only a particular version of ActiveMQ or will any version of ActiveMQ work with any version of Resin? Thank you, Sadhana -- View this message in context: http://old.nabble.com/which-version-of-ActiveMQ-works-with-Resin-3.1--tp35015859p35015859.html Sent from the Resin mailing list archive at Nabble.com.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] which version of ActiveMQ works with Resin 3.1?</header>
    <date>Wed Feb 13 01:05:51 CET 2013</date>
    <body>There shouldn't be a version dependency, particularly if you use the non-JCA version. -- Scott</body>
  </mail>
  <mail>
    <header>[Resin-interest] Watchdog loglevel</header>
    <date>Tue Feb 12 10:50:57 CET 2013</date>
    <body>Hi We're running Resin 3.1.11 (soon to be 3.1.12 in the next servicewindow) in our production environment, and a few days ago we had an app that was restarted several times by the watchdog - with no apparent reason. The watchdog-log contains this: [2013/02/08 11:17:46.478] WatchdogProcess[Watchdog[results],1] stopping Resin [2013/02/08 11:17:46.478] WatchdogProcess[Watchdog[results],2] starting Resin [2013/02/08 11:20:37.256] WatchdogProcess[Watchdog[results],2] stopping Resin [2013/02/08 11:20:37.256] WatchdogProcess[Watchdog[results],3] starting Resin [2013/02/08 11:23:24.221] WatchdogProcess[Watchdog[results],3] stopping Resin [2013/02/08 11:23:24.221] WatchdogProcess[Watchdog[results],4] starting Resin There was a lot of regular and normal activity in our apps stdout-log before and inbetween all the restarts, but nothing that - in our opinion - should cause a restart by the watchdog. The JVM log has no mention of problems (performing CMS and young generation GC as expected) and load on the server was also low - no automatic stacktraces were taken. We have been running with the same resin configuration, app codebase and OS software-stack for a long time, so we are quite baffeled, as this struck us as lightning from a clear sky. Is there any way of getting more verbose output about the watchdog and what it decides to do? We tried setting  &amp;lt;logger name="com.caucho" level="fine"/&amp;gt; and restarting Resin completely (not just a restart of the JVM), but that did not seem to help. Regards, Jens Dueholm Christensen Survey IT</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Watchdog loglevel</header>
    <date>Tue Feb 12 18:25:17 CET 2013</date>
    <body>Hi We're running Resin 3.1.11 (soon to be 3.1.12 in the next servicewindow) in our production environment, and a few days ago we had an app that was restarted several times by the watchdog -- with no apparent reason. The watchdog-log contains this: [2013/02/08 11:17:46.478] WatchdogProcess[Watchdog[results],1] stopping Resin [2013/02/08 11:17:46.478] WatchdogProcess[Watchdog[results],2] starting Resin [2013/02/08 11:20:37.256] WatchdogProcess[Watchdog[results],2] stopping Resin [2013/02/08 11:20:37.256] WatchdogProcess[Watchdog[results],3] starting Resin [2013/02/08 11:23:24.221] WatchdogProcess[Watchdog[results],3] stopping Resin [2013/02/08 11:23:24.221] WatchdogProcess[Watchdog[results],4] starting Resin There was a lot of regular and normal activity in our apps stdout-log before and inbetween all the restarts, but nothing that -- in our opinion -- should cause a restart by the watchdog. The JVM log has no mention of problems (performing CMS and young generation GC as expected) and load on the server was also low -- no automatic stacktraces were taken. Well, remember that the watchdog itself doesn't normally shutdown Resin on errors. Resin exits itself and the watchdog just starts a new instance. (Resin 4.0 communicates the reason better to the watchdog through exit codes.) So the problem is in the Resin instance itself. Are there hs_err* files or something similar? -- Scott We have been running with the same resin configuration, app codebase and OS software-stack for a long time, so we are quite baffeled, as this struck us as lightning from a clear sky. Is there any way of getting more verbose output about the watchdog and what it decides to do? We tried setting &amp;lt;logger name="com.caucho" level="fine"/&amp;gt; and restarting Resin completely (not just a restart of the JVM), but that did not seem to help. Regards, *Jens Dueholm Christensen *Survey IT</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Watchdog loglevel</header>
    <date>Wed Feb 13 13:42:23 CET 2013</date>
    <body>From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Scott Ferguson No, not from this particular incident, but we have an older hr_err-file and an old watchdog-log that does show a restart around the same time as the hs_err file was created. *Eeeek* (the same sound a small animal that's about to get squished makes!) - Seems the JVM crashed at that time due to: # Problematic frame: # C  [libawt.so+0x6f881]  IntRgbSrcMaskFill+0x1b1 Java frames: (J=compiled Java code, j=interpreted, Vv=VM code) J sun.java2d.loops.MaskFill.MaskFill(Lsun/java2d/SunGraphics2D;Lsun/java2d/SurfaceData;Ljava/awt/Composite;IIII[BII)V J sun.java2d.pipe.TextRenderer.drawGlyphList(Lsun/java2d/SunGraphics2D;Lsun/font/GlyphList;)V J sun.java2d.pipe.GlyphListPipe.drawString(Lsun/java2d/SunGraphics2D;Ljava/lang/String;DD)V J  sun.java2d.SunGraphics2D.drawString(Ljava/lang/String;FF)V J org.jfree.text.TextLine.draw(Ljava/awt/Graphics2D;FFLorg/jfree/ui/TextAnchor;FFD)V This app creates thousands upon thousands of PDF reports with jFreeChart every day.. We'll have to dig into this - thanks Scott. Regards, Jens Dueholm Christensen  Survey IT</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-interest Digest, Vol 80, Issue 3</header>
    <date>Thu Feb 07 12:06:31 CET 2013</date>
    <body>Using JMagick on resin 3.0.23 (IIRC) we were able to handle a portal where customers used to upload their photos which got resized to required 600x600. Did not notice any CPU usage or memory usage issues. Sandeep -- This message has been scanned for viruses and dangerous content by MailScanner, and is believed to be clean.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-interest Digest, Vol 80, Issue 3</header>
    <date>Thu Feb 07 12:18:28 CET 2013</date>
    <body>Thanks a lot! -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest]  help on resizing image</header>
    <date>Thu Feb 07 11:26:01 CET 2013</date>
    <body>We use JAI in one of our web apps. Have you set system properties java.awt.headless=true and java.awt.headlesslib=true ...? (Btw, for full performance, you should install JNI binaries. Thought that wouldn't be 100% Java either. And I haven't tried it.) ----- Original Message ----- Subject: [Resin-interest] help on resizing image Date: Thu, 07 Feb 2013 11:14:00 +0100 Hello On my web application, I need to resize images sent via multipart forms. When I try a console application using awt on my mac (see attached code), the console application starts a real Mac application with window and menu, while my code is only calling non-gui functions (ImageIO.read...) . I'm really affraid to add this code on my server, and I wonder if this may have impact on memory, performance and stability of the server. I would rather prefer a little imaging library like jmagick or gd for java, small and efficient. It's not 100% java but it does not create windows and menus... What do you use to resize images on the server size ? Thanks a lot. -- Riccardo Cohen +33 (0)6 09 83 64 49 SociÃ©tÃ© Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] help on resizing image</header>
    <date>Thu Feb 07 11:30:43 CET 2013</date>
    <body>I didn't know about properties "java.awt.headless=true". I'll try jmagick wich seems to be a good choice for performance. Thanks a lot -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] help on resizing image</header>
    <date>Thu Mar 14 08:36:14 CET 2013</date>
    <body>Hello After some test with jmagick, I found the solution difficult to rely on : - difficult to compile (but succeed at the end) - unstable (some jvm crash) - outputting some unwanted report on stdout (could not stop the verbose option) - strange API (which is not the main point) I finally go back to 100% pure java with awt, but with headless=true which sould solve my problem. Thanks -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest] help on resizing image</header>
    <date>Thu Feb 07 11:15:44 CET 2013</date>
    <body>Hello On my web application, I need to resize images sent via multipart forms. When I try a console application using awt on my mac (see attached code), the console application starts a real Mac application with window and menu, while my code is only calling non-gui functions (ImageIO.read...) . I'm really affraid to add this code on my server, and I wonder if this may have impact on memory, performance and stability of the server. I would rather prefer a little imaging library like jmagick or gd for java, small and efficient. It's not 100% java but it does not create windows and menus... What do you use to resize images on the server size ? Thanks a lot. -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr public static void main(String[] args) if(mode.equals("resize")) image1_converted = new BufferedImage(outputWidth, g1.drawImage(image1, 0, 0, outputWidth, outputHeight, image2_converted = new BufferedImage(outputWidth, g2.drawImage(image2, 0, 0, outputWidth, outputHeight, image3_converted = new BufferedImage(outputWidth, g3.drawImage(image3, 0, 0, outputWidth, outputHeight, else image1_converted = new BufferedImage(width1, height1, image2_converted = new BufferedImage(width2, height2, image3_converted = new BufferedImage(width3, height3, ImageIO.write(image1_converted, ext1, new ImageIO.write(image2_converted, ext2, new ImageIO.write(image3_converted, ext3, new</body>
  </mail>
  <mail>
    <header>[Resin-interest] Does Resin 4.0 support integration with ActiveMQ	via JCA?</header>
    <date>Wed Feb 06 19:16:00 CET 2013</date>
    <body>Hello Resin Developers, Could you please confirm if the ActiveMQ integration is supported and will work with Resin 4.0? I don't see any documentation on it and therefore am unable to figure out how to configure the jms queue in the resin-web.xml file. The old way (resin 3.x) of configuring it doesn't seem to work. Also, I am trying to find out how to get the sources for JMSQueue implementation so I can debug the issue myself. Could someone please help me? Thanks a lot, Sadhana</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Does Resin 4.0 support integration with ActiveMQ via JCA?</header>
    <date>Wed Feb 06 19:19:28 CET 2013</date>
    <body>Hello Resin Developers, Could you please confirm if the ActiveMQ integration is supported and will work with Resin 4.0? I don't see any documentation on it and therefore am unable to figure out how to configure the jms queue in the resin-web.xml file. The old way (resin 3.x) of configuring it doesn't seem to work. Also, I am trying to find out how to get the sources for JMSQueue implementation so I can debug the issue myself. Could someone please help me? I'll need to update the docs (and test with ActiveMQ). The example you gave used a very old draft of CDI (before it was called CDI.) The injection annotation is @javax.inject.Inject. Do you need JCA? (For example, for XA support.) If you don't, the non-JCA configuration would be simpler. -- Scott Thanks a lot, Sadhana</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Does Resin 4.0 support integration with ActiveMQ via JCA?</header>
    <date>Wed Feb 06 22:19:16 CET 2013</date>
    <body>Hello Scott, Thank you very much for replying! I have switched to using resin 4.0 now and I did use @javax.inject.Inject annotation but that didn't seem to work either. My configuration in the resin-web.xml file is: class="org.apache.activemq.ra.ActiveMQManagedConnectionFactory" I have added in the resin.xml, the resource-deploy path .... And I have put activeMQ .rar file in the deploy dir. I have modififed ra.xml and brokerConfig.xml to use the vm://localhost as I want to use the ActiveMQ embedded broker. I don't need JCA configuration if by that you mean XA transaction.  A simple configuration (non-JCA) one would be great! I was unable to get connectionFactory reference using the Inject annotation but if I do jndi lookup, it is able to find it: ConnectionFactory cFactory = (ConnectionFactory) I can't get jms queue references either using @Named annotation but I can create the queue after I get the connection and the session. My next issue is how to make MDB listener listen on the same queue since now it's not wired through the configuration. Is my MDB ejb configuration in the resin-web.xml file correct? did it change in 4.0? Thank you so much for helping out! Sadhana http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest -- View this message in context: http://old.nabble.com/Does-Resin-4.0-support-integration-with-ActiveMQ-via-JCA--tp34990885p34991764.html Sent from the Resin mailing list archive at Nabble.com.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Does Resin 4.0 support integration with ActiveMQ via JCA?</header>
    <date>Mon Feb 11 18:48:47 CET 2013</date>
    <body>Hello Scott, I checked that you have updated the docs: http://wiki4.caucho.com/Resin_ActiveMQ_How_to And http://wiki4.caucho.com/Resin_JCA_ActiveMQ_How_to . I followed the document to change my code (I was not using both @Inject and @Named together) but it still didn't work for me. By this I mean I don't get reference to the injected factory or Queue in my code. One question I have is that I should be able to use these annotations in any class not just in the servlet, right? I tried both with and without JCA... Did the code you posted in the document work for you with ActiveMQ? Could you give me any idea what I could be doing wrong? I will post my code below. Thank you very much, Sadhana resin-web.xml ========= class="org.apache.activemq.ra.ActiveMQManagedConnectionFactory" Class JobManager.java ============== ================= I'll need to update the docs (and test with ActiveMQ). The example you gave used a very old draft of CDI (before it was called CDI.) The injection annotation is @javax.inject.Inject. Do you need JCA? (For example, for XA support.) If you don't, the non-JCA configuration would be simpler. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Urgent: Help needed using ActiveMQ with Resin 3.1	and Resin 4.0</header>
    <date>Tue Feb 05 01:14:30 CET 2013</date>
    <body>Hi All, I am trying to make ActiveMQ work with resin 3.1 first and then will be moving it to resin 4.0. I am new to Resin, could someone please point me to Resin documentation showing an example/tutorial to use activeMQ with resin? I tried with page: http://wiki.caucho.com/ActiveMQ but am unable to make it work!  I have following issues: The @In annotation doesn't return me a reference to a connection factory. I get null pointer. I have declared my connection factory in resin-web.xml as follows: and in my class called JobManager.java I have am using it as follows: Could you please help to see what I am doing wrong? How can I code it without using the @In annotation? Thank you so much for your help! Sadhana</body>
  </mail>
  <mail>
    <header>[Resin-interest] Disable archive/rollback?</header>
    <date>Wed Jan 23 14:36:47 CET 2013</date>
    <body>Is it possible to completely disable deployment archiving as described on http://www.caucho.com/resin-4.0/admin/deploy.xtp ? Or at least disable the undocumented(?) automatic rollback? Background: We made some configuration changes that seemed to work fine, but turned out to be invalid. Trying to deploying a new .war resulted in getting the contents of the previous one in the exploaded dir. Changing config back did not help. Upon further examination of the logs, there was an error (see below) which might itself be some kind of bug in Resin (version 4.0.29). Fortunately I remembered having similar symptoms a while back and then spent loads of time before we found and deleted the .git directory under resin-data. We tried that again and then was able to boot our application. We would prefer disabling the archive + rollback feature altogether, as in our case it seems only to cause confusion and problems. The error: 'ddd10c59a0204e29d950c6dc5c863d4a24c59ef5' has an unknown type null at com.caucho.env.repository.RepositoryTagMap.&amp;lt;init&amp;gt;(RepositoryTagMap.java:151) at com.caucho.env.repository.AbstractRepository.addTagData(AbstractRepository.java:345) at com.caucho.env.repository.FileRepository.putTag(FileRepository.java:104) at com.caucho.env.repository.AbstractRepository.commitArchive(AbstractRepository.java:243) at com.caucho.env.deploy.ExpandDeployController.commitArchive(ExpandDeployController.java:510) at com.caucho.env.deploy.ExpandDeployController.extractApplication(ExpandDeployController.java:383) at com.caucho.env.deploy.ExpandDeployController.preConfigureInstance(ExpandDeployController.java:340) at com.caucho.env.deploy.DeployController.startImpl(DeployController.java:674) at com.caucho.env.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:77) at com.caucho.env.deploy.DeployController.startOnInit(DeployController.java:530) at com.caucho.env.deploy.DeployContainer.start(DeployContainer.java:170) at com.caucho.server.webapp.WebAppContainer.start(WebAppContainer.java:728) at com.caucho.server.host.Host.start(Host.java:677) at com.caucho.env.deploy.DeployController.startImpl(DeployController.java:680) at com.caucho.env.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:77) at com.caucho.env.deploy.DeployController.startOnInit(DeployController.java:530) at com.caucho.env.deploy.DeployContainer.start(DeployContainer.java:170) at com.caucho.server.host.HostContainer.start(HostContainer.java:542) at com.caucho.server.cluster.ServletService.start(ServletService.java:1337) at com.caucho.server.cluster.ServletSystem.start(ServletSystem.java:72) at com.caucho.env.service.ResinSystem.startServices(ResinSystem.java:529) at com.caucho.env.service.ResinSystem.start(ResinSystem.java:496) at com.caucho.server.resin.Resin.start(Resin.java:817) at com.caucho.server.resin.Resin.initMain(Resin.java:949) at com.caucho.server.resin.Resin.main(Resin.java:1398) --</body>
  </mail>
  <mail>
    <header>[Resin-interest] Simple loadbalancing per mod_caucho, without using cluster-functionality in resin4</header>
    <date>Mon Jan 21 20:14:58 CET 2013</date>
    <body>Hi, with resin2 a setup to loadbalance was pretty simple: LoadModule caucho_module  modules/mod_caucho.so CauchoConfigFile /home/krische/resin/current/conf/resin.conf And "resin.conf" would contain N "srun" entries for N backend servers. Done. Even when resin.conf changes, mod_caucho would react accordingly. No restart of apache was necessary. My question: is that possible in resin4 without using any fancy resin pro functionality? Because in the community edition i already fail to add N server into a And to add N CauchoHosts manually in the httpd.conf and reload the whole apache is a pita. Also i need root-access for that. What would you guys recommend? Or has anyone ever tried a different kind of loadbalancing than e.g. mod_proxy on apache? Thanks.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Simple loadbalancing per mod_caucho, without using cluster-functionality in resin4</header>
    <date>Mon Jan 21 22:36:17 CET 2013</date>
    <body>Since the resin.xml is now too flexible for a C-based parser to handle, the backend Resin does the parsing and then forwards the configuration on to mod_caucho. So that's no longer possible. Well, we'd recommend buying a license, of course :) mod_proxy should work fine too. I think we added a session option to make sticky sessions easier for mod_proxy to handle. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] JMS messaging with ClusterTopic not working in	resin &amp;gt; 4.0.27</header>
    <date>Mon Jan 14 20:56:55 CET 2013</date>
    <body>Below is a simple servlet/MDB/resin-web combo that sends/reads a message. It works in 4.0.27 but does not work in later versions. By "does not work" I mean that the message does not appear to be sent at all. At the 'fine' logging level there is an entry like: ClusterTopic[TestClusterTopic] sending TextMessageImpl[ID:5dQYaEuP/vkAE8OpoeJQAA] but never a subsequent entry like: [13-01-14 13:51:22.083] FileSubscriberQueue[TestClusterTopic] send message TextMessageImpl[ID:/bKgP3znGffAE8Op2cowAA] and never an entry indicating that the message was received by either server in the cluster. For my testing, the only configuration changes that I made to resin's out-of-the-box config were the following properties: log_level      : fine app_servers    : 127.0.0.1:6801 127.0.0.1:6802 app-0.http     : 8080 app-1.http     : 8081 admin_user     : test Am I doing something wrong and I just got lucky that it worked in earlier versions? Dan /** * Servlet implementation class CtTest */ @javax.inject.Inject @Resource(mappedName = "jms/TestConnectionFactory") JmsConnectionFactory factory = new /** * @see HttpServlet#HttpServlet() */ /** * @see Servlet#init(ServletConfig) */ // Initialize JMS objects Session session = conn.createSession(false, MessageConsumer consumer = // Subscribe to the topic. /** * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse *      response) */ protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, // Initialize JMS objects // Publish the message. TopicSession jmsSession = TopicPublisher publisher = // Do exception handling @MessageDriven(mappedName="TestClusterTopic", public TestListener() public void onMessage(Message msg) System.out.println(String.format("**** Received message: '%s'", // TODO Auto-generated catch block http://caucho.com/ns/resin ' xmlns:jms="urn:java:com.caucho.jms" xmlns:resin="urn:java:com.caucho.resin"</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] JMS messaging with ClusterTopic not working in	resin &amp;gt; 4.0.27</header>
    <date>Fri Feb 01 17:54:36 CET 2013</date>
    <body>Has anyone used ClusterTopic successfully in versions &amp;gt; 4.0.27? Dan http://caucho.com/ns/resin ' http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] System.getenv() behaves differently</header>
    <date>Mon Jan 14 15:16:31 CET 2013</date>
    <body>I have noticed that System.getenv() behaves differently on our different Linux servers. When running stand-alone Java applications there is no issue, but on at least one server the environment variables are inherited from the watchdog process to the Resin process, and on others they are not. This can be verified with -verbose when starting Resin. I cannot find any difference in the setup (startup script + config), but on the other hand I'm not sure what I should be looking for. Any ideas? (Resin version is 4.0.29) --</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] System.getenv() behaves differently</header>
    <date>Mon Jan 14 17:41:13 CET 2013</date>
    <body>Can you send a -verbose? When the watchdog spawns Resin, the env is built using System.getenv() on the watchdog, and then a few overrides extend the environment (CLASSPATH, LD_LIBRARY_PATH). -- Scott</body>
  </mail>
  <mail>
    <header>[Resin-interest] Easing Development</header>
    <date>Thu Jan 03 23:22:19 CET 2013</date>
    <body>I typically work on web apps as a component of other projects. At any given time on my local machine I've got three or four web apps that I rotate through. To speed things up, I reconfigure resin.xml each time I switch to a new one, so I don't have to wait for the others to start up. I run resin in console mode to make it easy to kill and restart I find it a little cumbersome to go to resin.xml and uncomment one &amp;lt;webapp&amp;gt; and comment out another. I'm wondering if I can't accomplish the same thing by moving the &amp;lt;webapp&amp;gt; declarations to separate files in a known directory, and just have resin.xml include all the files in that directory. That way, I can just move the fragment files in and out of this "enabled apps" directory. So, I tried changing resin.xml to: and I'm trying to include a file that contains: ... tags, but it doesn't like that, either. Can I not do this? -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Thu Jan 03 23:33:08 CET 2013</date>
    <body>You need to use &amp;lt;host&amp;gt; in this case. The &amp;lt;resin:import&amp;gt; expects the current tag as the included top-level tag. That way, your foo.xml could have multiple &amp;lt;web-app&amp;gt; items or other -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Thu Jan 03 23:40:15 CET 2013</date>
    <body>I tried that, too, but got the same error. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Fri Jan 04 18:47:31 CET 2013</date>
    <body>Rick, I've been using resin's import ability with 3.0, 3.1 and now 4.0. I had some issues in 4.0 that required tweaking my namespaces on the imported xml file so below is an example of my resin.xml and app.xml that I am now using in 4.0.32. If you are using 3, you might have to change the location in resin.xml and/or the namespaces on the included files. I am not sure about moving the files in and out of the directory without restarting resin…if the war file is still in the web apps directory resin will try to run it without the config. You would have to experiment with that as I usually run all the apps all the time. My primary purpose for using the import is to have an app xml file for each environment (production, qa, dev, etc) which allows me to deploy the war and xml to whichever environment without touching the resin.xml and also using the exact same war file in every environment. resin.xml http://caucho.com/ns/resin" ... ... ... ... ... myapp-environment.xml Inside the webapps folder, I then add a file for each app that needs a configuration. I set various things in this file but below are a force-to-SSL redirect, database connection pool, a hessian service used by the app, and a simple JNDI string. http://caucho.com/ns/resin" https://www.mydomain.com/aws/" http://localhost/hessianapp/service/sample http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Sat Jan 05 12:58:34 CET 2013</date>
    <body>Thanks, that seems to have done the trick. I thought I tried that, but perhaps not. http://caucho.com/ns/resin" http://caucho.com/ns/resin" https://www.mydomain.com/aws/" http://localhost/hessianapp/service/sample http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Enforcing single session per user name</header>
    <date>Tue Feb 05 09:57:38 CET 2013</date>
    <body>Hi We are using customised JDBC authenticator for login. Users are meant to use individual accounts but we suspect users are sharing accounts. We would like to implement a login scheme that checked for existing sessions for the same user name and closed them. Is this something that should be possible to do with the current API? Does it need to be done in code or is there a configuration option for this? What are the classes/methods that I should be looking at to research the implementation? Any pointers would be most welcome. thanks Alan -- Alan Wright Athene Systems tel 0845 230 9803 Athene Systems Limited Registered Office: Shieling House Invincible Road Farnborough GU14 7QU Registered in England and Wales No. 3156080</body>
  </mail>
  <mail>
    <header>[Resin-interest] Hessian between servers on different versions of	Resin</header>
    <date>Fri Jun 07 18:36:59 CEST 2013</date>
    <body>Hi We are sending messages using hessian from our server to another server. When both servers were on Resin 2.1.17 all was OK. We have since upgraded to Resin 4.0.36 on our server (when will the 4.1 series come out by the way?) Now the client code no longer works - throwing the following error on our server (the client) at the point where the remote method is invoked. I am I doing something stupid expecting the 2 to communicate. Is it possible to get a Hessian 2 client to talk to a hessian 1 server? com.caucho.hessian.client.HessianRuntimeException: com.caucho.hessian.io.HessianProtocolException: ' ' is an unknown code at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:222) at $Proxy0.addRegistrant(Unknown Source) at com.athene.jaffa.xbatch.admin.MarketMakerTransferXBatch.main(MarketMakerTransferXBatch.java:77) Caused by: com.caucho.hessian.io.HessianProtocolException: ' ' is an unknown code at com.caucho.hessian.client.HessianProxy.invoke(HessianProxy.java:220) ... 2 more Thanks Alan -- Alan Wright Athene Systems tel 0845 230 9803 Athene Systems Limited Registered Office: Shieling House Invincible Road Farnborough GU14 7QU Registered in England and Wales No. 3156080</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Hessian between servers on different versions of Resin</header>
    <date>Fri Jun 07 22:01:29 CEST 2013</date>
    <body>Hmm. I'm not sure. We've been working on getting a usable 7.0.0 out. I'm not sure about 2.1.17. It's very old. Hessian 2/1 are designed to interoperate (basically the caller sends at Hessian 1 call with a note that it can upgrade to Hessian 2.) -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Fri Jan 04 09:54:08 CET 2013</date>
    <body>I personnaly have multiple resin.xml, and launch resin on the one I want to see. The only difference in the resin.xml is some path and database access. I use this because my application is twice on my mac : one for development, and one copy of the production. They have different directories and different databases. You could also run all applications in the same resin instance, thanks to different ports, 8000 for the first, 8001 for the second etc. then you don't have to restart resin each time you want to change the application. For this I guess you'd have to put multiple &amp;lt;host&amp;gt; with different port (never done that). -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Fri Jan 04 13:31:13 CET 2013</date>
    <body>I actually deliberately restart resin quite frequently. It doesn't pick up certain changes just reloading the class (for example, a Spring @Controller reload won't cause Spring to notice a new handler mapping). Add to that a persistent leak that causes resin to gobble up memory after a few app reloads, and it's best (for me) to restart resin frequently. Which is, more or less, orthogonal to easily switching configurations. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Fri Jan 04 13:39:54 CET 2013</date>
    <body>Riccardo has it right - the easiest way to do this is to simply have a resin.xml for each webapp - and then just start resin using the resin.xml that is configured for the app you want to run.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Mon Jan 07 09:25:34 CET 2013</date>
    <body>I have reported a classloader / memory leak that I believe Scott tried to fix for 4.0.33. Haven't had time to verify yet though. Then add this library to your web app, to get rid of third party leaks: http://java.jiderhamn.se/2012/03/04/classloader-leaks-vi-this-means-war-leak-prevention-library/ ----- Original Message ----- Subject: Re: [Resin-interest] Easing Development Date: Fri, 4 Jan 2013 04:31:03 -0800 I actually deliberately restart resin quite frequently. ... Add to that a persistent leak that causes resin to gobble up memory after a few app reloads, and it's best (for me) to restart resin frequently.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Easing Development</header>
    <date>Mon Jan 07 10:04:53 CET 2013</date>
    <body>http://java.jiderhamn.se/2012/03/04/classloader-leaks-vi-this-means-war-leak-prevention-library/ I'll check it out. I often need to restart, anyway, because I use Spring MVC, but that might help.</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resource bundle errors in jvm log</header>
    <date>Sat Dec 29 03:40:16 CET 2012</date>
    <body>I have been getting the error below in my jvm log frequently. Odd thing is that it is not just a single page throwing the error and the pages that sometimes throw the error work perfectly fine (e.g. the message is found and displayed in the resulting HTML). Is this a false warning? Is there something wrong with my setup? I configure JSTL in web.xml using: The offending line from the stack trace seems to lead to the following in the JSP files: The file "messages.properties" is in WEB-INF/classes. Any ideas? System Information Debian 6.0.6 Java 1.6.0_26 Resin Pro 4.0.32 Error from jvm log java.lang.ClassNotFoundException: messages in EnvironmentClassLoader[web-app:production/webapp/default/aws] at com.caucho.loader.DynamicClassLoader.loadClass(DynamicClassLoader.java:1502) at com.caucho.loader.DynamicClassLoader.loadClass(DynamicClassLoader.java:1479) at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:247) at com.caucho.jsp.BundleManager.getBaseBundle(BundleManager.java:254) at com.caucho.jsp.BundleManager.getBundle(BundleManager.java:147) at com.caucho.jsp.PageContextImpl.getBundle(PageContextImpl.java:1558) at com.caucho.jsp.PageContextImpl.getLocalizedMessage(PageContextImpl.java:1515) at _jsp._WEB_22dINF._views._auth._login__jsp$_CauchoFragment_0._jsp_invoke(_login__jsp.java:221)</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resin on Raspberry Pi?</header>
    <date>Fri Dec 21 08:50:09 CET 2012</date>
    <body>Has anyone tried running resin on Raspberry Pi? So far I've got the JDK up, but it won't run in server mode (it's an armv6, and the JVM says server mode requires armv7+). -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin on Raspberry Pi?</header>
    <date>Fri Dec 21 20:15:40 CET 2012</date>
    <body>Well funny you should ask, that is my current pet project when I'm not doing bug fixes and customer support :) I've been keeping a journal on our wiki that may interest you: http://wiki4.caucho.com/Paul%27s_Raspberry_Pi_Journal I ran into the same JDK/ARMv7 issue as you.  Resin adds -server automatically and you can't work around it in the current version. The alternatives are to use the Oracle's embedded JRE or OpenJDK.  The ejre doesn't have a compiler, so JSP won't work.  OpenJDK is very slow, but does work fully.  There also, the -server locks you into the Zero VM, which is slow. I've done some performance testing (mostly outside of Resin) of the various VM's available for Raspberry Pi: http://wiki4.caucho.com/Java_On_Raspberry_Pi_Performance If you come up with anything interesting related to Java/Resin on a Pi I would love to hear it.  Otherwise I'm currently working on a new cut of Resin for this: http://wiki4.caucho.com/Resin_Changes_To_Support_Raspberry_Pi Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin on Raspberry Pi?</header>
    <date>Sat Dec 22 01:07:25 CET 2012</date>
    <body>http://wiki4.caucho.com/Paul%27s_Raspberry_Pi_Journal http://wiki4.caucho.com/Java_On_Raspberry_Pi_Performance http://wiki4.caucho.com/Resin_Changes_To_Support_Raspberry_Pi Well, this is excellent news! I was afraid I was going to have to roll my own little HTTP server to handle REST requests. I'll take a look at your other links over the weekend. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] More servlet 3.0 issues</header>
    <date>Thu Dec 20 00:22:16 CET 2012</date>
    <body>Hi. I'm able to register a servlet to match "/*" (and my servlet ends up matching only some paths under "/service"). But if I register it under "/service/*", then none of the paths match (well, only "/service" matches, anything else, include "/service/", doesn't match. "/service": 15:19:49.771 WARN  springframework.web.servlet.DispatcherServlet (DispatcherServlet.java:1108) No mapping found for HTTP request with URI [/service/] in DispatcherServlet with name 'dispatcher' -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] server 'app-0' is an unknown server in the	configuration file?</header>
    <date>Wed Dec 19 07:47:22 CET 2012</date>
    <body>I just built a new machine, by installing resin .33-snap, and copying over the resin.xml and resin.properties files from a working machine with .32 on it. When I launch with resin.sh console, I get: com.caucho.config.ConfigException: -server 'app-0' is an unknown server in the configuration file. at com.caucho.server.resin.Resin.initTopology(Resin.java:1069) at com.caucho.server.resin.Resin.initServletSystem(Resin.java:1275) at com.caucho.server.resin.Resin.configure(Resin.java:997) at com.caucho.server.resin.Resin.initMain(Resin.java:979) at com.caucho.server.resin.Resin.main(Resin.java:1437) -server 'app-0' is an unknown server in the configuration file. Am I missing something? -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] server 'app-0' is an unknown server in the	configuration file?</header>
    <date>Wed Dec 19 09:22:13 CET 2012</date>
    <body>My .properties file: # resin.properties - configuration variable values # # See resin.xml, cluster-default.xml, and health.xml for full configuration. # # Individual server overrides can be specified by prepending the server.id. # For example, increasing the log level for an individual server: # # log_level : info # app-0.log_level : finest # # Like Resin XML configuration, modification of this file will trigger # a restart. # # General log level (modify resin.xml for more granular log level adjustments) log_level     : finer # Enable verbose browser error reporting dev_mode      : true # How often Resin should check for updated files. # dependency_check_interval : 5m # Enable /resin-doc Resin documentation resin_doc     : false # List Triad server ip-addresses:hmux-port for each tier, space separated # App tier Triad servers must be listed to enable web-tier to # app-tier load-balancing # web-tier Triad servers: web-0 web-1 web-2 # web_servers      : 127.0.0.1:6810 # app-tier Triad servers: app-0 app-1 app-2 app_servers      : 127.0.0.1:6800 # Configures Resin for a memcached server tier # memcached-tier Triad servers: memcached-0 memcached-1 memcached-2 # memcached_servers    : 127.0.0.1:6820 # memcached_port : 11211 # Allow elastic nodes to join the cluster (enable for cloud mode) # elastic_cloud_enable : true # The cluster that elastic nodes should join - each will contact a Triad server # Use a separate resin.properties file for each cluster home_cluster : app # Used for an elastic server to join the cluster in home_cluster # elastic_server : true # Create a distinct webapps/ directory for each server, for vertical scaling # elastic_webapp : true # Used for cloud servers with dynamic IP addresses where the DNS name for the # server is assigned after the server starts. Resin will retry the start. # elastic_dns : true # specifies the --server in the config file # home_server : app-0 # Set HTTP and HTTPS bind address # http_address  : * # Set HTTP and HTTPS ports. # Use overrides for individual server control, for example: app-0.http : 8081 app.http          : 80 # app.https         : 8443 web.http          : 80 # web.https         : 8443 # memcached.http      : 8080 # memcached.https     : 8443 # For security, Resin can switch to a non-root user after binding to port 80 setuid_user   : www setuid_group  : www # Arg passed directly to the JVM # jvm_args  : -Xmx2048m -XX:MaxPermSize=256m # Local URLs for the watchdog to check to ensure the server is up, # space separated # http_ping_urls : http://127.0.0.1/test.jsp # Throttle the number of active threads for a port port_thread_max   : 256 accept_thread_max : 32 accept_thread_min : 4 # Enable JNI TCP speed optimizations tcp_cork : true sendfile : true # OpenSSL certificate configuration # Keys are typically stored in the resin configuration directory. # openssl_file : keys/test.crt # openssl_key : keys/test.key # openssl_password : changeme # JSSE certificate configuration # Keys are typically stored in the resin configuration directory. # jsse_keystore_type : jks # jsse_keystore_file : /etc/resin/keys/server.keystore # jsse_keystore_password : changeme # In absence of a signed certificate, Resin will fallback to using a # self-signed development certificate if HTTPS is enabled # Enable the proxy-cache - for caching static content in memory proxy_cache_enable : true # Sets the proxy cache memory size # proxy_cache_size : 256m # Enable clustered persistent sessions (for failover) session_store : true # disable the quercus *.php mapping when using Apache for PHP quercus_disable : true # Web-apps named with numeric suffixes, e.g. foo-10.0.war and can be browsed # as /foo. When a new version of the web-app is deployed, Resin continues # to route active session requests to the previous web-app version while # new sessions go to the new version, so users will not be aware of the # application upgrade. # webapp_multiversion_routing : true # Set the email address to receive weekly and restart PDF reports # email : ad...@example.com # Set a global password to prevent foreign Resin instances from connecting. # Must be identical between web, app, and cache clusters. # cluster_system_key : changeme # Enable remote admin (for remote CLI and for EC2 ext: triad discovery) # remote_admin_enable : true # Enable /resin-admin web administration console web_admin_enable : true # Permit access to /resin-admin from non-local network ip-addresses # web_admin_external : true # Require HTTPS to access /resin-admin # web_admin_ssl : true # Enable Resin REST Admin # rest_admin_enable : true # Require SSL for REST Admin # rest_admin_ssl : true # Access to /resin-admin and remote CLI is password restricted. # Use "resinctl generate-password" and copy/paste here to set the admin admin_user : admin_password : # Enable reading EC2 user data as resin properties # properties_import_url : http://169.254.169.254/latest/user-data http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] server 'app-0' is an unknown server in the	configuration file?</header>
    <date>Wed Dec 19 16:28:46 CET 2012</date>
    <body>Hi Rick, I tried the .properties you sent but can't replicate.  Can you send me your resin.xml directly? (co...@caucho.com) Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] java.lang.ClassFormatError: Absent Code attribute	in method that is not native or abstract in class file	javax/servlet/ServletException</header>
    <date>Fri Dec 14 10:41:14 CET 2012</date>
    <body>I've been working on this Spring-based webapp. It was originally a servlet-2.5, XML-configured webapp that ran great under Resin and I had a nice spring-test-mvc-based test class for it, and it all worked well. After upgrading it to servlet-3.0, and using only annotations to configure (no XML!), the webapp works, but I can't get my test class to work. I'm fairly sure I still haven't configured it correctly, but in the Spring forums I'm being told that I'm linking against the javaee-web-api 6.0 jar, which contains no implementation. While this is true, it was also true before the configuration changes. So the guy (a fair expert on Spring) tells me it must be due to some JAR load order difference that's causing the error to appear now. Thing is, in the test environment, I don't have any part of resin involved. I don't know where else I might be getting an implementation. The exception is [junit] java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/ServletException [junit]     at java.lang.ClassLoader.defineClass1(Native Method) ... [junit]     at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:230) ... [junit]     at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:148) [junit]     at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:105) ... So, I'm just curious if anyone here can shed some light on how this can come to be. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/ServletException</header>
    <date>Fri Dec 14 18:10:03 CET 2012</date>
    <body>Try looking at System.getProperty("java.class.path"). That might help track down the jar order. jar order can sometimes be random, depending on how the classpath is built. That's a very strange error message. It shouldn't even be possible with normal complication. It seems to be saying that someone took a post-processor to a compiled class that stripped out parts of the .class file, specifically the "Code" attribute, which is the part of the .class file that contains the actual code for a method. So whatever jar is containing that class is a weird/broken jar. -- Scott</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 12:56:31 CET 2012</date>
    <body>Hi guys. The .33 snapshot is instantiating my initializer correctly, and that code is calling this: ServletRegistration.Dynamic registration = However, I don't see anything in the Caucho logging indicating that it registered a servlet (not sure if there is anything). I did see this, which doesn't seem right: [12-12-13 03:50:11.038] CONFIG com.caucho.server.dispatch.ServletMapper addUrlMapping: servlet-mapping / -&amp;gt; resin-file It also doesn't respond to a request for http://localhost:8080/ . I see this much: [12-12-13 03:50:22.636] FINER com.caucho.network.listen.TcpSocketLink requestAccept: TcpSocketLink[id= http://*:8080-5,http://*:8080,INIT ] request-accept http://*:8080-5 (count=4, idle=3) [12-12-13 03:50:22.636] FINEST com.caucho.network.listen.TcpSocketLink startThread: TcpSocketLink[id= http://*:8080-5,http://*:8080,INIT ] start thread resin-port-8080-22 (count=5, idle=4) [12-12-13 03:50:22.637] FINEST com.caucho.network.listen.TcpSocketLink initSocket: TcpSocketLink[id=1,app-0] starting connection TcpSocketLink[id= http://*:8080-1,http://*:8080,ACCEPT ], total=5 [12-12-13 03:50:22.637] FINER com.caucho.network.listen.TcpSocketLink handleAcceptTaskImpl: TcpSocketLink[id= http://*:8080-1,http://*:8080,ACCEPT ] accept from [::1]:8080 [12-12-13 03:50:22.645] FINE com.caucho.server.http.HttpRequest parseRequest: Http[app-0, 1] GET / HTTP/1.1 [12-12-13 03:50:22.645] FINE com.caucho.server.http.HttpRequest parseRequest: Http[app-0, 1] Remote-IP: [::1]:8080 [12-12-13 03:50:22.645] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Host: localhost:8080 [12-12-13 03:50:22.645] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/536.26.17 (KHTML, like Gecko) Version/6.0.2 Safari/536.26.17 [12-12-13 03:50:22.645] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 [12-12-13 03:50:22.646] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] DNT: 1 [12-12-13 03:50:22.646] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Cache-Control: max-age=0 [12-12-13 03:50:22.646] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Accept-Language: en-us [12-12-13 03:50:22.646] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Accept-Encoding: gzip, deflate [12-12-13 03:50:22.646] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Cookie: remember=rmann:0:cb76f8d95c02b5fae41a3fa0206a927c [12-12-13 03:50:22.647] FINE com.caucho.server.http.HttpRequest parseHeaders: Http[app-0, 1] Connection: keep-alive [12-12-13 03:50:22.651] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/ [12-12-13 03:50:22.651] FINEST com.caucho.server.webapp.ServletContextImpl getResourceAsStream: java.io.FileNotFoundException: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/ at com.caucho.vfs.JniFilePathImpl.openReadImpl(JniFilePathImpl.java:402) at com.caucho.vfs.Path.openRead(Path.java:1149) at com.caucho.server.webapp.ServletContextImpl.getResourceAsStream(ServletContextImpl.java:404) at com.caucho.server.dispatch.ServletMapper.mapServlet(ServletMapper.java:252) at com.caucho.server.webapp.WebApp.buildInvocation(WebApp.java:3906) at com.caucho.server.webapp.WebAppContainer.buildInvocation(WebAppContainer.java:781) at com.caucho.server.host.Host.buildInvocation(Host.java:752) at com.caucho.server.host.HostContainer.buildInvocation(HostContainer.java:319) at com.caucho.server.cluster.ServletService.buildInvocation(ServletService.java:1014) at com.caucho.server.dispatch.InvocationServer.buildInvocation(InvocationServer.java:247) at com.caucho.server.dispatch.InvocationServer.buildInvocation(InvocationServer.java:220) at com.caucho.server.http.AbstractHttpRequest.buildInvocation(AbstractHttpRequest.java:1597) at com.caucho.server.http.AbstractHttpRequest.getInvocation(AbstractHttpRequest.java:1570) at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:820) at com.caucho.network.listen.TcpSocketLink.dispatchRequest(TcpSocketLink.java:1345) at com.caucho.network.listen.TcpSocketLink.handleRequest(TcpSocketLink.java:1301) at com.caucho.network.listen.TcpSocketLink.handleRequestsImpl(TcpSocketLink.java:1285) at com.caucho.network.listen.TcpSocketLink.handleRequests(TcpSocketLink.java:1193) at com.caucho.network.listen.TcpSocketLink.handleAcceptTaskImpl(TcpSocketLink.java:992) at com.caucho.network.listen.ConnectionTask.runThread(ConnectionTask.java:117) at com.caucho.network.listen.ConnectionTask.run(ConnectionTask.java:93) at com.caucho.network.listen.SocketLinkThreadLauncher.handleTasks(SocketLinkThreadLauncher.java:169) at com.caucho.network.listen.TcpSocketAcceptThread.run(TcpSocketAcceptThread.java:61) at com.caucho.env.thread2.ResinThread2.runTasks(ResinThread2.java:173) at com.caucho.env.thread2.ResinThread2.run(ResinThread2.java:118) [12-12-13 03:50:22.652] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.jsp [12-12-13 03:50:22.652] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.php [12-12-13 03:50:22.652] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.html [12-12-13 03:50:22.652] FINER com.caucho.server.dispatch.ServletMapper mapServlet: WebApp[production/webapp/default/ROOT] map (uri:/ -&amp;gt; resin-file) [12-12-13 03:50:22.654] FINEST com.caucho.server.webapp.ServletContextImpl getResourceAsStream: java.io.FileNotFoundException: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/ at com.caucho.vfs.JniFilePathImpl.openReadImpl(JniFilePathImpl.java:402) at com.caucho.vfs.Path.openRead(Path.java:1149) at com.caucho.server.webapp.ServletContextImpl.getResourceAsStream(ServletContextImpl.java:404) at com.caucho.rewrite.WelcomeFile.matchWelcomeUri(WelcomeFile.java:207) at com.caucho.rewrite.WelcomeFile.matchWelcomeFileResource(WelcomeFile.java:150) at com.caucho.rewrite.WelcomeFile.map(WelcomeFile.java:125) at com.caucho.server.webapp.WebApp.applyWelcomeFile(WebApp.java:3986) at com.caucho.server.webapp.WebApp.buildInvocation(WebApp.java:3912) at com.caucho.server.webapp.WebAppContainer.buildInvocation(WebAppContainer.java:781) at com.caucho.server.host.Host.buildInvocation(Host.java:752) at com.caucho.server.host.HostContainer.buildInvocation(HostContainer.java:319) at com.caucho.server.cluster.ServletService.buildInvocation(ServletService.java:1014) at com.caucho.server.dispatch.InvocationServer.buildInvocation(InvocationServer.java:247) at com.caucho.server.dispatch.InvocationServer.buildInvocation(InvocationServer.java:220) at com.caucho.server.http.AbstractHttpRequest.buildInvocation(AbstractHttpRequest.java:1597) at com.caucho.server.http.AbstractHttpRequest.getInvocation(AbstractHttpRequest.java:1570) at com.caucho.server.http.HttpRequest.handleRequest(HttpRequest.java:820) at com.caucho.network.listen.TcpSocketLink.dispatchRequest(TcpSocketLink.java:1345) at com.caucho.network.listen.TcpSocketLink.handleRequest(TcpSocketLink.java:1301) at com.caucho.network.listen.TcpSocketLink.handleRequestsImpl(TcpSocketLink.java:1285) at com.caucho.network.listen.TcpSocketLink.handleRequests(TcpSocketLink.java:1193) at com.caucho.network.listen.TcpSocketLink.handleAcceptTaskImpl(TcpSocketLink.java:992) at com.caucho.network.listen.ConnectionTask.runThread(ConnectionTask.java:117) at com.caucho.network.listen.ConnectionTask.run(ConnectionTask.java:93) at com.caucho.network.listen.SocketLinkThreadLauncher.handleTasks(SocketLinkThreadLauncher.java:169) at com.caucho.network.listen.TcpSocketAcceptThread.run(TcpSocketAcceptThread.java:61) at com.caucho.env.thread2.ResinThread2.runTasks(ResinThread2.java:173) at com.caucho.env.thread2.ResinThread2.run(ResinThread2.java:118) [12-12-13 03:50:22.655] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.jsp [12-12-13 03:50:22.656] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.php [12-12-13 03:50:22.656] FINEST com.caucho.server.webapp.WebApp getRealPath: /Users/rmann/Projects/Clients/RedBirdStudios/repo/web/trunk/target/build/index.html [12-12-13 03:50:22.658] FINER com.caucho.server.dispatch.ServletInvocation service: Dispatch '/' to AccessLogFilterChain[ http://localhost:8080 , next=WebAppFilterChain[ http://localhost:8080 , next=ServletFilterChain[resin-file]]] [12-12-13 03:50:22.661] FINEST com.caucho.config.inject.InjectManager resolveRec: InjectManager[web-app:production/webapp/default/ROOT] [12-12-13 03:50:22.665] FINER com.caucho.server.dispatch.ServletConfigImpl createServlet: Servlet[resin-file] active [12-12-13 03:50:22.666] FINER com.caucho.server.dispatch.ServletConfigImpl createServlet: Servlet[resin-file] active [12-12-13 03:50:22.667] FINEST com.caucho.config.inject.InjectManager resolveRec: InjectManager[web-app:production/webapp/default/ROOT] bind(DirectoryServlet,[@Default()]) -&amp;gt; [ManagedBeanImpl[DirectoryServlet, [12-12-13 03:50:22.669] FINER com.caucho.server.dispatch.ServletConfigImpl createServlet: Servlet[directory] active [12-12-13 03:50:22.669] FINER com.caucho.server.dispatch.ServletConfigImpl createServlet: Servlet[directory] active [12-12-13 03:50:22.671] FINE com.caucho.server.http.HttpResponse writeHeadersInt: Http[app-0, 1] HTTP/1.1 404 Not Found [12-12-13 03:50:22.671] FINE com.caucho.server.http.HttpResponse writeHeadersInt: Http[app-0, 1] Content-Type: text/html; charset=utf-8 [12-12-13 03:50:22.671] FINE com.caucho.server.http.HttpResponse writeHeadersInt: Http[app-0, 1] Content-Length: 184 [12-12-13 03:50:22.671] FINER com.caucho.server.http.HttpResponseStream setNextBufferOffsetImpl: Http[app-0, 1] write-set-offset(330) [12-12-13 03:50:22.672] FINE com.caucho.server.http.HttpResponseStream closeNextImpl: Http[app-0, 1] finish/keepalive [12-12-13 03:50:22.688] FINER com.caucho.db.Database parseQuery: Database[/Library/Resin/current/resin-data/app-0/distcache]: SELECT value_hash,value_data_id,value_length,     cache_id,flags, item_version,server_version,     access_timeout,modified_timeout, access_time,modified_time FROM mnode WHERE id=? [12-12-13 03:50:22.689] FINEST com.caucho.db.sql.Query generateWhere: where-1: static null [12-12-13 03:50:22.690] FINEST com.caucho.db.sql.Query generateWhere: index-0: FromItem[mnode AS mnode] (mnode.id = ?1) [12-12-13 03:50:22.690] FINEST com.caucho.db.sql.Query generateWhere: where-0: FromItem[mnode AS mnode] null [12-12-13 03:50:22.691] FINEST com.caucho.server.distcache.MnodeStore load: MnodeStore[app-0] load: no mnode for cache key HashKey[231b7531] [12-12-13 03:50:22.692] FINEST com.caucho.server.distcache.MnodeStore load: MnodeStore[app-0] load: no mnode for cache key HashKey[231b7531] [12-12-13 03:50:22.693] FINE com.caucho.network.listen.TcpSocketLink threadKeepalive: TcpSocketLink[id=1,app-0]  keepalive (thread) [12-12-13 03:51:13.085] FINER com.caucho.network.listen.TcpSocketLink closeConnection: TcpSocketLink[id=1,app-0] closing connection TcpSocketLink[id= http://*:8080-1,http://*:8080,CLOSED ], total=5 Near the end there you can see [12-12-13 03:50:22.658] FINER com.caucho.server.dispatch.ServletInvocation service: Dispatch '/' to AccessLogFilterChain[ http://localhost:8080 , next=WebAppFilterChain[ http://localhost:8080 , next=ServletFilterChain[resin-file]]] -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 20:33:19 CET 2012</date>
    <body>That behavior is part of the spec. If the mapping already exists, the addMapping does nothing. It's not an override. I've added a bug report so we might special case the Resin defaults somehow, so those are overridable. -- Scott http://localhost:8080/ . I see this http://*:8080-5,http://*:8080,INIT ] http://*:8080-5 (count=4, idle=3) http://*:8080-5,http://*:8080,INIT ] start http://*:8080-1,http://*:8080,ACCEPT ], total=5 http://*:8080-1,http://*:8080,ACCEPT ] http://localhost:8080 , http://localhost:8080 , http://*:8080-1,http://*:8080,CLOSED ], total=5 http://localhost:8080 , http://localhost:8080 ,</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 21:17:00 CET 2012</date>
    <body>Wait, really? In my web.xml, I used to have: And you're saying that the new hotness doesn't allow me to do that? Or is there a way to avoid the resin mapping? -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 21:37:16 CET 2012</date>
    <body>Yep, the new spec feature works backwards from Resin's configuration behavior. (No, I don't know why they chose that definition.) That's what the bug report would be. We'd have to add some kind of configuration or marker to let Resin's configuration be a lower priority. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 21:49:32 CET 2012</date>
    <body>Okay, so it sounds like I'll have to go back to pre-3.0 configuration for the foreseeable future. Hate to say it, because you guys do such great work, but it seems that as currently implemented, resin can't be used as a servlet 3.0 container. Let me ask this: the only URL I really need to run through Spring's DispatcherServet is /service/**. I had been running everything through it so my Spring controllers could handle everything, but I don't need that right now. Should I be able to register it for "/service" and get what I need? Also, is resin creating that ContextLoaderListener on its own? Sent from my iPhone http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.33 not dispatching servlet-3.0?</header>
    <date>Thu Dec 13 22:11:17 CET 2012</date>
    <body>Yep. You can use "/*" as well. It's only exact matches that are rejected, and "/" exactly matches the default file servlet. I'm not sure what you mean. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] resin .33 loading listener?</header>
    <date>Thu Dec 13 12:13:46 CET 2012</date>
    <body>It seems, but I can't be sure, that resin is taking it upon itself to load a ServletContextListener implementation in Spring. Unfortunately, doing so causes an error. [12-13 02:10:06.091] WARNING com.caucho.server.webapp.WebApp start: java.lang.IllegalStateException: Cannot initialize context because there is already a root application context present - check whether you have multiple ContextLoader* definitions in your web.xml! at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:264) at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112) at com.caucho.server.webapp.WebApp.start(WebApp.java:3637) at com.caucho.env.deploy.DeployController.startImpl(DeployController.java:688) at com.caucho.env.deploy.StartAutoRedeployAutoStrategy.startOnInit(StartAutoRedeployAutoStrategy.java:77) ... I have no .xml files in my webapp, so I'm not sure where this is coming from. Any ideas? -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Deprecation warnings in 4.0.33 snap</header>
    <date>Thu Dec 13 07:30:56 CET 2012</date>
    <body>FYI, I get a bunch of warnings building on OS X 10.8.2 gcc -g -O2 -D_POSIX_PTHREAD_SEMANTICS -DB64 -DHAS_SOCK_TIMEOUT -DHAS_JVMTI -DRESIN_HOME=\"/Library/Resin/current\" -I/usr/include -I/System/Library/Frameworks/JavaVM.framework/Headers -I../common -I../resin_os -DCPU=\"x86_64\" -DOS=  -DSHARED_MODULE  -DSSL_ENGINE   -c -o ssl.o ssl.c ssl.c: In function ‘ssl_verify_callback’: ssl.c:266: warning: ‘X509_STORE_CTX_get_ex_data’ is deprecated (declared at /usr/include/openssl/x509_vfy.h:450) ssl.c:272: warning: ‘X509_STORE_CTX_get_error_depth’ is deprecated (declared at /usr/include/openssl/x509_vfy.h:453) ssl.c:274: warning: ‘SSL_get_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1587) ssl.c:296: warning: ‘X509_STORE_CTX_get_error’ is deprecated (declared at /usr/include/openssl/x509_vfy.h:451) ssl.c: In function ‘ssl_new_session_cache_callback’: ssl.c:327: warning: ‘SSL_get_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1587) ssl.c: In function ‘ssl_init_locks’: ssl.c:426: warning: ‘CRYPTO_num_locks’ is deprecated (declared at /usr/include/openssl/crypto.h:415) ssl.c:444: warning: ‘CRYPTO_set_id_callback’ is deprecated (declared at /usr/include/openssl/crypto.h:425) ssl.c:445: warning: ‘CRYPTO_set_locking_callback’ is deprecated (declared at /usr/include/openssl/crypto.h:418) ssl.c:447: warning: ‘CRYPTO_set_dynlock_create_callback’ is deprecated (declared at /usr/include/openssl/crypto.h:438) ssl.c:448: warning: ‘CRYPTO_set_dynlock_lock_callback’ is deprecated (declared at /usr/include/openssl/crypto.h:439) ssl.c:449: warning: ‘CRYPTO_set_dynlock_destroy_callback’ is deprecated (declared at /usr/include/openssl/crypto.h:440) ssl.c: In function ‘ssl_create_context’: ssl.c:469: warning: ‘SSLv23_server_method’ is deprecated (declared at /usr/include/openssl/ssl.h:1516) ssl.c:473: warning: ‘ENGINE_by_id’ is deprecated (declared at /usr/include/openssl/engine.h:324) ssl.c:480: warning: ‘ENGINE_set_default’ is deprecated (declared at /usr/include/openssl/engine.h:588) ssl.c:482: warning: ‘ERR_print_errors_cb’ is deprecated (declared at /usr/include/openssl/err.h:285) ssl.c:492: warning: ‘ENGINE_free’ is deprecated (declared at /usr/include/openssl/engine.h:457) ssl.c:496: warning: ‘SSL_CTX_new’ is deprecated (declared at /usr/include/openssl/ssl.h:1346) ssl.c:496: warning: passing argument 1 of ‘SSL_CTX_new’ discards qualifiers from pointer target type ssl.c:500: warning: ‘ERR_print_errors_cb’ is deprecated (declared at /usr/include/openssl/err.h:285) ssl.c:510: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:512: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:514: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:516: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:524: warning: ‘SSL_CTX_set_default_passwd_cb’ is deprecated (declared at /usr/include/openssl/ssl.h:1472) ssl.c:525: warning: ‘SSL_CTX_set_default_passwd_cb_userdata’ is deprecated (declared at /usr/include/openssl/ssl.h:1473) ssl.c:528: warning: ‘SSL_CTX_use_certificate_file’ is deprecated (declared at /usr/include/openssl/ssl.h:1402) ssl.c:536: warning: ‘SSL_CTX_use_PrivateKey_file’ is deprecated (declared at /usr/include/openssl/ssl.h:1401) ssl.c:545: warning: ‘SSL_CTX_check_private_key’ is deprecated (declared at /usr/include/openssl/ssl.h:1475) ssl.c:552: warning: ‘SSL_CTX_use_certificate_chain_file’ is deprecated (declared at /usr/include/openssl/ssl.h:1403) ssl.c:566: warning: ‘SSL_CTX_set_verify’ is deprecated (declared at /usr/include/openssl/ssl.h:1459) ssl.c:572: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:573: warning: ‘SSL_CTX_set_session_id_context’ is deprecated (declared at /usr/include/openssl/ssl.h:1479) ssl.c:579: warning: ‘SSL_CTX_set_timeout’ is deprecated (declared at /usr/include/openssl/ssl.h:1348) ssl.c:588: warning: ‘SSL_CTX_ctrl’ is deprecated (declared at /usr/include/openssl/ssl.h:1498) ssl.c:593: warning: ‘SSL_CTX_set_cipher_list’ is deprecated (declared at /usr/include/openssl/ssl.h:1345) ssl.c:601: warning: ‘RSA_generate_key’ is deprecated (declared at /usr/include/openssl/rsa.h:261) ssl.c:611: warning: ‘RSA_generate_key’ is deprecated (declared at /usr/include/openssl/rsa.h:261) ssl.c:621: warning: ‘SSL_CTX_load_verify_locations’ is deprecated (declared at /usr/include/openssl/ssl.h:1572) ssl.c:633: warning: ‘SSL_CTX_set_default_verify_paths’ is deprecated (declared at /usr/include/openssl/ssl.h:1570) ssl.c:641: warning: ‘SSL_load_client_CA_file’ is deprecated (declared at /usr/include/openssl/ssl.h:1404) ssl.c:643: warning: ‘SSL_CTX_set_client_CA_list’ is deprecated (declared at /usr/include/openssl/ssl.h:1542) ssl.c:653: warning: ‘X509_STORE_load_locations’ is deprecated (declared at /usr/include/openssl/x509_vfy.h:443) ssl.c:653: warning: ‘SSL_CTX_get_cert_store’ is deprecated (declared at /usr/include/openssl/ssl.h:1350) ssl.c: In function ‘ssl_safe_free’: ssl.c:683: warning: ‘SSL_set_shutdown’ is deprecated (declared at /usr/include/openssl/ssl.h:1567) ssl.c:685: warning: ‘SSL_set_shutdown’ is deprecated (declared at /usr/include/openssl/ssl.h:1567) ssl.c:687: warning: ‘SSL_set_shutdown’ is deprecated (declared at /usr/include/openssl/ssl.h:1567) ssl.c:690: warning: ‘SSL_shutdown’ is deprecated (declared at /usr/include/openssl/ssl.h:1532) ssl.c:693: warning: ‘SSL_set_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1586) ssl.c:698: warning: ‘SSL_free’ is deprecated (declared at /usr/include/openssl/ssl.h:1490) ssl.c: In function ‘ssl_open’: ssl.c:763: warning: ‘SSL_new’ is deprecated (declared at /usr/include/openssl/ssl.h:1481) ssl.c:780: warning: ‘SSL_set_fd’ is deprecated (declared at /usr/include/openssl/ssl.h:1370) ssl.c:781: warning: ‘SSL_set_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1586) ssl.c:783: warning: ‘SSL_set_tmp_rsa_callback’ is deprecated (declared at /usr/include/openssl/ssl.h:1635) ssl.c:786: warning: ‘SSL_accept’ is deprecated (declared at /usr/include/openssl/ssl.h:1491) ssl.c:788: warning: ‘SSL_get_error’ is deprecated (declared at /usr/include/openssl/ssl.h:1501) ssl.c:794: warning: ‘SSL_get_error’ is deprecated (declared at /usr/include/openssl/ssl.h:1501) ssl.c:806: warning: ‘ERR_print_errors_cb’ is deprecated (declared at /usr/include/openssl/err.h:285) ssl.c:820: warning: ‘SSL_set_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1586) ssl.c:821: warning: ‘SSL_free’ is deprecated (declared at /usr/include/openssl/ssl.h:1490) ssl.c:826: warning: ‘SSL_get_current_cipher’ is deprecated (declared at /usr/include/openssl/ssl.h:1357) ssl.c:829: warning: ‘SSL_CIPHER_get_name’ is deprecated (declared at /usr/include/openssl/ssl.h:1360) ssl.c:830: warning: ‘SSL_CIPHER_get_bits’ is deprecated (declared at /usr/include/openssl/ssl.h:1358) ssl.c: In function ‘ssl_read’: ssl.c:893: warning: ‘SSL_pending’ is deprecated (declared at /usr/include/openssl/ssl.h:1368) ssl.c:916: warning: ‘SSL_read’ is deprecated (declared at /usr/include/openssl/ssl.h:1493) ssl.c:922: warning: ‘SSL_get_error’ is deprecated (declared at /usr/include/openssl/ssl.h:1501) ssl.c:971: warning: ‘ERR_print_errors_cb’ is deprecated (declared at /usr/include/openssl/err.h:285) ssl.c: In function ‘ssl_write’: ssl.c:1040: warning: ‘SSL_write’ is deprecated (declared at /usr/include/openssl/ssl.h:1495) ssl.c:1052: warning: ‘SSL_get_error’ is deprecated (declared at /usr/include/openssl/ssl.h:1501) ssl.c:1081: warning: ‘ERR_print_errors_cb’ is deprecated (declared at /usr/include/openssl/err.h:285) ssl.c: In function ‘ssl_close’: ssl.c:1114: warning: ‘SSL_set_ex_data’ is deprecated (declared at /usr/include/openssl/ssl.h:1586) ssl.c: In function ‘ssl_read_client_certificate’: ssl.c:1153: warning: ‘SSL_get_peer_certificate’ is deprecated (declared at /usr/include/openssl/ssl.h:1450) ssl.c:1158: warning: ‘BIO_new’ is deprecated (declared at /usr/include/openssl/bio.h:581) ssl.c:1158: warning: ‘BIO_s_mem’ is deprecated (declared at /usr/include/openssl/bio.h:616) ssl.c:1160: warning: ‘BIO_ctrl’ is deprecated (declared at /usr/include/openssl/bio.h:590) ssl.c:1163: warning: ‘BIO_read’ is deprecated (declared at /usr/include/openssl/bio.h:585) ssl.c:1165: warning: ‘BIO_free’ is deprecated (declared at /usr/include/openssl/bio.h:583) ssl.c: In function ‘Java_com_caucho_vfs_OpenSSLFactory_nativeInit’: ssl.c:1380: warning: ‘OPENSSL_add_all_algorithms_noconf’ is deprecated (declared at /usr/include/openssl/evp.h:828) ssl.c:1381: warning: ‘SSL_load_error_strings’ is deprecated (declared at /usr/include/openssl/ssl.h:1416) ssl.c:1382: warning: ‘SSL_library_init’ is deprecated (declared at /usr/include/openssl/ssl.h:1553) ssl.c:1383: warning: ‘SSL_library_init’ is deprecated (declared at /usr/include/openssl/ssl.h:1553) -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Deprecation warnings in 4.0.33 snap</header>
    <date>Thu Dec 13 18:22:48 CET 2012</date>
    <body>Yes I got these also when I upgraded to Mountain Lion, on Resin 4.0.32 also. (Phew lots of OSX upgrades just to get on Java 7!) I've entered a bug report: http://bugs.caucho.com/view.php?id=5313 but it doesn't look like an urgent issue. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] Last Resource Commit Optimization / Last Resource	Gambit</header>
    <date>Wed Dec 12 20:50:27 CET 2012</date>
    <body>Is there any way to achieve Last Resource Commit Optimization / Last Resource Gambit with Resins XA/JTA implementation...? --</body>
  </mail>
  <mail>
    <header>[Resin-interest] servlet-3.0 annotation config</header>
    <date>Wed Dec 12 13:47:07 CET 2012</date>
    <body>I'm trying to implement this ("A 100% code-based approach to configuration"): http://static.springsource.org/spring/docs/3.2.0.RC2/javadoc-api/ When I run resin 4.0.30, I get: No Spring WebApplicationInitializer types detected on classpath But I definitely have a class: public class WebappInitializer implements org.springframework.web.WebApplicationInitializer ... Since it seems that message is coming from Spring, that means that resin is probably doing its job. But I thought I'd ask here anyway as to why it's missing a class that Springs docs say it should find. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Wed Dec 12 19:07:59 CET 2012</date>
    <body>http://static.springsource.org/spring/docs/3.2.0.RC2/javadoc-api/ It sounds like a Resin bug that will be in the next release. Servlet 3.0 added a jar scanning system that extensions can use, but we didn't implement properly (and wasn't caught by the TCK.) The issue also affects jersey. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Wed Dec 12 20:06:04 CET 2012</date>
    <body>D'oh! I'm rather urgently needing this. Is there an ETA for .33? -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Wed Dec 12 21:03:51 CET 2012</date>
    <body>We're working on the regressions. There was a bit of a delay because an opportunity for an early Resin 7 websocket deployment came up, so that got a bit fast-tracked. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Thu Dec 13 03:32:21 CET 2012</date>
    <body>There's a snapshot available at http://caucho.com/download/resin-pro-4_0-snap.tar.gz . It will probably be Friday before a final release. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Thu Dec 13 07:38:41 CET 2012</date>
    <body>http://caucho.com/download/resin-pro-4_0-snap.tar.gz . Thanks, Scott. That seemed to fix the issue. Friday will be fine. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Thu Dec 13 16:10:08 CET 2012</date>
    <body>Did i just read 'Resin 7'? :-) Scott Ferguson &amp;lt;f...@caucho.com&amp;gt; schrieb: http://caucho.com/download/resin-pro-4_0-snap.tar.gz . http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] servlet-3.0 annotation config</header>
    <date>Thu Dec 13 18:47:32 CET 2012</date>
    <body>Did i just read 'Resin 7'? :-) Yep. We're syncing with JavaEE 7 because I'm tired of trying to remember which versions of things go with which JavaEE version :) -- Scott Scott Ferguson &amp;lt;f...@caucho.com&amp;gt; schrieb: On Dec 12, 2012, at 10:07 , Scott Ferguson It sounds like a Resin bug that will be in the next release. Servlet 3.0 added a jar scanning system that extensions can use, but we didn't implement properly (and wasn't caught by the TCK.) The issue also affects jersey. D'oh! I'm rather urgently needing this. Is there an ETA for .33? We're working o n the regressions. There was a bit of a delay because an opportunity for an early Resin 7 websocket deployment came up, so that got a bit fast-tracked. There's a snapshot available at http://caucho.com/download/resin-pro-4_0-snap.tar.gz . It will probably be Friday before a final release. -- Scott -- Scott ------------------------------------------------------------------------ resin-interest mailing list resin-interest@caucho.com http://maillist.caucho.com/mailman/listinfo/resin-interest ------------------------------------------------------------------------ resin-interest mailing list resin-interest@caucho.com http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Configuration for scaling</header>
    <date>Wed Dec 12 05:39:40 CET 2012</date>
    <body>Hi. I'm running resin 4.0.32 (?) on a couple of virtual hosts at Rackspace on Ubuntu. These are small machines, 512 MB of RAM, but they're pretty much only running their resin (free) instance. I'm doing some rudimentary load testing with JMeter. I have a script that makes three calls to the REST service implemented in my webapp. When I try to do 1000 simultaneous connections (via round-robin load balancing onto two nodes, so figure ~500 near-simultaneous connections), my app starts throwing exceptions about not being able to open connections to the DB: Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: User gcs already has more than 'max_user_connections' active connections So, clearly I need to expand the DB's capabilities. But JMeter also reports a nunch of these: HTTP response code: java.net.SocketException" rm="Non HTTP response message: My configuration is basically out-of-the-box resin.xml. I can increase the amount of RAM available, there's no session state being stored. I'm wondering what config settings to look into increasing (number of threads? Connections allowed?) Any guidance on how much RAM one needs for a given number of threads and connections? Sorry for the rudimentary question, but this is the first time I've been responsible for making sure our web app stays up, and I don't have a good idea how many requests we might need to support. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Configuration for scaling</header>
    <date>Wed Dec 12 20:58:07 CET 2012</date>
    <body>You probably want to run "ulimit -a" in your shell and see if you may be running up against the limit for the number of open files per OS user. Also, with small heaps (256MB) and very dynamic URLs I have found that Resin's "invocation cache" takes almost the entire heap.  At least as of version 3.1.8.  Luckily it is relatively easy to configure is smaller (&amp;lt;invocation-cache-size&amp;gt;). Good luck, Knut Forkalsrud http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] BEAST SSL Attack</header>
    <date>Mon Dec 03 16:53:32 CET 2012</date>
    <body>For PCI compliance we are supposed to address the SSL BEAST attack by prioritizing SSL cipher suites. Any clue how to do that with JSSE?  We are using JSSE because we run Resin uncompiled.   Am I correct in thinking that in order to run OpenSSL we HAVE to compile Resin?  Or is there a way to make it work running uncompiled?  If so, we can prioritize the cipher suites with OpenSSL, correct? Thanks, Aaron</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Dec 05 04:01:11 CET 2012</date>
    <body>In the days of Resin 2.1.4 and http://www.caucho.com/resin-3.1/changes/changes-2.xtp was such a feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Dec 05 04:31:21 CET 2012</date>
    <body>Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 On Tue, Dec 4, 2012 at 7:00 PM, Knut Forkalsrud http://www.caucho.com/resin-3.1/changes/changes-2.xtp http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Dec 05 14:13:56 CET 2012</date>
    <body>Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that’s not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren’t wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Dec 05 16:02:50 CET 2012</date>
    <body>Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud http://bugs.caucho.com/view.php?id=3593 http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Dec 05 17:51:13 CET 2012</date>
    <body>Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Jan 02 20:58:46 CET 2013</date>
    <body>We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Wednesday, December 05, 2012 10:51 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Jan 02 22:37:21 CET 2013</date>
    <body>We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Aaron Freeman *Sent:* Wednesday, December 05, 2012 10:51 AM *To:* 'General Discussion for the Resin application server' *Subject:* Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Paul Cowan *Sent:* Wednesday, December 05, 2012 9:02 AM *To:* General Discussion for the Resin application server *Subject:* Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough. They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron *From:*resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com]*On Behalf Of*Knut Forkalsrud *Sent:*Tuesday, December 04, 2012 9:31 PM *To:*General Discussion for the Resin application server *Subject:*Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 On Tue, Dec 4, 2012 at 7:00 PM, Knut Forkalsrud mailto:knut-cau...@forkalsrud.org In the days of Resin2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp a feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites.  That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud On Mon, Dec 3, 2012 at 7:53 AM, Aaron Freeman mailto:aaron.free...@layerz.com SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Jan 02 23:16:22 CET 2013</date>
    <body>Awesome, looking forward to it! -a From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Scott Ferguson Sent: Wednesday, January 02, 2013 3:37 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Wednesday, December 05, 2012 10:51 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Sun Jan 06 02:14:22 CET 2013</date>
    <body>Hi Scott, We need this too. Thanks, Keith We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Aaron Freeman *Sent:* Wednesday, December 05, 2012 10:51 AM *To:* 'General Discussion for the Resin application server' *Subject:* Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Paul Cowan *Sent:* Wednesday, December 05, 2012 9:02 AM *To:* General Discussion for the Resin application server *Subject:* Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron *From:*resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com]*On Behalf Of*Knut Forkalsrud *Sent:*Tuesday, December 04, 2012 9:31 PM *To:*General Discussion for the Resin application server *Subject:*Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 On Tue, Dec 4, 2012 at 7:00 PM, Knut Forkalsrud mailto:knut-cau...@forkalsrud.org In the days of Resin2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp a feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites.  That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud On Mon, Dec 3, 2012 at 7:53 AM, Aaron Freeman mailto:aaron.free...@layerz.com SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Jan 09 02:42:21 CET 2013</date>
    <body>Hi Scott, We need this too. Can you try http://caucho.com/download/resin-pro-4_0-snap.tar.gz The configuration is &amp;lt;honor-cipher-order&amp;gt;true&amp;lt;/honor-cipher-order&amp;gt; in -- Scott Thanks, Keith We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Aaron Freeman *Sent:* Wednesday, December 05, 2012 10:51 AM *To:* 'General Discussion for the Resin application server' *Subject:* Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron *From:*resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] *On Behalf Of *Paul Cowan *Sent:* Wednesday, December 05, 2012 9:02 AM *To:* General Discussion for the Resin application server *Subject:* Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron *From:*resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com mailto:resin-interest-boun...@caucho.com]*On Behalf Of*Knut Forkalsrud *Sent:*Tuesday, December 04, 2012 9:31 PM *To:*General Discussion for the Resin application server *Subject:*Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 On Tue, Dec 4, 2012 at 7:00 PM, Knut Forkalsrud mailto:knut-cau...@forkalsrud.org In the days of Resin2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp such a feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites.  That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45fc49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud On Mon, Dec 3, 2012 at 7:53 AM, Aaron Freeman mailto:aaron.free...@layerz.com SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Thu Jan 10 21:12:30 CET 2013</date>
    <body>Hmm, we were able to swap out jsse for openssl and get that working without any issues using the snapshot you recommend below.  However when we add [root@alpha bin]# ./www.sh start /opt/sendthisfile/server/conf/www.xml:80: &amp;lt;honor-cipher-order&amp;gt; is an unexpected tag (parent &amp;lt;openssl&amp;gt; starts at 75). 79: &amp;amp; (@ca-certificate-path | &amp;lt;ca-certificate-path&amp;gt;)? &amp;amp; (@ca-revocation-file | &amp;lt;ca-revocation-file&amp;gt;)? &amp;amp; (@ca-revocation-path | &amp;lt;ca-revocation-path&amp;gt;)? &amp;amp; (@certificate-file | &amp;lt;certificate-file&amp;gt;) &amp;amp; (@certificate-chain-file | &amp;lt;certificate-chain-file&amp;gt;)? &amp;amp; (@certificate-key-file | &amp;lt;certificate-key-file&amp;gt;)? &amp;amp; (@cipher-suite | &amp;lt;cipher-suite&amp;gt;)? &amp;amp; (@crypto-device | &amp;lt;crypto-device&amp;gt;)? &amp;amp; (@password | &amp;lt;password&amp;gt;) &amp;amp; (@protocol | &amp;lt;protocol&amp;gt;)? &amp;amp; (@session-cache | &amp;lt;session-cache&amp;gt;)? &amp;amp; (@session-cache-timeout | &amp;lt;session-cache-timeout&amp;gt;)? &amp;amp; (@unclean-shutdown | &amp;lt;unclean-shutdown&amp;gt;)? &amp;amp; (@verify-client | &amp;lt;verify-client&amp;gt;)? &amp;amp; (@verify-depth | &amp;lt;verify-depth&amp;gt;)?) OPENSSL     : OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008 include   : /usr/include lib       : libraries :  -lssl -lcrypto Any ideas? Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Scott Ferguson Sent: Tuesday, January 08, 2013 7:42 PM To: resin-interest@caucho.com Subject: Re: [Resin-interest] BEAST SSL Attack Hi Scott, We need this too. Can you try http://caucho.com/download/resin-pro-4_0-snap.tar.gz The configuration is &amp;lt;honor-cipher-order&amp;gt;true&amp;lt;/honor-cipher-order&amp;gt; in -- Scott Thanks, Keith We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Wednesday, December 05, 2012 10:51 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Mon Jan 14 21:01:06 CET 2013</date>
    <body>Still needing a little assistance on this one. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Thursday, January 10, 2013 2:12 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Hmm, we were able to swap out jsse for openssl and get that working without any issues using the snapshot you recommend below.  However when we add [root@alpha bin]# ./www.sh start /opt/sendthisfile/server/conf/www.xml:80: &amp;lt;honor-cipher-order&amp;gt; is an unexpected tag (parent &amp;lt;openssl&amp;gt; starts at 75). 79: &amp;amp; (@ca-certificate-path | &amp;lt;ca-certificate-path&amp;gt;)? &amp;amp; (@ca-revocation-file | &amp;lt;ca-revocation-file&amp;gt;)? &amp;amp; (@ca-revocation-path | &amp;lt;ca-revocation-path&amp;gt;)? &amp;amp; (@certificate-file | &amp;lt;certificate-file&amp;gt;) &amp;amp; (@certificate-chain-file | &amp;lt;certificate-chain-file&amp;gt;)? &amp;amp; (@certificate-key-file | &amp;lt;certificate-key-file&amp;gt;)? &amp;amp; (@cipher-suite | &amp;lt;cipher-suite&amp;gt;)? &amp;amp; (@crypto-device | &amp;lt;crypto-device&amp;gt;)? &amp;amp; (@password | &amp;lt;password&amp;gt;) &amp;amp; (@protocol | &amp;lt;protocol&amp;gt;)? &amp;amp; (@session-cache | &amp;lt;session-cache&amp;gt;)? &amp;amp; (@session-cache-timeout | &amp;lt;session-cache-timeout&amp;gt;)? &amp;amp; (@unclean-shutdown | &amp;lt;unclean-shutdown&amp;gt;)? &amp;amp; (@verify-client | &amp;lt;verify-client&amp;gt;)? &amp;amp; (@verify-depth | &amp;lt;verify-depth&amp;gt;)?) OPENSSL     : OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008 include   : /usr/include lib       : libraries :  -lssl -lcrypto Any ideas? Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Scott Ferguson Sent: Tuesday, January 08, 2013 7:42 PM To: resin-interest@caucho.com Subject: Re: [Resin-interest] BEAST SSL Attack Hi Scott, We need this too. Can you try http://caucho.com/download/resin-pro-4_0-snap.tar.gz The configuration is &amp;lt;honor-cipher-order&amp;gt;true&amp;lt;/honor-cipher-order&amp;gt; in -- Scott Thanks, Keith We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Wednesday, December 05, 2012 10:51 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Fri Jan 18 16:18:31 CET 2013</date>
    <body>We're getting scanned today.   Any hope on this? Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Monday, January 14, 2013 2:01 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Still needing a little assistance on this one. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Thursday, January 10, 2013 2:12 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Hmm, we were able to swap out jsse for openssl and get that working without any issues using the snapshot you recommend below.  However when we add [root@alpha bin]# ./www.sh start /opt/sendthisfile/server/conf/www.xml:80: &amp;lt;honor-cipher-order&amp;gt; is an unexpected tag (parent &amp;lt;openssl&amp;gt; starts at 75). 79: &amp;amp; (@ca-certificate-path | &amp;lt;ca-certificate-path&amp;gt;)? &amp;amp; (@ca-revocation-file | &amp;lt;ca-revocation-file&amp;gt;)? &amp;amp; (@ca-revocation-path | &amp;lt;ca-revocation-path&amp;gt;)? &amp;amp; (@certificate-file | &amp;lt;certificate-file&amp;gt;) &amp;amp; (@certificate-chain-file | &amp;lt;certificate-chain-file&amp;gt;)? &amp;amp; (@certificate-key-file | &amp;lt;certificate-key-file&amp;gt;)? &amp;amp; (@cipher-suite | &amp;lt;cipher-suite&amp;gt;)? &amp;amp; (@crypto-device | &amp;lt;crypto-device&amp;gt;)? &amp;amp; (@password | &amp;lt;password&amp;gt;) &amp;amp; (@protocol | &amp;lt;protocol&amp;gt;)? &amp;amp; (@session-cache | &amp;lt;session-cache&amp;gt;)? &amp;amp; (@session-cache-timeout | &amp;lt;session-cache-timeout&amp;gt;)? &amp;amp; (@unclean-shutdown | &amp;lt;unclean-shutdown&amp;gt;)? &amp;amp; (@verify-client | &amp;lt;verify-client&amp;gt;)? &amp;amp; (@verify-depth | &amp;lt;verify-depth&amp;gt;)?) OPENSSL     : OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008 include   : /usr/include lib       : libraries :  -lssl -lcrypto Any ideas? Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Scott Ferguson Sent: Tuesday, January 08, 2013 7:42 PM To: resin-interest@caucho.com Subject: Re: [Resin-interest] BEAST SSL Attack Hi Scott, We need this too. Can you try http://caucho.com/download/resin-pro-4_0-snap.tar.gz The configuration is &amp;lt;honor-cipher-order&amp;gt;true&amp;lt;/honor-cipher-order&amp;gt; in -- Scott Thanks, Keith We have now been scanned and been found to be non-compliant due to lack of the ability to order ciphers.   Is there any timeframe we might expect even a snapshot to have this capability? I'll see if I can get a snapshot this week. -- Scott Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Wednesday, December 05, 2012 10:51 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Very good, I appreciate the feedback. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Wednesday, December 05, 2012 9:02 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Hi Folks, Resin does not support "SSLHonorCipherOrder" yet.  We already received a request from another customer and there is a feature request for this here: http://bugs.caucho.com/view.php?id=5282 This is an OpenSSL feature, not JSSE.  We'll be implementing it in an upcoming release.  Probably it will be in 4.0.44, as .43 is due for release soon. Thanks, Paul Knut, Thanks a bunch for your reply.   I saw you referencing another email you sent, but this is the only one I saw come through the group. At any rate, we are already using the cipher-suites feature, but in this case that's not enough.   They are telling us that we actually have to be able to prioritize the order that the suites are negotiated on the server side.  The only cipher suites guaranteed not to have the BEAST attack issue are ones that aren't wide-spread yet (TLSv1.1) however if we can put TLSv1.0 in a specific order that will suffice for PCI compliance. This bug for Tomcat addresses the issue and gives good details about a directive, SSLHonorCipherOrder, that handles the problem: https://issues.apache.org/bugzilla/show_bug.cgi?id=53481 Any other ideas for Resin? Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Knut Forkalsrud Sent: Tuesday, December 04, 2012 9:31 PM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack Actually, I got it wrong in my previous mail.  The feature should be working. There is a ticket describing the feature: http://bugs.caucho.com/view.php?id=3593 In the days of Resin 2.1.4 and onwards http://www.caucho.com/resin-3.1/changes/changes-2.xtp feature, however it seems to have lapsed.  I remember because there was a similar issue with MSIE http://support.microsoft.com/default.aspx?scid=kb;en-us;Q305217 . I my good old copy of Resin 3.1.8 there are remains the feature. If you bring up the source code for com.caucho.vfs.JsseSSLFactory.create(host, port) you will find a block of code commented out. Then there was a second incarnation where you could specify cipher suites. That seems to have dies some time around Aug 2009 with the commit: https://github.com/mdaniel/svn-caucho-com-resin/commit/96de31370ffd0153eb45f c49725a9b796bc11224#modules/resin/src/com/caucho/vfs/JsseSSLFactory.java I suspect you could get it going again if you have the fortitude to play around with Resin's source code and build your own. Good luck, Knut Forkalsrud SSL BEAST</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Fri Jan 18 17:00:55 CET 2013</date>
    <body>I just tested that Resin snapshot - the &amp;lt;honor-cipher-order&amp;gt; is not in that jar.  I think there was a mistake in the SCM checkin or Scott may have built the archive to soon.  We'll try to put up a new snapshot today/soon, but I'm not certain it's possible with various other bug fixes in progress. Thanks, Paul mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Fri Jan 18 17:09:29 CET 2013</date>
    <body>OK, just keep us posted. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Friday, January 18, 2013 10:01 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack We're getting scanned today.   Any hope on this? I just tested that Resin snapshot - the &amp;lt;honor-cipher-order&amp;gt; is not in that jar.  I think there was a mistake in the SCM checkin or Scott may have built the archive to soon.  We'll try to put up a new snapshot today/soon, but I'm not certain it's possible with various other bug fixes in progress. Thanks, Paul Thanks, Aaron mailto:resin-interest-boun...@caucho.com resin-interest-boun...@caucho.com [ mailto:resin- mailto:interest-boun...@caucho.com Of Aaron Freeman Sent: Monday, January 14, 2013 2:01 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Still needing a little assistance on this one. Thanks, Aaron mailto:resin-interest-boun...@caucho.com resin-interest-boun...@caucho.com [ mailto:resin- mailto:interest-boun...@caucho.com Of Aaron Freeman Sent: Thursday, January 10, 2013 2:12 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Hmm, we were able to swap out jsse for openssl and get that working without any issues using the snapshot you recommend below.  However when we add [root@alpha bin]# ./www.sh start /opt/sendthisfile/server/conf/www.xml:80: &amp;lt;honor-cipher-order&amp;gt; is an unexpected tag (parent &amp;lt;openssl&amp;gt; starts at 75). 79: &amp;amp; (@ca-certificate-path | &amp;lt;ca-certificate-path&amp;gt;)? &amp;amp; (@ca-revocation-file | &amp;lt;ca-revocation-file&amp;gt;)? &amp;amp; (@ca-revocation-path | &amp;lt;ca-revocation-path&amp;gt;)? &amp;amp; (@certificate-file | &amp;lt;certificate-file&amp;gt;) &amp;amp; (@certificate-chain-file | &amp;lt;certificate-chain-file&amp;gt;)? &amp;amp; (@certificate-key-file | &amp;lt;certificate-key-file&amp;gt;)? &amp;amp; (@cipher-suite | &amp;lt;cipher-suite&amp;gt;)? &amp;amp; (@crypto-device | &amp;lt;crypto-device&amp;gt;)? &amp;amp; (@password | &amp;lt;password&amp;gt;) &amp;amp; (@protocol | &amp;lt;protocol&amp;gt;)? &amp;amp; (@session-cache | &amp;lt;session-cache&amp;gt;)? &amp;amp; (@session-cache-timeout | &amp;lt;session-cache-timeout&amp;gt;)? &amp;amp; (@unclean-shutdown | &amp;lt;unclean-shutdown&amp;gt;)? &amp;amp; (@verify-client | &amp;lt;verify-client&amp;gt;)? &amp;amp; (@verify-depth | &amp;lt;verify-depth&amp;gt;)?) OPENSSL     : OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008 include   : /usr/include lib       : libraries :  -lssl -lcrypto Any ideas? Thanks, Aaron</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Wed Feb 13 02:05:38 CET 2013</date>
    <body>On a whim we looked to see if there was a new snapshot, and there was, so we tried it.  Looks like the honor-cipher-code addition is working great.   We were able to get it to show that we are compliant - so we will be doing more internal testing to make sure the snapshot is stable enough and then we will roll it out. Thanks a bunch! Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman Sent: Friday, January 18, 2013 10:09 AM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack OK, just keep us posted. Thanks, Aaron From: resin-interest-boun...@caucho.com [ mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan Sent: Friday, January 18, 2013 10:01 AM To: General Discussion for the Resin application server Subject: Re: [Resin-interest] BEAST SSL Attack We're getting scanned today.   Any hope on this? I just tested that Resin snapshot - the &amp;lt;honor-cipher-order&amp;gt; is not in that jar.  I think there was a mistake in the SCM checkin or Scott may have built the archive to soon.  We'll try to put up a new snapshot today/soon, but I'm not certain it's possible with various other bug fixes in progress. Thanks, Paul Thanks, Aaron mailto:resin-interest-boun...@caucho.com resin-interest-boun...@caucho.com [ mailto:resin- mailto:interest-boun...@caucho.com Of Aaron Freeman Sent: Monday, January 14, 2013 2:01 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Still needing a little assistance on this one. Thanks, Aaron mailto:resin-interest-boun...@caucho.com resin-interest-boun...@caucho.com [ mailto:resin- mailto:interest-boun...@caucho.com Of Aaron Freeman Sent: Thursday, January 10, 2013 2:12 PM To: 'General Discussion for the Resin application server' Subject: Re: [Resin-interest] BEAST SSL Attack Hmm, we were able to swap out jsse for openssl and get that working without any issues using the snapshot you recommend below.  However when we add [root@alpha bin]# ./www.sh start /opt/sendthisfile/server/conf/www.xml:80: &amp;lt;honor-cipher-order&amp;gt; is an unexpected tag (parent &amp;lt;openssl&amp;gt; starts at 75). 79: &amp;amp; (@ca-certificate-path | &amp;lt;ca-certificate-path&amp;gt;)? &amp;amp; (@ca-revocation-file | &amp;lt;ca-revocation-file&amp;gt;)? &amp;amp; (@ca-revocation-path | &amp;lt;ca-revocation-path&amp;gt;)? &amp;amp; (@certificate-file | &amp;lt;certificate-file&amp;gt;) &amp;amp; (@certificate-chain-file | &amp;lt;certificate-chain-file&amp;gt;)? &amp;amp; (@certificate-key-file | &amp;lt;certificate-key-file&amp;gt;)? &amp;amp; (@cipher-suite | &amp;lt;cipher-suite&amp;gt;)? &amp;amp; (@crypto-device | &amp;lt;crypto-device&amp;gt;)? &amp;amp; (@password | &amp;lt;password&amp;gt;) &amp;amp; (@protocol | &amp;lt;protocol&amp;gt;)? &amp;amp; (@session-cache | &amp;lt;session-cache&amp;gt;)? &amp;amp; (@session-cache-timeout | &amp;lt;session-cache-timeout&amp;gt;)? &amp;amp; (@unclean-shutdown | &amp;lt;unclean-shutdown&amp;gt;)? &amp;amp; (@verify-client | &amp;lt;verify-client&amp;gt;)? &amp;amp; (@verify-depth | &amp;lt;verify-depth&amp;gt;)?) OPENSSL     : OpenSSL 0.9.8e-fips-rhel5 01 Jul 2008 include   : /usr/include lib       : libraries :  -lssl -lcrypto Any ideas? Thanks, Aaron</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] BEAST SSL Attack</header>
    <date>Thu Feb 14 17:40:34 CET 2013</date>
    <body>That fix is actually in 4.0.34, although 4.0.35 will be on the website today. I see we're a little behind on the release notes on caucho.com. This link is handy to refer to as it's always updated based on fixed bugs: http://bugs.caucho.com/changelog_page.php Thanks, Paul mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman mailto:resin-interest-boun...@caucho.com ] On Behalf Of Paul Cowan mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman mailto:resin-interest-boun...@caucho.com ] On Behalf Of Aaron Freeman http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] Form parameter limitation</header>
    <date>Wed Nov 28 06:47:18 CET 2012</date>
    <body>I ran into a limit on the number of parameters submitted by a form and found this: http://www.caucho.com/resin-4.0/changes/resin-4.0.25.xtp#POSTparameterlimitDOSProtection I changed my QA server to accept up to 20,000 as a work around to my specific problem (turns out I am submitting around 15k parameters). What is the risk of setting this max at 20k or higher? Is it simply resource utilization or is there some other risk that I should be careful to avoid? Processing my form after the change was as fast as any other form in my app. FYI, not sure I really like the idea of submitting 20k parameters but I don't think I can split this particular form into smaller sets easily…or at least not quickly. thanks matt</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Form parameter limitation</header>
    <date>Wed Nov 28 17:54:17 CET 2012</date>
    <body>http://www.caucho.com/resin-4.0/changes/resin-4.0.25.xtp#POSTparameterlimitDOSProtection Hi Matt, This change was in response to the "hashdos" attack that was widely publicized late last year. In simplest terms, form parameters are stored in a hashtable, and hashing becomes CPU intensive with increasing numbers of keys and collisions.  This leads to a DOS attack if the number of parameters is not limited. Google for "hashdos" or see: http://arstechnica.com/business/2011/12/huge-portions-of-web-vulnerable-to-hashing-denial-of-service-attack/ I believe we felt even 10k was unrealistically high and anyone coming close to that probably needed to reevaluate their form submission, but "suum cuique". Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] 4.0.33 ETA?</header>
    <date>Thu Nov 22 08:47:36 CET 2012</date>
    <body>Hi. We are anticipating the upcoming 4.0.33 release that should resolve a couple of "our" bugs. What is the ETA? --</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.33 ETA?</header>
    <date>Thu Nov 22 16:17:40 CET 2012</date>
    <body>We are shooting for next week for 4.0.33 release.  Depending on the regressions, it could slip until the 1st week of December but probably no later than that. http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.33 ETA?</header>
    <date>Wed Dec 12 11:10:11 CET 2012</date>
    <body>Any news on the 4.0.33 release? --- Original Message ----- Subject: Re: [Resin-interest] 4.0.33 ETA? Date: Thu, 22 Nov 2012 10:17:29 -0500 We are shooting for next week for 4.0.33 release. Depending on the regressions, it could slip until the 1st week of December but probably no later than that. --</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] 4.0.33 ETA?</header>
    <date>Thu Dec 13 04:50:57 CET 2012</date>
    <body>I know I keep saying this, but we're working on regressions now and shooting for this Friday. Here is a .33 snapshot build.  We would be more than happy to hear this resolves your bugs (or any feedback) before the release: http://caucho.com/download/resin-pro-4_0-snap.tar.gz Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest ======================= Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] Session death in a cluster</header>
    <date>Mon Nov 19 21:32:55 CET 2012</date>
    <body>I have a web application that creates a session for every user who logs in and also tracks logins/logouts in a database. When the user logs out or when the session is destroyed (using a SessionListener), I attempt to update the database with the session destruction time. I experience two problems in a clustered environment: 1. Shutting down one resin node in the cluster seems to kill the session on that server even though the session is transferred to the other resin server and remains available. So, in effect, we think users are logged out when they are still active on the second server. 2. My database shows that some sessions seem to stay alive for days even though there is clearly no activity on the session. For the first issue, is there a way to write my session listener so that it knows the difference between a real session death and a transfer to another clustered instance due to a shutdown? For the second issue, I found an interesting attribute on the "session-config" tag ( http://www.caucho.com/resin-4.0/admin/clustering-ref.xtp#sessionconfig ): invalidate-after-listener: If true, invalidate the sessions after the session listeners have been called The documentation doesn't specify a default. Is it possible Resin is invalidating the session before my listener has a chance to inspect it, thus the listener can't update the database because the it doesn't know the user information? What is odd is that most of time the database is updated appropriately. Anybody else track user login behavior in a clustered environment? Going to be writing a message queue analytics system that could also track this but for now direct db is too simple to drop, especially when it works most of the time. thanks matt</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Session death in a cluster</header>
    <date>Mon Nov 19 22:35:23 CET 2012</date>
    <body>As for #1, I have code in my SessionListener that first looks at the current thread and doesn't fire most of the work if it is the resin-destroy thread.  This is a bit of a hack - anyone else find a cleaner way of handling this? thanks Eric http://www.caucho.com/resin-4.0/admin/clustering-ref.xtp#sessionconfig ): http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Session death in a cluster</header>
    <date>Wed Nov 21 06:58:54 CET 2012</date>
    <body>We have seen this behavior in resin for years.  Several years ago, we wrote an administration utility for our Web site that displays the active HTTP sessions.  We wrote this utility so we could see what products shoppers were putting in the carts.  We noticed that some HTTP sessions live days after they should have been invalidated as a result of reaching the HTTP session timeout, which is set to 70 minutes.  We never researched the problem or reported it to Caucho. We saw this behavior in resin 2.X, 3.X and now in 4.X Keith -- ----------------------------------------------------------------- Keith Fetterman                        Direct: 206-319-9434 Mariner Supply, Inc.                   206-780-5670 http://www.go2marine.com kfetter...@go2marine.com http://www.go2hydraulics.com http://www.shoprvparts.com</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resin, EclipseLink, and Cache Coordination</header>
    <date>Thu Nov 15 06:27:50 CET 2012</date>
    <body>I am trying to figure out how to get EclipseLink's cache coordination working within a Resin cluster. I am trying to get it working using JMS. So far I haven't been able to get past the JNDI lookup of the JmsConnectionFactory (which is failing). Right now my knowledge on this subject is a shaky patchwork of tidbits from a bunch of google searches, and I'm hoping that I'm missing some simple configuration step. But, before getting into all that...Should I even be able to do this? Currently using Resin Pro  4.0.23. Thanks, Dan</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin, EclipseLink, and Cache Coordination</header>
    <date>Tue Nov 27 22:47:51 CET 2012</date>
    <body>FYI, I got this working…kind of. After getting past the JNDI issue (just had to set the JNDI name of the ClusterTopic and JmsConnectionFactory), I had a problem where EclipseLink would throw an exception upon receipt of a cache coordination message because the message's destination was null. To make it work, I had to use a Message Driven Bean, inject an instance of ClusterTopic in that bean and explicitly set the message destination in the onMessage method of the MDB (setting it to the injected ClusterTopic instance). It doesn't seem right that the message destination is null, but if this is a legitimate work-around then I'm fine with it. Can anyone shed more light on this? Is this a legitimate work-around? Dan http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin, EclipseLink, and Cache Coordination</header>
    <date>Tue Nov 27 22:53:29 CET 2012</date>
    <body>I've marked this as a bug at http://bugs.caucho.com/view.php?id=5291 . I'll need to lookup the message destination. Resin's JMS passes the TCK, but there might be some requirement that's not properly tested there. your workaround sounds fine. -- Scott FYI, I got this working...kind of. After getting past the JNDI issue (just had to set the JNDI name of the ClusterTopic and JmsConnectionFactory), I had a problem where EclipseLink would throw an exception upon receipt of a cache coordination message because the message's destination was null. To make it work, I had to use a Message Driven Bean, inject an instance of ClusterTopic in that bean and explicitly set the message destination in the onMessage method of the MDB (setting it to the injected ClusterTopic instance). It doesn't seem right that the message destination is null, but if this is a legitimate work-around then I'm fine with it. Can anyone shed more light on this? Is this a legitimate work-around? Dan I am trying to figure out how to get EclipseLink's cache coordination working within a Resin cluster. I am trying to get it working using JMS. So far I haven't been able to get past the JNDI lookup of the JmsConnectionFactory (which is failing). Right now my knowledge on this subject is a shaky patchwork of tidbits from a bunch of google searches, and I'm hoping that I'm missing some simple configuration step. But, before getting into all that...Should I even be able to do this? Currently using Resin Pro  4.0.23. Thanks, Dan / /</body>
  </mail>
  <mail>
    <header>[Resin-interest] fmt.sprintf leads to NPEs</header>
    <date>Sun Nov 11 14:20:47 CET 2012</date>
    <body>When I use this format for the main log-handler in 4.0.32, I get numerous NPEs during startup: -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] fmt.sprintf leads to NPEs</header>
    <date>Wed Nov 14 15:42:40 CET 2012</date>
    <body>Hi Rick, I do not think the NPE causes any issue, as it only shows up for me using finer level logging. However it's certainly a bug, and I have entered a report: http://bugs.caucho.com/view.php?id=5274 Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] fmt.sprintf leads to NPEs</header>
    <date>Thu Nov 15 02:37:51 CET 2012</date>
    <body>http://bugs.caucho.com/view.php?id=5274 Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Aughh!!</header>
    <date>Sun Nov 11 13:24:13 CET 2012</date>
    <body>Wow, it must be dump-on-Rick day. Not only is my local resin (4.0.30) startup suddenly bonkers, so is one of my long-standing servers (4.0.19). I made some minor changes to the webapp, uploaded the changed files, saw it restart, everything was fine. Then I stopped and re-started resin, like I always do on that machine, basically running this: java -jar $RESIN_HOME/lib/resin.jar -verbose -root-directory /path/to/dir -conf /path/to/resin.xml start|stop Now, it complains about the native libraries missing and JNI being a resin pro feature (this is just resin open source), which is fine, but it finishes startup in no time at all, and near as I can tell, never starts my webapp. Like it's not even there. No error messages in the logs, nothing. Since it's 4:30 am and no one can respond to this, I don't know what else to do but install the newest resin and rebuild my server from scratch. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Aughh!!</header>
    <date>Sun Nov 11 14:31:23 CET 2012</date>
    <body>Well, even installing 4.0.32 I had very similar behavior; my webapp is just ignored. Then I noticed something. I access it via an alias. It's configured like this: Resin doesn't try to start it up if I hit "missiondb.lz.com" first. But if I hit "kepler.lz.com," then it inits. I wonder if the same thing was happening in 4.0.19. I just don't know why I've only now started seeing this. -- Rick http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Aughh!!</header>
    <date>Wed Nov 14 16:31:03 CET 2012</date>
    <body>Hi Rick, Thanks, I have verified this is a bug and entered a report: http://bugs.caucho.com/view.php?id=5275 Please try modifying the entry as I included below, it should work around the issue.  Let me know if otherwise. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Aughh!!</header>
    <date>Thu Nov 15 02:36:23 CET 2012</date>
    <body>http://bugs.caucho.com/view.php?id=5275 Thanks, Paul. That's what I ended up doing. -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Sudden startup error	java.lang.ClassNotFoundException: com.caucho.admin.ProAdminServices</header>
    <date>Sun Nov 11 11:56:13 CET 2012</date>
    <body>I'm suddenly getting a couple of exceptions during startup (resin.sh console) on Resin 4.0.30. PDT) 1.6.0_37-b06-434-11M3909, MacRoman, en 64, mixed mode, Apple Inc. com.caucho.admin.ProAdminServices and 'resin:type=AccessLog,Host=default' in MBeanContext[EnvironmentClassLoader[host:default,NEW]] I tried removing the resin-data and watchdog-data directories to no avail. I also noticed this in the logs (on a run after the first one after deleting resin-data): CREATE TABLE data(id IDENTITY PRIMARY KEY,data BLOB) The version shown is 4.0.28, I'm running 4.0.30. The app still seems to run after this, but it's puzzling. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Sudden startup error	java.lang.ClassNotFoundException: com.caucho.admin.ProAdminServices</header>
    <date>Wed Nov 14 15:46:49 CET 2012</date>
    <body>Hi Rick, Are you still seeing this issue?  It certainly appears to be some mixup in library versions.  Perhaps resin.home and/or resin.root are set to point to an older version. Starting up Resin with -verbose will output all startup paths and options to the start of the Resin log, which should be helpful in debugging this. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Sudden startup error	java.lang.ClassNotFoundException: com.caucho.admin.ProAdminServices</header>
    <date>Thu Nov 15 02:37:27 CET 2012</date>
    <body>Hmm. That's possible. I'll take a look next time I run into the error (I rotate between a lot of projects on vastly different platforms, seem to promptly forget what I was doing on the previous one :-) ). -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Can't enable admin access</header>
    <date>Sat Nov 10 03:55:50 CET 2012</date>
    <body>Huh. I generated a password, modified resin.properties, but resin refuses to let me log in. Nothing in the log, at level 'finer', seems to show why. It asks me to log in, then I get 403 forbidden. I even re-generated the password to make sure I got it right. -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 03:12:08 CET 2012</date>
    <body>I've used Resin for 6 or 8 years now, ever since working at a company that used it. I use it for a lot of little personal projects and web sites, nothing very substantial. But there's a chance that something I did recently will grow, and I'm looking at how to use Resin with Rackspace virtual hosts. I'm finding it hard to get through some of Caucho's concepts. How is a web server different from an app server? Is a web server the same as a load balancer? All my apps run completely self-contained on a single server, talking to a MySQL instance running on the same machine, using Hibernate and no special caching. I'm having a hard time quickly learning how to move from that environment to the triad and elastic servers. Can I take the intermediate step of running just two servers? How does load balancing work? I've only ever used a Big IP F5. Do I want to bother with Rackspace's load balancers? Stuff like that. Is there a good introductory document (not just a set of slides)? So far, everything I've read assumes a certain level of knowledge. Thanks, -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:08:59 CET 2012</date>
    <body>We're working on a video that should help. In the meantime: 1) Basically, we start with a single server, just like you're using now. That's an "app" server because it runs your applications (it also serves static web requests of course.). app_servers : 127.0.0.1:6800 2) Now you either want or need a second app server, either because of load or memory or reliability. That would be two servers. The two servers would be the first two in the triad. The triad stuff happens automatically. The first servers in your list are triad members. In truth, you don't usually need to know about the triad, except you should take a little care to put them on different hardware for reliability. app_servers : 192.168.0.10:6800, 192.168.0.11:6800 (You can also put two Resin servers on one box. Just use the same IP and different ports, like 6801. We use this for testing all the time, and some people do that for reliability or better memory management on one machine.) 3) load balancing But now there's a difficulty because some how the requests need to be shared across the multiple servers, so you need a load balancer of some sort. Resin doesn't care what load balancer you use. We're trying to support whatever configuration you want, assuming that you have a better idea of how you want to balance your own load. Resin's load balancer is mostly provided as an option for medium sites so you don't need to use a hardware load balancer, and because it's easy to configure. (Some sites even use a hardware load balancer in combination with Resin's load balancer.) If you're using a non-Resin load balancer, just point it to the 2 server's http ports. If you're using Resin's load balancer, just add a web_server entry: web_servers : 192.168.1.10:6820 In this case, I put the load balancer on the first machine. That's a perfectly reasonable configuration for a smallish configuration. Make sure all servers are using the same resin.xml and resin.properties. The entire point of Resin's design is to allow you to use a single configuration for your entire cluster. 4) Adding servers. You can keep adding servers to the app_servers list. The first three are automatically the triad. You don't need to do anything special, but if you have different physical servers, it's a good idea to split them for reliability. As long as every server sees that app_servers, the load balancing will just work with the new servers. 5) "web" vs "app" tiers. The idea of those two is to mirror the common Apache/Resin or nginx/Resin "reverse proxy" configuration where you replace Apache with another Resin. You can use that configuration even if you have one app-server. (Benefit is that it isolates the application from the actual network. The penalty is a bit of performance.) The "web" tier is simple and more reliable because it's only serving HTTP requests and cached data. It also isolates the web from the app tier, because only the web tier needs to worry about things like flaky network connections. When you're using Resin as a load balancer the web tier is the load balancer. 6) The triad. Mostly, it's an internal Resin clustering concept. The main purpose is to handle clustering for fairly large sites that have large variations in load where they want to add or drop servers frequently. The triad servers are the reliable servers. You don't actually need 3. If you have 2, the 2 servers act as backups for each other. The key of the triad is that every other server: 4, 5, 6 can be can be added or dropped whenever you want without affecting things like clustered sessions or caching. For example, you can configure 7 servers, and only have 3 live. Shut down the last 4 and the system just works. But _don't_ shut down the first 3, because that's the triad. That's really the only reason you need to know about the triad (other than putting on different hardware for reliability.) 7) elastic servers. The elastic server idea is just a way for you to be lazy about configuration, when you have lots of servers. Without elastic servers, you can just keep changing the app_servers in resin.properties on every machine: app_servers : 192.168.1.10:6800, 192.168.1.11:6800, 192.168.1.12:6800, 192.168.1.13:6800, ... But to make this work, you need to update every server configuration when you want to add a new server. The elastic servers lets you be lazy. You still need to configure "static" servers. A "static" server just means you have an explicit configuration in the resin.properties. But you can add elastic servers without updating all the configuration files. # static servers (you can have more or less. We recommend 3 if you have at least 3 servers.) app_servers : 192.168.1.10:6800, 192.168.1.11:6800, 192.168.1.12:6800 elastic_server : app:1 The "elastic_server" tells Resin that this server is an elastic server. Resin will automatically use the IP address and connect to the static servers, announce itself. 8) summary Basically, you can ignore most of the concepts. Just try this experiment on a single server: app_servers : 127.0.0.1:6800, 127.0.0.1:6801 web_servers : 127.0.0.1:6810 web-0.http : 8080 app-0.http : 8090 app-1.http : 8091 That will configure 1 web server at :8080 which will also act as a load balancer, and 2 app servers where your application will be deployed. Just browse to :8080 and you'll automatically be load balanced. The app-0.http :8090 isn't absolutely necessary but it's nice to be able to connect to the server directly if necessary. Also, if you use the "resinctl deploy -server app-0" to deploy your application, it will automatically get copied to app-1. You can still copy to webapps yourself, of course, if you prefer. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:18:34 CET 2012</date>
    <body>Thanks, Scott, I'll read through that more carefully shortly. One question. Do I set up one server with the multi-machine additions as you show, and then just replicate the config file (and server, webapp, et al) onto all the machines? I realize that may seem obvious, but I want to be sure. Also, how do I get them to talk to each other via private interfaces? Or does that happen magically with Rackspace? -- Rick http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:29:58 CET 2012</date>
    <body>Yes, all the servers will have the same configuration. Ah. I wasn't explicit about that. (You're right about assumptions.) The IP addresses you put in app_servers and web_servers are *private* addresses. You shouldn't put public addresses in the app_servers and web_servers, if you have the option. If you have 1 machine, you should use 127.0.0.1, otherwise use the private IP. I don't specifically know about Rackspace, but you might need to change the firewall settings so each server is allowed to connect to 6800. Amazon, for example, has a security group firewall, so only the servers in the security group are allowed to see 6800. Outside servers can't get to it. I'm sure Rackspace has something similar. When you start Resin with "start-all" (or the /etc/init.d script), Resin will compare its own IP address with the configuration IP addresses in app_servers and web_servers and start itself as the local address. (Does that make sense?) -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:40:15 CET 2012</date>
    <body>Okay, so, I can set one up with the config, make a snapshot of that machine, then bring up more instances from that snapshot. I'll have to figure out how to manage the IP addresses of the hosts that I bring up; might have to manually edit the config file after they're brought up. Similar question for elastic servers. :-) Yes, I remember dealing with that on EC2, I'll figure out what Rackspace does. I did find the two IPs, internal and external. One thing that's becoming clear is what was listening on 6800 vs 80: 6800 is for internal communication among servers. Not sure if it's used in the single-server case, but I understand. Yes, I think so. After I make some dinner I'll try to go through your original email and get a couple servers running. The first server will be my load balancer, which will hit itself and the other server. MySQL can sit on the first server (although I imagine in that configuration, it might make sense for it to sit on the other server, since the first has the added burden of being the load balancer). Thanks! I'm rather excited to try running multiple machines, and see how badly my code breaks. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:51:23 CET 2012</date>
    <body>Yep. If the IP addresses are random, like Amazon, Resin has a few tricks to help, but that's a complication that's not necessary if you can rely on an IP address. You do have to tweak the config for the first elastic server, but after that you can take a snapshot of the elastic server and just bring up lots of instances with the new snapshot without changing the configuration. Exactly. Hopefully, it won't even notice :) -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 04:26:00 CET 2012</date>
    <body>One more request: I really prefer text descriptions. I find videos excruciatingly difficult to sit through, whereas a well-written textual how-to allows me to skim over parts I'm familiar with. One of the keys to making it well-written is to put the actual steps to carry out in a bullet-point or numbered list, so that a crucial bit of info isn't buried in a paragraph somewhere. Thanks! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Sat Nov 10 05:05:05 CET 2012</date>
    <body>I might actually be wrong about this one. Without explicit (Hibernate) caching, I think it's actually creating a persistence session on each request, and so all objects are created and destroyed in the request. Hibernate caching is its own beast, I'm sure I'll have to tackle that next. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Sat Nov 10 05:05:49 CET 2012</date>
    <body>Does that ack happen before the session.setAttribute() call returns? If not, it seems like there might be a hole. -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Tue Nov 13 16:22:33 CET 2012</date>
    <body>Hi Haroon, The Memcache/JCache layer really isn't intended for direct access to the user session, if that was the intention of your question.  Although theoretically that's possible. We've added these API so that your application can setup and use a distributed cache as you see fit.  This cache is based on the same technology Resin uses for session failover. There is a "memcached tier" example in resin.xml in the latest Resin releases. It sets up a Memcache network listener. Here are some links to documentation on using the distributed cache with JCache: http://www.infoq.com/news/2011/12/resin-memcached http://www.caucho.com/resin-application-server/press/caucho-features-resin-cache-an-elastic-and-persisted-alternative-memcached-solution/ http://caucho.com/resin-4.0/admin/cluster-cloud.xtp#ClusterResourcesCacheQueues http://wiki4.caucho.com/Resin_Java_Cache_using_CDI_Inject Thanks, Paul http://tinyurl.com/aprccda http://maillist.caucho.com/mailman/listinfo/resin-interest http://blog.caucho.com http://twitter.com/cauchoresin http://maillist.caucho.com/mailman/listinfo/resin-interest http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Tue Nov 13 16:50:49 CET 2012</date>
    <body>Here's a link to a handout we created for JavaOne this year.  The back (2nd page) summarizes all the recent enhancements.  It should be helpful: https://s3.amazonaws.com/caucho-web/Resin_4.x_Cloud_JAMM_overview.pdf Typically the best place to look for changes is the release notes: http://caucho.com/resin-4.0/changes/index.xtp resin.properties was added in version 4.0.24 and refined in .25. Documentation here: http://caucho.com/resin-4.0/admin/config-resin-properties.xtp Thanks, Paul =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 09:19:55 CET 2012</date>
    <body>Hello Rick I haven't worked a lot on this, but if you want I can provide my resin.xml : in my application I have one resin front loadbalancer, with N application servers (all IP are known) and potentially 2 mysql db servers . I use resin 4.0.13 pro on linux debian -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Fri Nov 09 09:52:34 CET 2012</date>
    <body>Thanks, Riccardo, couldn't hurt! -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Scaling Up</header>
    <date>Sat Nov 10 12:04:56 CET 2012</date>
    <body>you'll find my 2 xml conf (resin 4.0.13) - resin.xml is the front server, I have 1 front for 2 app-tier clusters, one cluster is for the application, the other if for images only servers - resin.safe.xml is the conf for application app-tier, I did not set any http service for this because I never access it directly. (but you have to if you use resin-admin) I don't use automatic deployement or elastic server yet, but I think I'll try this on the new version of resin. good luck Hello Rick I haven't worked a lot on this, but if you want I can provide my resin.xml : in my application I have one resin front loadbalancer, with N application servers (all IP are known) and potentially 2 mysql db servers . I use resin 4.0.13 pro on linux debian Thanks, Riccardo, couldn't hurt! -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr - Resin 4.0 configuration file for a clustered/load-balance environment http://caucho.com/ns/resin" - jars with maven dependencies can be placed in project-jars to be used - by web-apps - Resin-managed data, including sessions, administration, and clustering - Remote management requires at least one enabled admin user. - Logging configuration for the JDK logging API. rollover-size="1mb" rollover-period="1D" - 'info' for production - 'fine' or 'finer' for development and troubleshooting - For production sites, change dependency-check-interval to something - like 600s, so it only checks for updates every 10 minutes. - SMTP server for sending mail notifications - Sets the default character encoding to utf-8 - - You can change the compiler to "javac", "eclipse" or "internal". - Admin services - The JVM arguments - Uncomment to enable admin heap dumps - - Uncomment for low-memory overhead - arguments for the watchdog process - Configures the minimum free memory allowed before Resin - will force a restart. - If starting Resin as root on Unix, specify the user name - and group name for the web server user. - For security, use a different cookie for SSL sessions. - Enables the cache (available in Resin Professional) Vary header rewriting for IE - Enables periodic checking of the server status and - check for deadlocks.. - - All servers can add &amp;lt;url&amp;gt;s to be checked. http://localhost:8080/test-ping.jsp - Defaults applied to each web-app. - Enable EL expressions in Servlet and Filter init-param - Sets timeout values for cacheable pages, e.g. static pages. - for security, disable session URLs by default. - For security, set the HttpOnly flag in cookies. - Some JSP packages have incorrect .tld files.  It's possible to - set validate-taglib-schema to false to work around these packages. - Sample database pool configuration - - The JDBC name is java:comp/env/jdbc/test - Default host configuration applied to all virtual hosts. - With another web server, like Apache, this can be commented out - because the web server will log this information. - configures an explicit root web-app matching the - webapp's ROOT - Administration application /resin-admin xmlns=" http://caucho.com/ns/resin" root-directory="/home/webapps/realty" work-dir="/home/webapps.tmp/realty/work" - Resin 3.2 configuration file. http://caucho.com/ns/resin" xmlns:resin=" http://caucho.com/ns/resin/core" - For production sites, change dependency-check-interval to something - like 600s, so it only checks for updates every 10 minutes. root-directory="/home/webapps/front" work-dir="/home/webapps.tmp/front/work" root-directory="/home/webapps/front" work-dir="/home/webapps.tmp/front/work"</body>
  </mail>
  <mail>
    <header>[Resin-interest] getParameterValues returnes the parameters twice</header>
    <date>Thu Nov 01 11:03:48 CET 2012</date>
    <body>Hi! We have begun seeing that getParameterValues returns each parameter twice. logger.debug("getParameterValues: " + gives DEBUG 21.09.2012 15:35:53:733 (LoginController.java:showForm:33) - getParameter: aaa DEBUG 21.09.2012 15:35:53:733 (LoginController.java:showForm:34) - getParameterValues: [aaa, aaa] for the querystring xxx=aaa Any ideas to why? :) I would have excpected that last line to show "[aaa]" instead of "[aaa, aaa]". When running on Jetty we see "[aaa]". We are running Resin 4.0.31. -Kaj :)</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] getParameterValues returnes the parameters	twice</header>
    <date>Fri Nov 09 00:47:49 CET 2012</date>
    <body>Hi Kaj, I don't think you received a response to this question. This issue is fixed in 4.0.33, which should be released next week. Thanks, Paul http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] getParameterValues returnes the parameters	twice</header>
    <date>Mon Nov 12 15:36:32 CET 2012</date>
    <body>Great! :) Thanks! -Kaj :)</body>
  </mail>
  <mail>
    <header>[Resin-interest] class-loader / fail compiling then recompile	correctly</header>
    <date>Wed Oct 31 15:20:09 CET 2012</date>
    <body>Hello To retreive google analytics data, I have added google api jars in my application and use it in some scheduled-tasks. To avoid mixing jars, I put them in a sub folder of lib : WEB-INF/lib/google For Resin to compile my source with correct libs I added in &amp;lt;web-app&amp;gt; : At first resin launch there are many errors like : package com.google.api.client.googleapis.auth.oauth2 does not exist But immediatly after Resin recompile my class properly and starts running. I've read in resin's doc that the &amp;lt;class-loader&amp;gt; can be added also in but I don't see a reason for changing the scope of those libs that are only needed in this web-app. Thanks for any help. PS:I'm running resin 4.0.13, on linux debian/sun jdk. -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France http://www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-interest Digest, Vol 76,	Issue 9 : Tenured space ratio</header>
    <date>Wed Oct 31 09:38:20 CET 2012</date>
    <body>Hello. I never saw this warning but, on our side we customized the -J-XX:NewRatio to 1 (only way to handle eden/tenured space values with G1 as we discovered) on some applications. This means 50% for eden and 50% for tenured. As default is 2, there is less space for eden and our tests showed that webapps wanted more eden than default value was giving (avoid full GCs) Anyway, tuning the GC is a hard, long but very interesting task and a recommended way to do it is to replay scenarios with various configurations... And even if that config was good for us, there is no guarantee that it will match your needs. Good luck. Jonathan http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Tue Oct 30 18:14:23 CET 2012</date>
    <body>Hi Everyone, I could use a little help troubleshooting some messages in my jvm-default.log.  I am seeing a lot of the following messages in our Resin logs.  We are currently running Resin 4.0.23 Pro. I did a bit of research this morning about adjusting tenured memory limits, but I didn't find anything specific to adjusting the value. Does anyone know what property I need to adjust?  I currently have the following Java settings in my resin.xml file: I could increase the -Xmx property, but I am wondering if there is a better property to tweak. I am also seeing the following warning messages: Does anyone have some advice on how to resolve these warnings?  I read the Resin documentation, but I didn't find something specific. Thanks for your help Keith -- ----------------------------------------------------------------- Keith Fetterman                        Direct: 206-319-9434 Mariner Supply, Inc.                   206-780-5670 http://www.go2marine.com kfetter...@go2marine.com http://www.go2hydraulics.com http://www.shoprvparts.com</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Tue Oct 30 19:12:10 CET 2012</date>
    <body>The max heap (set with the -Xmx parameter) is shared between all generations, with the typical Sun/Oracle JVM that is eden, survivor, tenured and permanent generations. The JVM usually does a pretty good job at adjusting the individual sizes according to how much garbage your app produces. I think 2097M out of 3000M is quite reasonable for the tenured generation. You may need to give it more memory.  Is it conceivable that your app has a resource leak? If so you may be able to get in shape for a while by restarting it.  The thread count warnings may indicate that a lot of your memory is going to call stacks for the threads.  If your app was faster you would see fewer threads and hence less memory used. If you really want to get into tuning the memory/GC settings there is http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html to guide you, but I don't recommend that. Knut Forkalsrud On Tue, Oct 30, 2012 at 10:14 AM, Keith Fetterman http://www.go2marine.com kfetter...@go2marine.com http://www.go2hydraulics.com http://www.shoprvparts.com http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Tue Oct 30 21:54:49 CET 2012</date>
    <body>Hi Knut, Thanks a lot for the feed back. When you say "If your app was faster you would see fewer threads and hence less memory used. " are you thinking we need to make our app. more efficient or throw some CPU power at it? Thanks, Keith The max heap (set with the -Xmx parameter) is shared between all generations, with the typical Sun/Oracle JVM that is eden, survivor, tenured and permanent generations. The JVM usually does a pretty good job at adjusting the individual sizes according to how much garbage your app produces. I think 2097M out of 3000M is quite reasonable for the tenured generation.  You may need to give it more memory.  Is it conceivable that your app has a resource leak? If so you may be able to get in shape for a while by restarting it.  The thread count warnings may indicate that a lot of your memory is going to call stacks for the threads.  If your app was faster you would see fewer threads and hence less memory used. If you really want to get into tuning the memory/GC settings there is http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html to guide you, but I don't recommend that. Knut Forkalsrud On Tue, Oct 30, 2012 at 10:14 AM, Keith Fetterman mailto:kfetter...@go2marine.com Hi Everyone, I could use a little help troubleshooting some messages in my jvm-default.log.  I am seeing a lot of the following messages in our Resin logs.  We are currently running Resin 4.0.23 Pro. MemoryTenuredHealthCheck[WARNING:0.48% free (10.127M free, 2097.152M max, 2087.025M used)] I did a bit of research this morning about adjusting tenured memory limits, but I didn't find anything specific to adjusting the value. Does anyone know what property I need to adjust?  I currently have the following Java settings in my resin.xml file: I could increase the -Xmx property, but I am wondering if there is a better property to tweak. I am also seeing the following warning messages: AnomalyAnalyzer JVM|Thread|JVM Blocked Count WARNING AnomalyAnalyzer JVM|Thread|JVM Runnable Count WARNING Does anyone have some advice on how to resolve these warnings?  I read the Resin documentation, but I didn't find something specific. Thanks for your help Keith -- ----------------------------------------------------------------- Keith Fetterman                        Direct: 206-319-9434 http://www.go2marine.com kfetter...@go2marine.com mailto:kfetter...@go2marine.com http://www.go2hydraulics.com http://www.shoprvparts.com</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Tue Oct 30 22:04:53 CET 2012</date>
    <body>As Knut said, that size should be plenty. I'd look to see if you have some kind of memory leak. Take a look at either the heap section of Resin's PDF or /resin-admin. Specifically look for the ZombieClassLoaderMarker. Again, take a look at the PDF report (or thread graphs at that time.) If it's a little spike (2-3 threads), it's not a big problem, but if there are lots of threads in that spike you might have some kind of locking issue. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Wed Oct 31 00:24:04 CET 2012</date>
    <body>Thanks Scott, We are currently running 4.0.23 Pro.  I am getting ready to deploy 4.0.32 Pro into production.  Do you think the reporting in 4.0.32 Pro is better and would help troubleshoot the problem? Keith http://maillist.caucho.com/mailman/listinfo/resin-interest -- ----------------------------------------------------------------- Keith Fetterman                        Direct: 206-319-9434 Mariner Supply, Inc.                   206-780-5670 http://www.go2marine.com kfetter...@go2marine.com http://www.go2hydraulics.com http://www.shoprvparts.com</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Managing Tenured Memory in Resin</header>
    <date>Wed Oct 31 00:33:31 CET 2012</date>
    <body>It should be about the same. The 4.0.23 heap dump will show the same information. There are a few reporting changes in 4.0.32, but nothing major. -- Scott http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] closed entity manager on night process</header>
    <date>Fri Oct 26 15:38:06 CEST 2012</date>
    <body>Hello I'm running resin 4 .0.13, on linux debian/sun jd k . I have so me cron jobs launched by resin. xml c onfiguration work perfectly on my macosx (they are l aunched every minute for testing pur pose ). On the production server some cron jobs work a ll righ t while java.lang.IllegalStateException: Attempting to execute an operation on a closed EntityManager.     at org.eclipse.persistence.internal.jpa.EntityManagerImpl.verifyOpen(EntityManagerImpl.java:1563)     at org.eclipse.persistence.internal.jpa.EJBQueryImpl.getResultList(EJBQueryImpl.java:693)     at realty.Globalaction.reload_orgtables(Globalaction.java:947)     at reacron.Cleancache.CleanOrgCache(Cleancache.java:33)     at reacron.Cleancache.run(Cleancache.java:23)     at com.caucho.server.util.ScheduledThreadPool$TaskFuture.run(ScheduledThreadPool.java:591)     at com.caucho.env.thread.ResinThread.runTasks(ResinThread.java:182)     at com.caucho.env.thread.ResinThread.run(ResinThread.java:126) This is t he code at Globalaction.java:947 Query qr=m_manager.createQuery("select on from e is 947 I suspect that at night time there is no particular ac tivity on the server, but wh y o ther cron jobs work all ri ght ? &lt;font face="Helvetica, Arial, sans-serif"&gt; m_manager i s created by the resin.xm l conf :   &amp;lt;ejb-server data-source="realty/jdbc" I wonder why it is "cl osed" sometimes. I even don't know how to close it. Thanks for any help. -- Riccardo Cohen +33 (0)6 09 83 64 49 Société Realty-Property.com 1 rue de la Monnaie 37000 Tours France www.appartement-maison.fr</body>
  </mail>
  <mail>
    <header>[Resin-interest] Weird 404 problem</header>
    <date>Thu Oct 25 04:56:03 CEST 2012</date>
    <body>I just made a fairly minor change to a webapp that's been running well for years. I uploaded it to a new directory on the server, and then modified the resin.xml to point to the new location. I stopped and restarted resin to be sure. resin 4.0.19 I tried loading up /, and it gave me a 404 error. I double-checked the paths, tried slightly different ways of specifying them (host tag vs web-app tag), no luck. Then I loaded my server using the host name specified in the host tag (I usually use the host alias). Suddenly, things loaded. After that, I was able to go back to using the host alias. I bounced the server, and had the same issue. My host looks like this: I was unable to access it via missiondb.latencyzero.com until I had first accessed it via kepler.latencyzero.com. Note that before, when the web-app was configured to point to a different directory, I never experienced this problem. The log shows this on the 404: Resin[id=default] started in 1513ms FINE (com.caucho.network.listen.TcpSocketLink) TcpSocketLink[id=1,default] starting connection TcpSocketLink[id= http://*:80-1,http://*:80,ACCEPT ], total=4 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] GET / HTTP/1.1 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Remote-IP: 24.6.132.52:39388 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Host: missiondb.latencyzero.com FINE (com.caucho.server.http.HttpRequest) Http[default, 1] User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/536.26.14 (KHTML, like Gecko) Version/6.0.1 Safari/536.26.14 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] DNT: 1 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Cache-Control: max-age=0 FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Accept-Language: en-us FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Accept-Encoding: gzip, deflate FINE (com.caucho.server.http.HttpRequest) __utmz=268186515.1346150693.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none) FINE (com.caucho.server.http.HttpRequest) Http[default, 1] Connection: keep-alive FINE (com.caucho.env.deploy.EnvironmentDeployController) Host[error/host/error] initializing FINE (com.caucho.env.deploy.EnvironmentDeployController) Host[error/host/error] root-directory=/error FINE (com.caucho.env.deploy.EnvironmentDeployController) WebApp[error/webapp//error,NEW] initializing FINE (com.caucho.env.deploy.EnvironmentDeployController) WebApp[error/webapp//error,NEW] root-directory=/error-root CONFIG (com.caucho.server.dispatch.ServletMapper) servlet-mapping *.jsp -&amp;gt; resin-jsp CONFIG (com.caucho.server.dispatch.ServletMapper) servlet-mapping *.jspf -&amp;gt; resin-jsp CONFIG (com.caucho.server.dispatch.ServletMapper) servlet-mapping *.jspx -&amp;gt; resin-jspx CONFIG (com.caucho.server.dispatch.ServletMapper) servlet-mapping *.php -&amp;gt; resin-php CONFIG (com.caucho.server.dispatch.ServletMapper) servlet-mapping / -&amp;gt; resin-file FINE (com.caucho.server.http.AbstractHttpResponse) Http[default, 1] HTTP/1.1 404 Not Found FINE (com.caucho.server.http.AbstractHttpResponse) Http[default, 1] Content-Type: text/html; charset=utf-8 FINE (com.caucho.server.http.AbstractHttpResponse) Http[default, 1] Content-Length: 186 FINE (com.caucho.server.http.HttpResponseStream) Http[default, 1] finish/keepalive Any ideas? Thanks. -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] server-multi?</header>
    <date>Wed Oct 24 23:47:45 CEST 2012</date>
    <body>What is this tag? It's not listed in the reference: http://www.caucho.com/resin-4.0/reference.xtp -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] server-multi?</header>
    <date>Wed Oct 24 23:57:09 CEST 2012</date>
    <body>http://www.caucho.com/resin-4.0/reference.xtp Thanks. We'll need to fix that. The &amp;lt;server-multi&amp;gt; is meant to work together with the resin.properties file to simplify defining a cluster. The main purpose is to allow the resin.properties to define a 3-server cluster with a single property like: app_servers : 192.168.1.10:6800 192.168.1.11:6800 192.168.1.12:6800 Essentially, it's a macro that creates multiple &amp;lt;server&amp;gt; entries, one for each item in the address-list. The names of the servers are generated automatically, "app-0", "app-1", "app-2". It's equivalent to creating the three &amp;lt;server&amp;gt; items individually. -- Scott</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] server-multi?</header>
    <date>Thu Oct 25 01:47:17 CEST 2012</date>
    <body>http://www.caucho.com/resin-4.0/reference.xtp Thanks, Scott! -- Rick</body>
  </mail>
  <mail>
    <header>[Resin-interest] GWT - replacing Jetty with Resin in Eclipse</header>
    <date>Thu Oct 18 22:26:03 CEST 2012</date>
    <body>I created a GWT project and a Resin Server. When i right click the Resin server and try to add the project to it, I get "There are no resources that can be added". Has anyone had any success with this please? Basically my goal is to set up GWT with Resin and EclipseLink, so there're no Google App Engine needed.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] GWT - replacing Jetty with Resin in Eclipse</header>
    <date>Thu Oct 18 23:42:18 CEST 2012</date>
    <body>I think the issue is that the project ins't  nominated to become a Web Application. Please open project properties and add "Dynamic Web Module" in "Project Facets" node. Alex http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Strange class loading issues</header>
    <date>Wed Oct 17 13:08:11 CEST 2012</date>
    <body>I have two webapps in the same &amp;lt;host&amp;gt; tag. They're nearly identical (one was cloned from the other). But when resin starts, it complains about not being able to load the MySQL driver: Thing is, the other webapp loads it exactly the same way, and has no problem. Both apps have the .jar file in the same place inside WEB-INF/lib (using the tree loader). This kind of thing seems to happen a lot, and it's always a pain to debug. Thanks, -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Strange class loading issues</header>
    <date>Wed Oct 17 13:36:52 CEST 2012</date>
    <body>I figured it out. Missing path component in the web-app config. Kinda wish it would say "NO DIRECTORY AT BLAH BLAH DUMBASS" :-) -- Rick http://maillist.caucho.com/mailman/listinfo/resin-interest -- Rick</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-interest Digest, Vol 76, Issue 3</header>
    <date>Wed Oct 10 19:36:23 CEST 2012</date>
    <body>Will the 4.0.33 release also fix the array out of bounds issue with the IBM J9 1.7 JVM? java.lang.ArrayIndexOutOfBoundsException: Array index out of range: -80 at com.caucho.hessian.util.IdentityIntMap.put(IdentityIntMap.java:141) at com.caucho.hessian.io.Hessian2Output.addRef(Hessian2Output.java:1407) at com.caucho.hessian.io.Hessian2Output.addRef(Hessian2Output.java:1339) at com.caucho.hessian.io.UnsafeSerializer.writeObject(UnsafeSerializer.java:163) at com.caucho.hessian.io.Hessian2Output.writeObject(Hessian2Output.java:465) at com.caucho.hmtp.HmtpWriter.message(HmtpWriter.java:128) at com.caucho.hmtp.HmtpWebSocketWriter.message(HmtpWebSocketWriter.java:107) at com.caucho.server.resin.ResinActor.sendWarning(ResinActor.java:84) at com.caucho.server.resin.ResinWarningHandler.warning(ResinWarningHandler.java:55) at com.caucho.env.warning.WarningService.sendWarning(WarningService.java:98) at com.caucho.env.shutdown.ShutdownSystem.startFailSafeShutdown(ShutdownSystem.java:268) at com.caucho.env.shutdown.ShutdownSystem.startFailSafeShutdown(ShutdownSystem.java:249) at com.caucho.env.shutdown.ShutdownSystem.shutdown(ShutdownSystem.java:228) at com.caucho.env.shutdown.ShutdownSystem.shutdownActive(ShutdownSystem.java:208) at com.caucho.server.resin.ResinActor.destroy(ResinActor.java:166) at com.caucho.server.resin.ResinLink.run(ResinLink.java:78) at com.caucho.env.thread2.ResinThread2.runTasks(ResinThread2.java:173) at com.caucho.env.thread2.ResinThread2.run(ResinThread2.java:118) Steve Francis zSeries Systems Engineer IBM SO Delivery, Server Systems Operations Office:  770-442-7157 http://maillist.caucho.com/mailman/listinfo/resin-interest http://caucho.com/ns/resin" http://bugs.caucho.com/view.php?id=5240 http://caucho.com/ns/resin" http://maillist.caucho.com/mailman/listinfo/resin-interest http://blog.caucho.com http://twitter.com/cauchoresin http://maillist.caucho.com/pipermail/resin-interest/attachments/20121010/580c50b8/attachment-0001.html http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-interest Digest, Vol 76, Issue 3</header>
    <date>Thu Oct 11 03:09:48 CEST 2012</date>
    <body>Yes, this is a bug in Hessian, that will be fixed in .33 also. http://bugs.caucho.com/view.php?id=5239 -Paul</body>
  </mail>
  <mail>
    <header>[Resin-interest] resin-pro-4.0.31 and IBM JDK 1.6.0</header>
    <date>Wed Oct 10 06:28:36 CEST 2012</date>
    <body>Greetings! I'm trying to start resin without any apps deployed with the 64bit IBM JDK on Linux. Keep getting this error. This error is also reproducible on AIX. rdeepak@rdeepak-desktop:~/Development/project/resin-pro-4.0.31$ ./bin/resin.sh start conf/resin.xml:5: java.lang.NullPointerException 4: &amp;lt;resin xmlns=" http://caucho.com/ns/resin" 6: IBM JDK details: rdeepak@rdeepak-desktop:~/Development/project/resin-pro-4.0.31$ java -version java version "1.6.0" Java(TM) SE Runtime Environment (build pxa6460sr11-20120806_01(SR11)) IBM J9 VM (build 2.4, JRE 1.6.0 IBM J9 2.4 Linux amd64-64 jvmxa6460sr11-20120801_118201 (JIT enabled, AOT enabled) J9VM - 20120801_118201 JIT  - r9_20120608_24176ifx1 GC   - 20120516_AA) JCL  - 20120713_01 Thanks Deepak -- This message has been scanned for viruses and dangerous content by MailScanner, and is believed to be clean.</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] resin-pro-4.0.31 and IBM JDK 1.6.0</header>
    <date>Wed Oct 10 16:25:11 CEST 2012</date>
    <body>Hi Deepak, We recently traced this to an apparent bug in the IBM J9 1.6 JVM.  There is a bug report with details here: http://bugs.caucho.com/view.php?id=5240 I expect we will add exception handling for it in the next Resin 4.0 release (4.0.33) which not scheduled yet, but will likely be cut in 3-6 weeks from now. Thanks, Paul http://caucho.com/ns/resin" http://maillist.caucho.com/mailman/listinfo/resin-interest =============================== Paul Cowan, Software Engineer Caucho Technology co...@caucho.com http://blog.caucho.com http://twitter.com/cauchoresin</body>
  </mail>
  <mail>
    <header>[Resin-interest] Resin 4.0.30+ NotSerializableException:	com.caucho.el.MethodExpr$MethodCall</header>
    <date>Mon Oct 01 17:06:15 CEST 2012</date>
    <body>Without having had time to look into it further, I'm wondering if anyone else has seen these exceptions moving from Resin 4.0.29 to 4.0.30 (same problem with 4.0.31 for us)? Any workaround? Caused by: java.io.NotSerializableException: com.caucho.el.MethodExpr$MethodCall at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_30] at java.util.concurrent.ConcurrentHashMap.writeObject(ConcurrentHashMap.java:1247) ~[na:1.6.0_30] at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source) ~[na:na] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) ~[na:1.6.0_30] at java.lang.reflect.Method.invoke(Method.java:597) ~[na:1.6.0_30] at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_30] at com.sun.faces.facelets.el.TagValueExpression.writeExternal(TagValueExpression.java:186) ~[javax.faces-2.1.11.jar:2.1.11] at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1429) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1398) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1518) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1483) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_30] at java.util.ArrayList.writeObject(ArrayList.java:570) ~[na:1.6.0_30] at sun.reflect.GeneratedMethodAccessor72.invoke(Unknown Source) ~[na:na] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) ~[na:1.6.0_30] at java.lang.reflect.Method.invoke(Method.java:597) ~[na:1.6.0_30] at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeArray(ObjectOutputStream.java:1346) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1154) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_30] at java.util.HashMap.writeObject(HashMap.java:1001) ~[na:1.6.0_30] at sun.reflect.GeneratedMethodAccessor155.invoke(Unknown Source) ~[na:na] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) ~[na:1.6.0_30] at java.lang.reflect.Method.invoke(Method.java:597) ~[na:1.6.0_30] at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:945) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1469) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1400) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1158) ~[na:1.6.0_30] at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330) ~[na:1.6.0_30] at com.sun.faces.renderkit.ClientSideStateHelper.doWriteState(ClientSideStateHelper.java:338) ~[javax.faces-2.1.11.jar:2.1.11] at com.sun.faces.renderkit.ClientSideStateHelper.writeState(ClientSideStateHelper.java:170) ~[javax.faces-2.1.11.jar:2.1.11] at com.sun.faces.renderkit.ResponseStateManagerImpl.getViewState(ResponseStateManagerImpl.java:135) ~[javax.faces-2.1.11.jar:2.1.11] --</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Resin 4.0.30+ NotSerializableException:	com.caucho.el.MethodExpr$MethodCall</header>
    <date>Mon Oct 01 21:07:05 CEST 2012</date>
    <body>I'm marking it as a bug. That structure is supposed to be a runtime cache, and not saved during serialization. -- Scott</body>
  </mail>
  <mail>
    <header>[Resin-interest] jsp-config in resin 4.0.x</header>
    <date>Thu Sep 27 00:34:05 CEST 2012</date>
    <body>I am trying to test using jsp-property-group functionality to control the behavior of jspx files in an application, and am not getting the results I expect. It seems like this should work, but it has no effect: Using a prelude, I was able to accomplish basically the same thing, but that seems much less clean. I have tried putting the config in a standard web.xml and in the resin-web.xml, but neither has the intended effect. Is default-content-type not supported? I don't see it documented on the reference page of the site, but an xml error on the page lists it in the supported schema. The page-encoding doesn't seem to have an effect either, but that's not as big a concern. Thanks in advance for any insight/experience. Matt Pangaro</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] jsp-config in resin 4.0.x</header>
    <date>Thu Sep 27 00:37:03 CEST 2012</date>
    <body>To revise that, I can see that the page-encoding is taking effect, which tells me that my mapping is working, but the default-content-type doesn't do anything, so I'm thinking it must not be supported. said: http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Question about EL in JSPX</header>
    <date>Wed Sep 26 00:54:09 CEST 2012</date>
    <body>We have a number of JSPX files that work properly in 3.1.7a, but are failing now in versions 4.0.20 and 4.0.31 with problems in the encoding. The question is whether the source JSPX file needs to be parsed properly as XML prior to processing, or after. The example below illustrates it: This code works in 3.1.7a, but not 4.0.20/31: Giving the error msg: !variable2 eq 'value2'' Note that the &amp;amp;&amp;amp; are missing. Changing "&amp;amp;&amp;amp;" to "and" will make it work again in Resin 4.0.x: We also have a small number of scriptlet tags that use &amp;amp;amp; or &amp;amp;#38; for this. We just want to confirm the order parsing/processing, per the spec, and see whether the behavior we're seeing is expected. Matt Pangaro Lokitech &amp;gt;&amp;gt; software . strategy . design http://www.lokitech.com m. 1.301.728.6906 f. 1.815.364.0656 e. ma...@lokitech.com</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Question about EL in JSPX</header>
    <date>Wed Sep 26 01:10:38 CEST 2012</date>
    <body>It's an XML file first, and then the contents of the XML attribute are parsed. So the "&amp;amp;" needs to become &amp;amp;amp; (or use "and") -- Scott http://www.lokitech.com http://maillist.caucho.com/mailman/listinfo/resin-interest</body>
  </mail>
  <mail>
    <header>[Resin-interest] Tiles issues on 4.0.x</header>
    <date>Tue Sep 25 08:11:50 CEST 2012</date>
    <body>Hi all, I'm working to try and diagnose some issues we're seeing with an existing application that's being moved from Resin 3.1.7a to Resin 4. So far we have tested on versions 4.0.20 and 4.0.31 and have seen the same issue. The application uses Spring 3.0.4 and Struts 1.2.8 with Tiles. It currently uses c:import tags to insert tiles content in some cases, which worked fine in Resin 3.1.7a, but has caused exceptions in both Resin 4 versions. The error messages look something like: [15:24:10,597] FATAL - "Error ID: Error Msg:Unhandled exception 'javax.servlet.jsp.JspException: ServletException in '/pages/tiles/page1.jsp': ServletException in '/tiles/search/search.jsp': c:import status code 401 recieved while serving /tiles/search/page2.jsp' for request '/admin/page' As you can see, there's a  bunch of nesting going on. Using a jsp:include instead of the c:import clears up the issue, but we're trying to get to the root cause before we settle on a solution. We were hoping somebody else might have seen this. Thanks, Matt Pangaro</body>
  </mail>
  <mail>
    <header>Re: [Resin-interest] Tiles issues on 4.0.x</header>
    <date>Tue Sep 25 19:36:51 CEST 2012</date>
    <body>Hi all, I'm working to try and diagnose some issues we're seeing with an existing application that's being moved from Resin 3.1.7a to Resin 4. So far we have tested on versions 4.0.20 and 4.0.31 and have seen the same issue. The application uses Spring 3.0.4 and Struts 1.2.8 with Tiles. It currently uses c:import tags to insert tiles content in some cases, which worked fine in Resin 3.1.7a, but has caused exceptions in both Resin 4 versions. The error messages look something like: [15:24:10,597] FATAL - "Error ID: Error Msg:Unhandled exception 'javax.servlet.jsp.JspException: ServletException in '/pages/tiles/page1.jsp': ServletException in '/tiles/search/search.jsp': c:import status code 401 recieved while serving /tiles/search/page2.jsp' for request '/admin/page' As you can see, there's a  bunch of nesting going on. Using a jsp:include instead of the c:import clears up the issue, but we're trying to get to the root cause before we settle on a solution. We were hoping somebody else might have seen this. Can you run this with a level="finer"? 401 is an authentication issue. It's conceivable that some information isn't getting passed to the child request using c:import. -- Scott Thanks, Matt Pangaro</body>
  </mail>
  <mail>
    <header>[Resin-interest] Up-to-date remote deploy strategy</header>
    <date>Thu Sep 20 10:34:08 CEST 2012</date>
    <body>What is the current recommended approach for remote deploying from Hudson/Jenkins to recent Resin versions (4.0.29+)? It looks like the resin-maven-plugin [1] (which may have been preferable) has been abandoned? Latest version is 4.0.17 and does not seem to be working. Is command line deploy [2] the latest and greatest? What would be the recommended approach for invoking from Hudson/Jenkins? exec-maven-plugin with exec:java or exec:exec? Is the same Resin version required on both machines? 1: http://caucho.com/resin-4.0/admin/deploy-ant-maven.xtp 2: http://caucho.com/resin-4.0/admin/deploy-command-line.xtp --</body>
  </mail>
</mails>

