<?xml version="1.0" encoding="UTF-8"?>
<mails>
  <mail>
    <header>Re: [jdom-interest] Planning for JDOM 2.1.x</header>
    <body>Hi all.    An update to the JDOM 2.1.x process is as follows... JDOM 2.0.x has been branched off from the master branch in GitHub (it has been branched for a while). Essentially JDOM 2.0.x versions are now in maintenance mode (fully supported still, but no new features). The 'master' branch in GitHub contains the work going in to the future JDOM 2.1.x release stream.    Currently the list of items scheduled for inclusion to JDOM 2.1.x are: - improved StAX support - extended XPath API that allows for 'indexed' JDOM Documents that in turn will allow for improved XPath performance - use Iterable&amp;lt;...&amp;gt; inputs to many of the bulk methods ( like addAll(Iterable&amp;lt;? extends Content&amp;gt; content) ) which makes JDOM more friendly in some cases - NamespaceStack has been updated with some new query methods, and one new 'push' method. - native support for Saxon 9.5 HE (just released) -&amp;gt; faster XPAths, as well as faster XSLT and extended support for XPath 2.0, etc.    These items are all already committed to the master branch, or are in a partially implemented state.    I expect to be releasing a Beta version of 2.1.x in a few weeks, but I am looking for people to test the code too.    If anyone has an interest in being more involved in the planning and implementation of these items, please speak up.    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-announce] JDOM 2.0.5 released</header>
    <body>Hi All.    I have just released JDOM 2.0.5 with the following fixes:    * Fixes Issue 106 - Uses different methods on StAX Stream output to ensure that Namespace URI's are prefixed correctly. * Fixes Issue 111 - Improve documentation for SAXBuilder.build(String) so that it is more obvious that the String is not actual XML values, but a URI. * Fixes Issue 112 - Improves performance of SAXBuilder when there are large ( greater than 1KB ) text sections in the input XML. * Fixes Issue 113 - Compile (and test) against Jaxen 1.1.6 * Fixes Issue 114 - Setting the Line Separator for JDOM would not work from System.properties(). * Fixes Issue 115 - Correctly set the 'xmlns' prefix and URI for Namespace declarations in DOMOutputter. * Fixes Issue 116 - JDOM 1.x uses an iterator to output XML child content, modify JDOM 2.x to do the same.    JDOM 2.0.5 is available here on the [1]jdom.org site here: [2] &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-2.0.5.zip" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-2.0.5.zip &lt;/a&gt; and also available on Maven (the publish/synchronization process can take an hour or more).    Previous versions of JDOM 2.x have been available on the GitHub Download pages. The download pages are no longer supported by GitHub. This version, and future versions will not be available there. [3] &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom2|2.0.5|jar    Happy coding    Rolf    References    Visible links 1. &lt;a class="exlink mklink" href="http://www.jdom.org/" rel="nofollow"&gt; http://www.jdom.org/ &lt;/a&gt;  2. &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-2.0.5.zip" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-2.0.5.zip &lt;/a&gt;  3. &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails%7Corg.jdom%7Cjdom2%7C2.0.5%7Cjar" rel="nofollow"&gt; http://search.maven.org/#artifactdetails%7Corg.jdom%7Cjdom2%7C2.0.5%7Cjar &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.5 released</header>
    <body>Hi All.    I have just released JDOM 2.0.5 with the following fixes:    * Fixes Issue 106 - Uses different methods on StAX Stream output to ensure that Namespace URI's are prefixed correctly. * Fixes Issue 111 - Improve documentation for SAXBuilder.build(String) so that it is more obvious that the String is not actual XML values, but a URI. * Fixes Issue 112 - Improves performance of SAXBuilder when there are large ( greater than 1KB ) text sections in the input XML. * Fixes Issue 113 - Compile (and test) against Jaxen 1.1.6 * Fixes Issue 114 - Setting the Line Separator for JDOM would not work from System.properties(). * Fixes Issue 115 - Correctly set the 'xmlns' prefix and URI for Namespace declarations in DOMOutputter. * Fixes Issue 116 - JDOM 1.x uses an iterator to output XML child content, modify JDOM 2.x to do the same.    JDOM 2.0.5 is available here on the [1]jdom.org site here: [2] &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-2.0.5.zip" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-2.0.5.zip &lt;/a&gt; and also available on Maven (the publish/synchronization process can take an hour or more).    Previous versions of JDOM 2.x have been available on the GitHub Download pages. The download pages are no longer supported by GitHub. This version, and future versions will not be available there. [3] &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom2|2.0.5|jar    Happy coding    Rolf    References    Visible links 1. &lt;a class="exlink mklink" href="http://www.jdom.org/" rel="nofollow"&gt; http://www.jdom.org/ &lt;/a&gt;  2. &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-2.0.5.zip" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-2.0.5.zip &lt;/a&gt;  3. &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails%7Corg.jdom%7Cjdom2%7C2.0.5%7Cjar" rel="nofollow"&gt; http://search.maven.org/#artifactdetails%7Corg.jdom%7Cjdom2%7C2.0.5%7Cjar &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] streaming document output</header>
    <body>Rolf,    The iterator based code worked fine for our use case and we can stream a dynamic document. Yay! Sometime this week I am going to integrate this into another  system which has the potential to stream lots of data; at that point I'll be able to determine that memory consumption remains modest.    So -- this is excellent. I'll use the jar you sent me for now and watch for the next release.    Thanks again,    Pat    On 04/12/2013 03:07 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  See attached. - Jar, and the two files I changed (just in case).    Please try it... it is iterator-only, passes my tests (except one which I have updated now because this code produces a better result in one extreme use case....)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] streaming document output</header>
    <body>OK, that means I have had to alter the more complicated AbstractFormattedWalker class.    I have a test build I would like you to run. Is this an option? Can I email it to you? It passes all my JUnit tests, and uses just an iterator for all the output.    Thanks    Rolf    On 11/04/2013 4:28 PM, Patrick Dowler wrote:   &lt;div class="quote quote-1"&gt;   We normally use Format.getPrettyFormat()</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] streaming document output</header>
    <body>We normally use Format.getPrettyFormat()    Patrick    On 04/11/2013 11:30 AM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Oh, are you using 'raw' output, or are you making it 'pretty' or other format?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] streaming document output</header>
    <body>Oh, are you using 'raw' output, or are you making it 'pretty' or other format?    Rolf    On 11/04/2013 1:29 PM, Patrick Dowler wrote:   &lt;div class="quote quote-1"&gt;   We have a few web services that send XML documents in the response. The documents can be large and when they are there is always one spot where there is an arbitrarily long list of child elements.    With jdom1 we had implemented a subclass of Element for the element with the long list of child elements and then had the iterator over that list dynamically generate the children. Since the XMLOutputter used indexed access rather than the iterator, we also had to subclass it and override the list access. That works fine at the time.    No we are porting to jdom2 and I see that the outputter still uses indexed access; that is a shame given all the comments in the code about how the iterator is generally better than having to call size() on the lists. It would be really nice and enable people to implement customisations if jdom2 used the iterators rather than the indexing throughout the codebase. Is that a lot of work?    The further problem we have right now is that XMLOutputter is final so we can't trivially port our jdom1 code. Is implementing a custom XMLOutputProcessor the right place to do that? The change we'd be making is to change it to use iterators... is that something that should go into the core library?    For XMLOutputProcessor, I am looking specifically at these methods:    process(Writer,Format,Element) process(Writer,Format,List)    Is that the place to change to iterators?   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] streaming document output</header>
    <body>Hi Patrick.    OK, you have a long list of child Elements, and you generate them on-the-fly during output. You also fudge the same in JDOM 1 by using indexed access too. Now JDOM 2.x is not using the iterator.... ... OK, I see the problem. I think the right fix would be for the XMLOutputter to use the iterator (yes, they are faster in JDOM 2 than 1.x, but maybe not as fast as indexed access)....    As a side note, yes, XMLOutputter is final, by design. The bulk of the logic is 'exported' to the interface XMLOutputProcessor, and there's a 'nearly' concrete implementation of that -  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/org/jdom2/output/support/AbstractXMLOutputProcessor.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/org/jdom2/output/support/AbstractXMLOutputProcessor.html &lt;/a&gt;  - read the comments. If a fix for the core JDOM code is not enough, you will likely want to extend the AbstractXMLOutputProcessor and override printElement(...).    I wrote a little blurb on why I changed the XMLOutputter to be final here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-Outputter-Updates" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-Outputter-Updates &lt;/a&gt;   Let me inspect the code for where you believe the index-based lookups are.... if you have a pointer for where I should start that will help.... Ahh, it's in the Walker classes... that is a little bit 'hairy'. Let me play with it a little bit.    Rolf    On 11/04/2013 1:29 PM, Patrick Dowler wrote:   &lt;div class="quote quote-1"&gt;   We have a few web services that send XML documents in the response. The documents can be large and when they are there is always one spot where there is an arbitrarily long list of child elements.    With jdom1 we had implemented a subclass of Element for the element with the long list of child elements and then had the iterator over that list dynamically generate the children. Since the XMLOutputter used indexed access rather than the iterator, we also had to subclass it and override the list access. That works fine at the time.    No we are porting to jdom2 and I see that the outputter still uses indexed access; that is a shame given all the comments in the code about how the iterator is generally better than having to call size() on the lists. It would be really nice and enable people to implement customisations if jdom2 used the iterators rather than the indexing throughout the codebase. Is that a lot of work?    The further problem we have right now is that XMLOutputter is final so we can't trivially port our jdom1 code. Is implementing a custom XMLOutputProcessor the right place to do that? The change we'd be making is to change it to use iterators... is that something that should go into the core library?    For XMLOutputProcessor, I am looking specifically at these methods:    process(Writer,Format,Element) process(Writer,Format,List)    Is that the place to change to iterators?   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] streaming document output</header>
    <body>We have a few web services that send XML documents in the response. The documents can be large and when they are there is always one spot where there is an arbitrarily long list of child elements.    With jdom1 we had implemented a subclass of Element for the element with the long list of child elements and then had the iterator over that list dynamically generate the children. Since the XMLOutputter used indexed access rather than the iterator, we also had to subclass it and override the list access. That works fine at the time.    No we are porting to jdom2 and I see that the outputter still uses indexed access; that is a shame given all the comments in the code about how the iterator is generally better than having to call size() on the lists. It would be really nice and enable people to implement customisations if jdom2 used the iterators rather than the indexing throughout the codebase. Is that a lot of work?    The further problem we have right now is that XMLOutputter is final so we can't trivially port our jdom1 code. Is implementing a custom XMLOutputProcessor the right place to do that? The change we'd be making is to change it to use iterators... is that something that should go into the core library?    For XMLOutputProcessor, I am looking specifically at these methods:    process(Writer,Format,Element) process(Writer,Format,List)    Is that the place to change to iterators?   &lt;div class="footer noise"&gt;  --   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Validate XML by XSD failes with jDOM and Xerces 2.10.0</header>
    <body>Hi list,     I've got a problem validating a xml by a xsd.    A short preview about the xsd:             Ok, my XML file looks like this:    ...    Now I try to validate this with jDOM by using xerces. Then I got the following error: - Error on line 6: cvc-complex-type.3.2.2: Attribute "MyAttribute" must not occur in element "MyType2".    I configured jDOM1 to use xerces: SAXBuilder builder = new    I validated the same xml with the same xsd with oXygen (which also uses xerces) and with some online validators. All told me that the xml is valid.    So my question is, why does the JAVA implementation gives tells me that the xml is not valid.    I'm grateful for some hints.    Thanks!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] SIGSEGV (segmentation fault) error occurred during init a JDOM element</header>
    <body>Tecnically *all* SIG* issues are jvm related (unless you use jni...). It should &lt;br/&gt; not be possible for JDOM to generate a signal issue.    Is it reliably reproducable, or was it a one-off?    Rolf    &lt;span&gt; kroy &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yahoo.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    Thank you for your quick update. Initially I also thought that It's related to &lt;br/&gt; perm gen space related error. But in the logs I didn't find &lt;br/&gt; “java.lang.OutOfMemoryError: PermGen space” error and Problematic frame was J &lt;br/&gt; (Crash in Compiled Code) in the logs.     Is the problem is related to JVM or have memory restrictions to reserve more &lt;br/&gt; memory to perm gen?    Krish.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] SIGSEGV (segmentation fault) error occurred during init a JDOM element</header>
    <body>Hi Rolf,     Thank you for your quick update. Initially I also thought that It's related to &lt;br/&gt; perm gen space related error. But in the logs I didn't find &lt;br/&gt; “java.lang.OutOfMemoryError: PermGen space” error and Problematic frame was J &lt;br/&gt; (Crash in Compiled Code) in the logs.     Is the problem is related to JVM or have memory restrictions to reserve more &lt;br/&gt; memory to perm gen?    Krish.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; Subject: Re: [jdom-interest] SIGSEGV (segmentation fault) error occurred during &lt;br/&gt; init a JDOM element &lt;span&gt; kroy &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yahoo.com &lt;/span&gt; &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; Date: Tuesday, February 26, 2013, 6:55 AM    Hi Krish.    This problem is almost certainly not related directly to JDOM. PermGen space is typically very small, and only used for two common purposes:     - storing class definitions     - storing String constants     For your interest, the most common causes of PermGen Exhaustion that I know of are:    - using Tomcat and loading/unloading servlets - each 'classloader' has it's own space in PermGen, and since each servlet has it's own classloader the PermGen fills up fast because so many classes are duplicated in different places in PermGen    - Using lots of String.intern() calls - String.intern() uses a String constant reference from PermGen (or creates one if there was not one already). If you have many calls to String.intern() it can fill up PermGen very fast. JDOM does not do String.intern()    Rolf    On 25/02/2013 1:30 AM, Krishnendu Roy Chowdhury wrote:    HI!    I have faced a problem related to segmentation fault in Linux box. I got following error -       J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V    ...    siginfo:si_signo=SIGSEGV: si_errno=0, si_code=2 (SEGV_ACCERR), si_addr=0x00002aab2ac30000 .................................... error  occurred during error reporting (printing native stack), id 0xb       It is also shows in the log that 100% use of PermGen space. Why this segmentation fault occurred? Is it related to JDK or JDOM?    In my understanding, problem is related to JDK and occurred due to 100% use of PermGen space. But I am not sure as Problematic frame is J.    Another interesting point is "error occurred during error reporting (printing native stack), id 0xb".    I am using JDK6up20 and Linux environment. Please find attached logs for details.   Please help me.     Regards,    Krish    _______________________________________________ To control your jdom-interest membership: http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] SIGSEGV (segmentation fault) error occurred during init a JDOM element</header>
    <body>Hi Krish.    This problem is almost certainly not related directly to JDOM. PermGen space is typically very small, and only used for two common purposes: - storing class definitions - storing String constants    For your interest, the most common causes of PermGen Exhaustion that I know of are:    - using Tomcat and loading/unloading servlets - each 'classloader' has it's own space in PermGen, and since each servlet has it's own classloader the PermGen fills up fast because so many classes are duplicated in different places in PermGen - Using lots of String.intern() calls - String.intern() uses a String constant reference from PermGen (or creates one if there was not one already). If you have many calls to String.intern() it can fill up PermGen very fast. JDOM does not do String.intern()    Rolf    On 25/02/2013 1:30 AM, Krishnendu Roy Chowdhury wrote:   &lt;div class="quote quote-1"&gt;   HI!    I have faced a problem related to segmentation fault in Linux box. I got following error -    J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V ... siginfo:si_signo=SIGSEGV: si_errno=0, si_code=2 (SEGV_ACCERR), si_addr=0x00002aab2ac30000    ....................................    error  occurred during error reporting (printing native stack), id 0xb    It is also shows in the log that 100% use of PermGen space. Why this segmentation fault occurred? Is it related to JDK or JDOM?    In my understanding, problem is related to JDK and occurred due to 100% use of PermGen space. But I am not sure as Problematic frame is J.    Another interesting point is "error occurred during error reporting (printing native stack), id 0xb".    I am using JDK6up20 and Linux environment. Please find attached logs for details.    Please help me.</body>
  </mail>
  <mail>
    <header>[jdom-interest] SIGSEGV (segmentation fault) error occurred during init a JDOM element</header>
    <body>HI!    I have faced a problem related to segmentation fault in Linux box. I got following error -    J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V ... siginfo:si_signo=SIGSEGV: si_errno=0, si_code=2 (SEGV_ACCERR), si_addr=0x00002aab2ac30000 .................................... error  occurred during error reporting (printing native stack), id 0xb    It is also shows in the log that 100% use of PermGen space. Why this segmentation fault occurred? Is it related to JDK or JDOM?    In my understanding, problem is related to JDK and occurred due to 100% use of PermGen space. But I am not sure as Problematic frame is J.    Another interesting point is "error occurred during error reporting (printing native stack), id 0xb".    I am using JDK6up20 and Linux environment. Please find attached logs for details.   Please help me.     Regards, Krish     ****************************** Logs &lt;br/&gt; ***************************************************************************************** [myapps@mynbl01 batch]$ cat &lt;br/&gt; GVNSV1050D0_20130218_180109_mynbl01.12264.service.log    ________________________________________ Running My Console Application    ________________________________________    Using My Home [/opt/myapps/nyc/bin] Using My Run Home [/opt/myapps/nyc/bin] Using Java executable [/usr/java/latest/bin/java]    Monitor Service initializing..... Monitor Service started... # # A fatal error has been detected by the Java Runtime Environment: # # SIGSEGV (0xb) at pc=0x00002aaaab404284, pid=13019, tid=1113000256 # # JRE version: 6.0_20-b02 # Java VM: Java HotSpot(TM) 64-Bit Server VM (16.3-b01 mixed mode linux-amd64 ) # Problematic frame: # J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V # # An error report file with more information is saved as: # /home/myapps/hs_err_pid13019.log # # If you would like to submit a bug report, please visit: # &lt;a class="exlink mklink" href="http://java.sun.com/webapps/bugreport/crash.jsp" rel="nofollow"&gt; http://java.sun.com/webapps/bugreport/crash.jsp &lt;/a&gt;  # &lt;br/&gt; &lt;br/&gt; [myapps@mynbl01 batch]$ cat /home/myapps/hs_err_pid13019.log # # A fatal error has been detected by the Java Runtime Environment: # # SIGSEGV (0xb) at pc=0x00002aaaab404284, pid=13019, tid=1113000256 # # JRE version: 6.0_20-b02 # Java VM: Java HotSpot(TM) 64-Bit Server VM (16.3-b01 mixed mode linux-amd64 ) # Problematic frame: # J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V # # If you would like to submit a bug report, please visit: # &lt;a class="exlink mklink" href="http://java.sun.com/webapps/bugreport/crash.jsp" rel="nofollow"&gt; http://java.sun.com/webapps/bugreport/crash.jsp &lt;/a&gt;  #    ________________________________________ T H R E A D    ________________________________________    Current thread (0x000000004596b000): JavaThread "Thread-9" [_thread_in_Java, &lt;br/&gt; id=13598, stack(0x0000000042470000,0x0000000042571000)]    siginfo:si_signo=SIGSEGV: si_errno=0, si_code=2 (SEGV_ACCERR), &lt;br/&gt; si_addr=0x00002aab2ac30000    Registers: RAX=0x0000000000000001, RBX=0x00002aab29040eb0, RCX=0x0000000000000008, &lt;br/&gt; RDX=0x0000000000000004 RSP=0x000000004256f128, RBP=0x00002a95d8c8f000, RSI=0x00002aab2ac2fff8, &lt;br/&gt; RDI=0x00002aab29040ec8 R8 =0x0000000000000014, R9 =0x0000000000000013, R10=0x00002aab2ac2ff98, &lt;br/&gt; R11=0x0000000000000014 R12=0x00002aab2ab9b270, R13=0x000000004256f190, R14=0x000000004256f210, &lt;br/&gt; R15=0x000000004596b000 RIP=0x00002aaaab404284, EFL=0x0000000000010202, CSGSFS=0x0000000000000033, &lt;br/&gt; ERR=0x0000000000000004 TRAPNO=0x000000000000000e    Top of Stack: (sp=0x000000004256f128) 0x000000004256f128: 0000000000000001 00002aab29040ec8 0x000000004256f138: 00002aab2ac2ffd8 00002aab2ac2ff98 0x000000004256f148: 00002aaaaf713a90 000000004596b798 0x000000004256f158: 000000004596b7b8 0000000000000040 0x000000004256f168: 000000004256f200 000000004256f1e8 0x000000004256f178: 00002aaaab145a42 0000000045844640 0x000000004256f188: 00002aaaab145a42 00002aab2ac2ff98 0x000000004256f198: 00002aaaaf713a90 00002aaaaf713a90 0x000000004256f1a8: 000000004256f1a8 00002aab2a7420ab 0x000000004256f1b8: 000000004256f210 00002aab2a743b50 0x000000004256f1c8: 00002aab2aaa9458 00002aab2a742100 0x000000004256f1d8: 000000004256f190 000000004256f200 0x000000004256f1e8: 000000004256f258 00002aaaab145a42 0x000000004256f1f8: 0000000000000000 00002aab2a7902f8 0x000000004256f208: 00002aab2ac2ff98 00002aaaaf712c98 0x000000004256f218: 000000004256f218 00002aab2ab9dad4 0x000000004256f228: 000000004256f2a0 00002aab2ac2c738 0x000000004256f238: 0000000000000000 00002aab2ab9dc68 0x000000004256f248: 000000004256f200 000000004256f298 0x000000004256f258: 000000004256f2e8 00002aaaab1458e9 0x000000004256f268: 0000000000000000 00002aaaaf713288 0x000000004256f278: 00002aaaaf712d50 00002aaaaf712c98 0x000000004256f288: 00002aaaaf529658 00002aaaaf70ba18 0x000000004256f298: 00002aaaaf5291b8 00002aaaaf704b80 0x000000004256f2a8: 000000004256f2a8 00002aab2ab9d3c4 0x000000004256f2b8: 000000004256f340 00002aab2ac2c738 0x000000004256f2c8: 0000000000000000 00002aab2ab9d570 0x000000004256f2d8: 000000004256f298 000000004256f340 0x000000004256f2e8: 000000004256f388 00002aaaab1458e9 0x000000004256f2f8: 0000000000000000 0000000000000000 0x000000004256f308: 0000000000000000 0000000000000000 0x000000004256f318: 00002aaaaf5291b8 00002aaaaf70b9f0    Instructions: (pc=0x00002aaaab404284) 0x00002aaaab404274: 48 83 c2 08 48 83 ee 10 48 83 ea 08 48 83 c6 10 0x00002aaaab404284: 66 0f 3a 61 06 0d 77 f0 73 4f 2b d1 3b d0 78 49    Stack: [0x0000000042470000,0x0000000042571000], sp=0x000000004256f128, free &lt;br/&gt; space=3fc0000000000000018k Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code) J org.jdom.Element.&amp;lt;init&amp;gt;(Ljava/lang/String;)V    [error occurred during error reporting (printing native stack), id 0xb]    ________________________________________ P R O C E S S    ________________________________________    Java Threads: ( =&amp;gt; current thread ) 0x000000004598b800 JavaThread "PoolScavenger0" daemon [_thread_blocked, &lt;br/&gt; id=13612, stack(0x0000000042571000,0x0000000042672000)] =&amp;gt;0x000000004596b000 JavaThread "Thread-9" [_thread_in_Java, id=13598, &lt;br/&gt; stack(0x0000000042470000,0x0000000042571000)] 0x0000000045843000 JavaThread "Thread-8" daemon [_thread_blocked, id=13597, &lt;br/&gt; stack(0x000000004236f000,0x0000000042470000)] 0x0000000045c6e000 JavaThread "RMI Reaper" [_thread_blocked, id=13583, &lt;br/&gt; stack(0x000000004216d000,0x000000004226e000)] 0x0000000045dd7800 JavaThread "RMI TCP Accept-0" daemon [_thread_in_native, &lt;br/&gt; id=13582, stack(0x0000000041b83000,0x0000000041c84000)] 0x0000000045cc5000 JavaThread "GC Daemon" daemon [_thread_blocked, id=13573, &lt;br/&gt; stack(0x0000000041a82000,0x0000000041b83000)] 0x0000000045e55000 JavaThread "RMI Scheduler(0)" daemon [_thread_blocked, &lt;br/&gt; id=13571, stack(0x00000000412e6000,0x00000000413e7000)] 0x0000000045f81800 JavaThread "Thread-5" daemon [_thread_blocked, id=13399, &lt;br/&gt; stack(0x00000000411e5000,0x00000000412e6000)] 0x0000000045f80800 JavaThread "Thread-6" daemon [_thread_blocked, id=13398, &lt;br/&gt; stack(0x0000000040f1e000,0x000000004101f000)] 0x0000000045943800 JavaThread "Thread-4" daemon [_thread_blocked, id=13396, &lt;br/&gt; stack(0x000000004075a000,0x000000004085b000)] 0x000000004577c800 JavaThread "Thread-3" daemon [_thread_in_native, id=13395, &lt;br/&gt; stack(0x00000000404c0000,0x00000000405c1000)] 0x000000004584b800 JavaThread "Thread-2" daemon [_thread_blocked, id=13394, &lt;br/&gt; stack(0x0000000040a5e000,0x0000000040b5f000)] 0x00000000459d4000 JavaThread "Thread-1" daemon [_thread_in_native, id=13393, &lt;br/&gt; stack(0x00000000401de000,0x00000000402df000)] 0x0000000045723000 JavaThread "Low Memory Detector" daemon [_thread_blocked, &lt;br/&gt; id=13309, stack(0x0000000041f6b000,0x000000004206c000)] 0x0000000045721000 JavaThread "CompilerThread1" daemon [_thread_blocked, &lt;br/&gt; id=13294, stack(0x0000000041e6a000,0x0000000041f6b000)] 0x000000004571c800 JavaThread "CompilerThread0" daemon [_thread_blocked, &lt;br/&gt; id=13283, stack(0x0000000041d69000,0x0000000041e6a000)] 0x000000004571a800 JavaThread "Signal Dispatcher" daemon [_thread_blocked, &lt;br/&gt; id=13273, stack(0x00000000416c0000,0x00000000417c1000)] 0x00000000456f7000 JavaThread "Finalizer" daemon [_thread_blocked, id=13180, &lt;br/&gt; stack(0x00000000415bf000,0x00000000416c0000)] 0x00000000456f5000 JavaThread "Reference Handler" daemon [_thread_blocked, &lt;br/&gt; id=13174, stack(0x0000000040659000,0x000000004075a000)] 0x000000004569d000 JavaThread "main" [_thread_blocked, id=13020, &lt;br/&gt; stack(0x00000000410e4000,0x00000000411e5000)]    Other Threads: 0x00000000456f0800 VMThread [stack: 0x00000000403bf000,0x00000000404c0000] &lt;br/&gt; [id=13163] 0x0000000045726800 WatcherThread [stack: 0x000000004206c000,0x000000004216d000] &lt;br/&gt; [id=13317]    VM state:not at safepoint (normal execution)    VM Mutex/Monitor currently owned by a thread: None    Heap def new generation total 37824K, used 26322K [0x00002aaaae200000, &lt;br/&gt; 0x00002aaab0b00000, 0x00002aaad70a0000) eden space 33664K, 65% used [0x00002aaaae200000, 0x00002aaaaf7a4be0, &lt;br/&gt; 0x00002aaab02e0000) from space 4160K, 99% used [0x00002aaab06f0000, 0x00002aaab0affff8, &lt;br/&gt; 0x00002aaab0b00000) to space 4160K, 0% used [0x00002aaab02e0000, 0x00002aaab02e0000, &lt;br/&gt; 0x00002aaab06f0000) tenured generation total 83840K, used 17652K [0x00002aaad70a0000, &lt;br/&gt; 0x00002aaadc280000, 0x00002aab28e00000) the space 83840K, 21% used [0x00002aaad70a0000, 0x00002aaad81dd110, &lt;br/&gt; 0x00002aaad81dd200, 0x00002aaadc280000) compacting perm gen total 30912K, used 30912K [0x00002aab28e00000, &lt;br/&gt; 0x00002aab2ac30000, 0x00002aab2e200000) the space 30912K, 100% used [0x00002aab28e00000, 0x00002aab2ac30000, &lt;br/&gt; 0x00002aab2ac30000, 0x00002aab2ac30000) No shared spaces configured.    Dynamic libraries: 40000000-40009000 r-xp 00000000 fd:00 527191 /usr/java/jdk1.6.0_20/bin/java 40108000-4010a000 rwxp 00008000 fd:00 527191 /usr/java/jdk1.6.0_20/bin/java 45691000-46e0a000 rwxp 45691000 00:00 0 [heap] 3422200000-342221c000 r-xp 00000000 fd:00 1833565 /lib64/ld-2.5.so 342241b000-342241c000 r-xp 0001b000 fd:00 1833565 /lib64/ld-2.5.so 342241c000-342241d000 rwxp 0001c000 fd:00 1833565 /lib64/ld-2.5.so 3422600000-342274e000 r-xp 00000000 fd:00 1833566 /lib64/libc-2.5.so 342274e000-342294d000 ---p 0014e000 fd:00 1833566 /lib64/libc-2.5.so 342294d000-3422951000 r-xp 0014d000 fd:00 1833566 /lib64/libc-2.5.so 3422951000-3422952000 rwxp 00151000 fd:00 1833566 /lib64/libc-2.5.so 3422952000-3422957000 rwxp 3422952000 00:00 0 3422a00000-3422a02000 r-xp 00000000 fd:00 1833567 /lib64/libdl-2.5.so 3422a02000-3422c02000 ---p 00002000 fd:00 1833567 /lib64/libdl-2.5.so 3422c02000-3422c03000 r-xp 00002000 fd:00 1833567 /lib64/libdl-2.5.so 3422c03000-3422c04000 rwxp 00003000 fd:00 1833567 /lib64/libdl-2.5.so 3422e00000-3422e82000 r-xp 00000000 fd:00 1833433 /lib64/libm-2.5.so 3422e82000-3423081000 ---p 00082000 fd:00 1833433 /lib64/libm-2.5.so 3423081000-3423082000 r-xp 00081000 fd:00 1833433 /lib64/libm-2.5.so 3423082000-3423083000 rwxp 00082000 fd:00 1833433 /lib64/libm-2.5.so 3423200000-3423216000 r-xp 00000000 fd:00 1833427 /lib64/libpthread-2.5.so 3423216000-3423415000 ---p 00016000 fd:00 1833427 /lib64/libpthread-2.5.so 3423415000-3423416000 r-xp 00015000 fd:00 1833427 /lib64/libpthread-2.5.so 3423416000-3423417000 rwxp 00016000 fd:00 1833427 /lib64/libpthread-2.5.so 3423417000-342341b000 rwxp 3423417000 00:00 0 3423a00000-3423a07000 r-xp 00000000 fd:00 1833572 /lib64/librt-2.5.so 3423a07000-3423c07000 ---p 00007000 fd:00 1833572 /lib64/librt-2.5.so 3423c07000-3423c08000 r-xp 00007000 fd:00 1833572 /lib64/librt-2.5.so 3423c08000-3423c09000 rwxp 00008000 fd:00 1833572 /lib64/librt-2.5.so 3426200000-3426215000 r-xp 00000000 fd:00 1833511 /lib64/libnsl-2.5.so 3426215000-3426414000 ---p 00015000 fd:00 1833511 /lib64/libnsl-2.5.so 3426414000-3426415000 r-xp 00014000 fd:00 1833511 /lib64/libnsl-2.5.so 3426415000-3426416000 rwxp 00015000 fd:00 1833511 /lib64/libnsl-2.5.so 3426416000-3426418000 rwxp 3426416000 00:00 0 2aaaaaaab000-2aaaaaaad000 r-xs 0000c000 fd:00 2914785 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/activation-1.0.2.jar 2aaaaaaad000-2aaaaaab8000 r-xs 000aa000 fd:00 2914764 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/ant-1.5.3-1.jar 2aaaaaab8000-2aaaaaabd000 r-xs 00053000 fd:00 2914813 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/antlr-2.7.2.jar 2aaaaaabd000-2aaaaaac0000 r-xs 00013000 fd:00 428220 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/jce.jar 2aaaaaac1000-2aaaaaace000 r-xp 00000000 fd:00 428188 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libverify.so 2aaaaaace000-2aaaaabcd000 ---p 0000d000 fd:00 428188 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libverify.so 2aaaaabcd000-2aaaaabd0000 rwxp 0000c000 fd:00 428188 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libverify.so 2aaaaabd0000-2aaaaabf9000 r-xp 00000000 fd:00 428196 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libjava.so 2aaaaabf9000-2aaaaacf8000 ---p 00029000 fd:00 428196 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libjava.so 2aaaaacf8000-2aaaaacff000 rwxp 00028000 fd:00 428196 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libjava.so 2aaaaacff000-2aaaaad00000 r-xp 2aaaaacff000 00:00 0 2aaaaad00000-2aaaaad01000 rwxp 2aaaaad00000 00:00 0 2aaaaad01000-2aaaaad08000 r-xp 00000000 fd:00 428171 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/native_threads/libhpi.so 2aaaaad08000-2aaaaae09000 ---p 00007000 fd:00 428171 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/native_threads/libhpi.so 2aaaaae09000-2aaaaae0b000 rwxp 00008000 fd:00 428171 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/native_threads/libhpi.so 2aaaaae0b000-2aaaaae0c000 rwxp 2aaaaae0b000 00:00 0 2aaaaae0c000-2aaaaae14000 rwxs 00000000 fd:00 1440464 &lt;br/&gt; /tmp/hsperfdata_myapps/13019 2aaaaae14000-2aaaaae19000 r-xs 00018000 fd:00 2914817 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/aspectjrt-1.6.2.jar 2aaaaae19000-2aaaaae1f000 r-xs 00092000 fd:00 428219 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/jsse.jar 2aaaaae21000-2aaaaae2b000 r-xp 00000000 fd:00 1833242 /lib64/libnss_files-2.5.so 2aaaaae2b000-2aaaab02a000 ---p 0000a000 fd:00 1833242 /lib64/libnss_files-2.5.so 2aaaab02a000-2aaaab02b000 r-xp 00009000 fd:00 1833242 /lib64/libnss_files-2.5.so 2aaaab02b000-2aaaab02c000 rwxp 0000a000 fd:00 1833242 /lib64/libnss_files-2.5.so 2aaaab02c000-2aaaab03a000 r-xp 00000000 fd:00 428198 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libzip.so 2aaaab03a000-2aaaab13c000 ---p 0000e000 fd:00 428198 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libzip.so 2aaaab13c000-2aaaab13f000 rwxp 00010000 fd:00 428198 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libzip.so 2aab2e8e3000-2aab2ea79000 r-xs 02fd0000 fd:00 428225 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/rt.jar 2aab2ea79000-2aab2eaac000 rwxp 2aab2ea79000 00:00 0 2aab2eaac000-2aab2eb0f000 r-xs 007eb000 fd:00 2914818 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/aspectjtools-1.6.2.jar 2aab2eb0f000-2aab2eb11000 r-xs 00007000 fd:00 2914765 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/avalon-framework-api-4.2.0.jar 2aab2eb11000-2aab2eb13000 r-xs 0000d000 fd:00 2914766 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/avalon-framework-impl-4.2.0.jar 2aab2eb13000-2aab2eb1b000 r-xs 00077000 fd:00 2914767 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-awt-util-1.5.jar 2aab2eb1b000-2aab2eb21000 r-xs 00035000 fd:00 2914768 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-bridge-1.5.jar 2aab2eb21000-2aab2eb26000 r-xs 0000e000 fd:00 2914769 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-ext-1.5.jar 2aab2eb26000-2aab2eb2a000 r-xs 00020000 fd:00 2914770 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-gvt-1.5.jar 2aab2eb2a000-2aab2eb35000 r-xs 00052000 fd:00 2914771 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-svg-dom-1.5.jar 2aab2eb35000-2aab2eb38000 r-xs 00010000 fd:00 2914772 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/batik-util-1.5.jar 2aab2eb38000-2aab2eb3a000 r-xs 00021000 fd:00 2914774 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/bsh-core-2.0b2.jar 2aab2eb3a000-2aab2eb3f000 r-xs 0002a000 fd:00 2914775 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-beanutils-1.7.0.jar 2aab2eb3f000-2aab2eb41000 r-xs 00006000 fd:00 2914777 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-cli-1.0.jar 2aab2eb41000-2aab2eb4e000 r-xs 0007c000 fd:00 2914779 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-collections-3.1.jar 2aab2eb4e000-2aab2eb50000 r-xs 00005000 fd:00 2914780 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-dbutils-1.0.jar 2aab2eb50000-2aab2eb53000 r-xs 00018000 fd:00 2914781 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-digester-1.5.jar 2aab2eb53000-2aab2eb56000 r-xs 0000f000 fd:00 2914783 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-discovery-0.2.jar 2aab2eb56000-2aab2eb57000 r-xs 00005000 fd:00 2914784 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-email-1.0.jar 2aab2eb57000-2aab2eb59000 r-xs 00004000 fd:00 2914786 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-fileupload-1.0.jar 2aab2eb59000-2aab2eb5c000 r-xs 00018000 fd:00 2914787 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-io-1.4.jar 2aab2eb5c000-2aab2eb60000 r-xs 0002f000 fd:00 2914778 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-lang-2.1.jar 2aab2eb60000-2aab2eb62000 r-xs 0000d000 fd:00 2914776 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-logging-1.1.1.jar 2aab2eb62000-2aab2eb64000 r-xs 00009000 fd:00 2914788 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-pool-1.2.jar 2aab2eb64000-2aab2eb6d000 r-xs 00037000 fd:00 2914790 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-primitives-1.0.jar 2aab2eb6d000-2aab2eb6f000 r-xs 00013000 fd:00 2914791 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/commons-validator-1.1.3-dev.jar 2aab2eb6f000-2aab2eb72000 r-xs 00007000 fd:00 2914819 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/connector-api-1.0.jar 2aab2eb72000-2aab2eb7a000 r-xs 0006f000 fd:00 2914815 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/dom4j-1.4-dev-8.jar 2aab2eb7a000-2aab2eb83000 r-xs 00050000 fd:00 2914853 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/google-collect-snapshot-20071022.jar 2aab2eb83000-2aab2eb94000 r-xs 00136000 fd:00 2914795 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/itext-1.4.2.jar 2aab2eb94000-2aab2eb98000 r-xs 00031000 fd:00 2914820 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jai-codec-1.0.jar 2aab2eb98000-2aab2ebab000 r-xs 0016e000 fd:00 2914821 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jai-core-1.0.jar 2aab2ebab000-2aab2ebb1000 r-xs 00036000 fd:00 2914814 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jaxen-1.1-beta-4.jar 2aab2ebb1000-2aab2ebb3000 r-xs 00022000 fd:00 2914797 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jdom-b10.jar 2aab2ebb3000-2aab2ebbc000 r-xs 00068000 fd:00 2914823 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jimi-1.0.jar 2aab2ebbc000-2aab2ebbe000 r-xs 00005000 fd:00 2914796 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jms-1.1.jar 2aab2ebbe000-2aab2ebc0000 r-xs 00001000 fd:00 2914799 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jta-1.0.1B.jar 2aab2ebc0000-2aab2ebcb000 r-xs 000a5000 fd:00 2914798 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/jxl-1.0.jar 2aab2ebcb000-2aab2ebd4000 r-xs 0006f000 fd:00 2914807 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/log4j-1.2.17.jar 2aab2ebd4000-2aab2ebda000 r-xs 00051000 fd:00 2914801 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/mail-1.3.3_01.jar 2aab2ebda000-2aab2ebde000 r-xs 00029000 fd:00 2914800 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/mailapi-1.3.3_01.jar 2aab2ebde000-2aab2ebe1000 r-xs 00047000 fd:00 2914792 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/mq-5.300-j530-L021008.jar 2aab2ebe1000-2aab2ebe2000 r-xs 00009000 fd:00 2914793 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/mqbind-5.300-j530-L021008.jar 2aab2ebe2000-2aab2ebf3000 r-xs 0013e000 fd:00 2914794 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/mqjms-5.300-j530-L021008.jar 2aab2ebf3000-2aab2ec05000 r-xs 001f2000 fd:00 2914802 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/ojdbc16-11.2.0.1.0.jar 2aab2ec05000-2aab2ec06000 r-xs 0000b000 fd:00 2914803 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/ons-1.0.jar 2aab2ec06000-2aab2ec0d000 r-xs 0018e000 fd:00 2914804 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/orai18n-11.2.0.1.0.jar 2aab2ec0d000-2aab2ec28000 r-xs 00142000 fd:00 2914808 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/poi-3.2-FINAL-20081019.jar 2aab2ec28000-2aab2ec2a000 r-xs 0001d000 fd:00 2914822 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/pwcrules-1.0.jar 2aab2ec2a000-2aab2ec2c000 r-xs 00005000 fd:00 2914809 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/regexp-1.3.jar 2aab2ec2c000-2aab2ec35000 r-xs 0007a000 fd:00 2914810 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/repro-1.1.jar 2aab2ec35000-2aab2ec3e000 r-xs 000a2000 fd:00 2914811 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/repro-chart-1.0.jar 2aab2ec3e000-2aab2ec56000 r-xs 0017a000 fd:00 2914812 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/repro-fop-1.0.jar 2aab2ec56000-2aab2ec57000 r-xs 0000c000 fd:00 2914824 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-asm-3.0.0.RELEASE.jar 2aab2ec57000-2aab2ec62000 r-xs 0007c000 fd:00 2914825 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-beans-3.0.0.RELEASE.jar 2aab2ec62000-2aab2ec73000 r-xs 00090000 fd:00 2914827 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-context-3.0.0.RELEASE.jar 2aab2ec73000-2aab2ec7b000 r-xs 00050000 fd:00 2914826 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-core-3.0.0.RELEASE.jar 2aab2ec7b000-2aab2ec7f000 r-xs 00022000 fd:00 2914828 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-expression-3.0.0.RELEASE.jar 2aab2ec7f000-2aab2ec88000 r-xs 0004f000 fd:00 2914829 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-web-3.0.0.RELEASE.jar 2aab2ec88000-2aab2ec90000 r-xs 00057000 fd:00 2914830 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/spring-webmvc-3.0.0.RELEASE.jar 2aab2ec90000-2aab2ec98000 r-xs 00051000 fd:00 2914773 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/velocity-1.4.jar 2aab2ec98000-2aab2ecbd000 r-xs 002dc000 fd:00 2914816 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/xalan-2.6.0.jar 2aab2ecbd000-2aab2ecbf000 r-xs 0002a000 fd:00 2914805 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/xdb-10.2.0.1.jar 2aab2eda0000-2aab2edb4000 r-xs 000e3000 fd:00 2914789 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/xercesImpl-2.6.2.jar 2aab2edb4000-2aab2edb9000 r-xs 00016000 fd:00 2914782 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/xml-apis-1.0.b2.jar 2aab2edb9000-2aab2edc6000 r-xs 00108000 fd:00 2914806 &lt;br/&gt; /opt/myapps/nyc/bin/CONSOLE-INF/lib/xmlparserv3-10.2.0.1.jar 2aab2edc6000-2aab2ee25000 r-xs 00ba5000 fd:00 623619 &lt;br/&gt; /usr/java/jdk1.6.0_20/lib/tools.jar 2aab2ee25000-2aab2ee2c000 r-xs 00111000 fd:00 428161 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/resources.jar 2aab2ee2c000-2aab2ee32000 r-xp 00000000 fd:00 428205 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libmanagement.so 2aab2ee32000-2aab2ef31000 ---p 00006000 fd:00 428205 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libmanagement.so 2aab2ef31000-2aab2ef33000 rwxp 00005000 fd:00 428205 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libmanagement.so 2aab2ef33000-2aab2ef46000 r-xp 00000000 fd:00 428189 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libnet.so 2aab2ef46000-2aab2f047000 ---p 00013000 fd:00 428189 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libnet.so 2aab2f047000-2aab2f04a000 rwxp 00014000 fd:00 428189 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/libnet.so 2aab2f04a000-2aab2f04d000 r-xs 00027000 fd:00 493284 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/ext/sunjce_provider.jar 2aab2f04d000-2aab2f04e000 r-xp 00000000 fd:00 428201 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/librmi.so 2aab2f04e000-2aab2f14d000 ---p 00001000 fd:00 428201 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/librmi.so 2aab2f14d000-2aab2f14e000 rwxp 00000000 fd:00 428201 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/librmi.so 2aab30000000-2aab31587000 rwxp 2aab30000000 00:00 0 2aab31587000-2aab34000000 ---p 2aab31587000 00:00 0 2acd591de000-2acd591df000 rwxp 2acd591de000 00:00 0 2acd591f4000-2acd591f5000 rwxp 2acd591f4000 00:00 0 2acd591f5000-2acd591fc000 r-xp 00000000 fd:00 458315 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/jli/libjli.so 2acd591fc000-2acd592fd000 ---p 00007000 fd:00 458315 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/jli/libjli.so 2acd592fd000-2acd592ff000 rwxp 00008000 fd:00 458315 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/jli/libjli.so 2acd592ff000-2acd59301000 rwxp 2acd592ff000 00:00 0 2acd59301000-2acd59ab6000 r-xp 00000000 fd:00 428183 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/server/libjvm.so 2acd59ab6000-2acd59bb5000 ---p 007b5000 fd:00 428183 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/server/libjvm.so 2acd59bb5000-2acd59d40000 rwxp 007b4000 fd:00 428183 &lt;br/&gt; /usr/java/jdk1.6.0_20/jre/lib/amd64/server/libjvm.so 2acd59d40000-2acd59d79000 rwxp 2acd59d40000 00:00 0 7fff9ad9f000-7fff9adb5000 rwxp 7ffffffe9000 00:00 0 [stack] ffffffffff600000-ffffffffffe00000 ---p 00000000 00:00 0 [vdso] ************************************************************************************************************</body>
  </mail>
  <mail>
    <header>[jdom-interest] Connectons-nous sur LinkedIn</header>
    <body>LinkedIn    ------------    J'aimerais vous inviter à rejoindre mon réseau professionnel en ligne, sur le &lt;br/&gt; site LinkedIn.    mohammed</body>
  </mail>
  <mail>
    <header>[jdom-interest] CREATING TREE IN GUI.</header>
    <body>Hello,    I have been working with JDom for a while and  I have the following question:    I use JDom to create and read XML files. I then populate it in jjTree using &lt;br/&gt; jTree and node models. Is there a way to create a Tree in GUI without first loading the XML files in a &lt;br/&gt; tree/node models ?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] additional spaces in complex elements using PrettyFormat</header>
    <body>Thank you very much, your second solution works perfect.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  Hi  S...    If white-space is important to you you can do a number of things....    1. you can use the *raw* Format (which changes nothing) instead of the Pretty or Compact format, and then set up your JDOM content to have the right whitespace in the right places, then the Outputter with Raw formatter will not modify the whitespace (which both Pretty and Compact do). 2. if only *part* of the XML document has significant whitespace (which I think is your case), then you can use the xml:space="preserve" attribute and JDOM will not modify any whitespace in that content.    According to the normalized curve A (LA&amp;lt;sub&amp;gt;eq inter&amp;lt;/sub&amp;gt;) the values...    Rolf    On 15/01/2013 3:56 AM, SoTaNeZ wrote:    Hello.    I have some complex elements in which their texts are mixed with some HTML markup that I treat as XML elements. For example:    ------------------------------------------------------ According to the normalized curve A (LA ) the values... ------------------------------------------------------    The above example is in PrettyFormat.    My intention is to use an XSL to transform this text to HTML, keeping the HTML representation, so using "xsl:copy-of" I can copy the whole paragraph as is. The problem is that the XML elements inserted between the text are represented in a new line, so the XLT transformation adds both white spaces before and after these elements in the HTML output:    ------------------------------------------------------ According to the normalized curve A (LA eq inter ) the values... ------------------------------------------------------    when the output I want should be:    ------------------------------------------------------ According to the normalized curve A (LAeq inter) the values...    ------------------------------------------------------    I cannot use the CompactFormat, because I need these XMLs to be readable by humans.    The problem is solved if I manually place these inner XML elements in the same line with the rest of the text:    ------------------------------------------------------ According to the normalized curve A (LA&amp;lt;sub&amp;gt;eq inter&amp;lt;/sub&amp;gt;) the values... ------------------------------------------------------    Is there a way to tell JDOM to format complex XML elements (those having text and other elements) this way, or maybe other workarounds?    I prefer to avoid post-processing of the outputted XMLs files...    Thank you very much.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] additional spaces in complex elements using PrettyFormat</header>
    <body>Hi  S...    If white-space is important to you you can do a number of things....    1. you can use the *raw* Format (which changes nothing) instead of the Pretty or Compact format, and then set up your JDOM content to have the right whitespace in the right places, then the Outputter with Raw formatter will not modify the whitespace (which both Pretty and Compact do). 2. if only *part* of the XML document has significant whitespace (which I think is your case), then you can use the xml:space="preserve" attribute and JDOM will not modify any whitespace in that content.    According to the normalized curve A (LA&amp;lt;sub&amp;gt;eq inter&amp;lt;/sub&amp;gt;) the values...    Rolf    On 15/01/2013 3:56 AM, SoTaNeZ wrote:   &lt;div class="quote quote-1"&gt;  Hello.    I have some complex elements in which their texts are mixed with some HTML markup that I treat as XML elements. For example:    ------------------------------------------------------ According to the normalized curve A (LA ) the values...    ------------------------------------------------------    The above example is in PrettyFormat.    My intention is to use an XSL to transform this text to HTML, keeping the HTML representation, so using "xsl:copy-of" I can copy the whole paragraph as is. The problem is that the XML elements inserted between the text are represented in a new line, so the XLT transformation adds both white spaces before and after these elements in the HTML output:    ------------------------------------------------------ According to the normalized curve A (LA eq inter ) the values...    ------------------------------------------------------    when the output I want should be:    ------------------------------------------------------ According to the normalized curve A (LAeq inter) the values...    ------------------------------------------------------    I cannot use the CompactFormat, because I need these XMLs to be readable by humans.    The problem is solved if I manually place these inner XML elements in the same line with the rest of the text:    ------------------------------------------------------ According to the normalized curve A (LA&amp;lt;sub&amp;gt;eq inter&amp;lt;/sub&amp;gt;) the values...    ------------------------------------------------------    Is there a way to tell JDOM to format complex XML elements (those having text and other elements) this way, or maybe other workarounds?    I prefer to avoid post-processing of the outputted XMLs files...</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] additional spaces in complex elements using PrettyFormat</header>
    <body>Have you tried setting &amp;lt;xsl:output indent="no"/&amp;gt;?</body>
  </mail>
  <mail>
    <header>[jdom-interest] additional spaces in complex elements using PrettyFormat</header>
    <body>Hello.    I have some complex elements in which their texts are mixed with some HTML markup that I treat as XML elements. For example:    ------------------------------------------------------ According to the normalized curve A (LA ) the values...    ------------------------------------------------------    The above example is in PrettyFormat.    My intention is to use an XSL to transform this text to HTML, keeping the HTML representation, so using "xsl:copy-of" I can copy the whole paragraph as is. The problem is that the XML elements inserted between the text are represented in a new line, so the XLT transformation adds both white spaces before and after these elements in the HTML output:    ------------------------------------------------------ According to the normalized curve A (LA eq inter ) the values...    ------------------------------------------------------    when the output I want should be:    ------------------------------------------------------ According to the normalized curve A (LAeq inter) the values...    ------------------------------------------------------    I cannot use the CompactFormat, because I need these XMLs to be readable by humans.    The problem is solved if I manually place these inner XML elements in the same line with the rest of the text:    ------------------------------------------------------ According to the normalized curve A (LA&amp;lt;sub&amp;gt;eq inter&amp;lt;/sub&amp;gt;) the values...    ------------------------------------------------------    Is there a way to tell JDOM to format complex XML elements (those having text and other elements) this way, or maybe other workarounds?    I prefer to avoid post-processing of the outputted XMLs files...    Thank you very much.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] EscapeStrategy for in-text html tags not working</header>
    <body>Thank you both of you for your answers.    &lt;span&gt; mik &lt;a class="email mklink"&gt; ... &lt;/a&gt; @mitre.org &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  Hi Rolf,****    ** **    Although you are technically right that we should always generate socially acceptable xml, I would like to add some caveats to your response.****    ** **    First, not all html can be translated to xhtml (for example, the html attribute “target” to generate a popup).****    ** **    Second, there are many workarounds needed (for example, &amp;amp;nbsp and other symbols don’t exist in xhtml due to unfortunate choices of version numbers of included documents in the standards).****    ** **    Third, you don’t always have control over how the process using your xml will parse it, if at all.****    ** **    Fourth, xml is often the lowest or second lowest protocol in a large number of protocols (for example, a URI inside a javascript string inside a javascript block inside an xhtml, etc.)****    ** **    The key to making xml useful is being flexible enough to work around the bugs in all of these well-established tools (especially xml itself with its needless vestiges of sgml and its inability to contain unparsed tags or use xml fragments). Therefore, sometimes it make sense to ask if an xml tool like jdom could provide some of those required workarounds.****    ** **    The alternative in cases like these might not suffice to demand more goodness in our output xml; the alternative might turn out to be to use json or yaml or some other alternative to xml itself, when the tools are not flexible enough.****    ** **    Mike Brenner****    ** **    *From:* &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto:  &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] *On Behalf Of *Rolf Lear *Sent:* Wednesday, January 09, 2013 7:49 AM *To:* SoTaNeZ *Cc:* &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  *Subject:* Re: [jdom-interest] EscapeStrategy for in-text html tags not working****    ** **    Hi there.    Escaping "&amp;lt;" and other the other characters '&amp;gt;', '&amp;amp;', and '\r' is always done (with one exception...). The '\n' char is also sometimes replaced with \r\n.    if (ch == '&amp;lt;' || ch == '&amp;gt;' || ch == '&amp;amp;' || ch == '\r' || ch == '\n' ......    To do anything else would be to produce broken XML.    What you want is (likelye to be) broken XML and JDOM is not designed to produce broken XML. Really the best way to solve your problem is to do the right handling of your output. The code using your XML should parse the data from your element and the parsing process will un-escape the characters. The next best way to do things is to make the actual HTML content valid XHTML and to parse it and then add the Element content as JDOM objects to the JDOM tree, and then output the complete JDOM document normally.    The wrong way to do it wold be to override/extend the AbstractXMLOutputProcessor and to 'hack' the code that does the escaping.    TrAXEscapePI concept is designed to support obscure functionality in the XMLTransformation process (XSLT). Technically I think you *can* use this concept to support not-escaping by having the following JDOM content:    emt.addContent(new emt.addContent(new    Then you will need to set Format.setIgnoreTrAXExcapingPIs to false when you output the JDOM Content.    The above is a *hack* and is not what I recommend that you do.    Rolf    On 09/01/2013 3:50 AM, SoTaNeZ wrote:****    Hello. ****    ** **    I have some XML elements which text is not plain, but contains some HTML tags.****    The thing is that when outputting these to an XML file the characters "&amp;lt;" and "&amp;gt;" are changed into "&amp;amp;lt;" and "&amp;amp;gt;" preventing its correct posterior HTML processing.****    I tried using this EscapeStrategy:****    ** **    ------------------****       ** **          case '&amp;lt;':****    return false;****    case '&amp;gt;':****    return false;****    default:****    return false;****             ------------------****    ** **    but with no effect. The code within the two case statements is never reached, but the method is executed, so it seems that these characters are converted before the EscapeStrategy gets into action, or maybe I am doing something wrong.****    ** **    This is the code to set the format:****    ** **    ---------------------****    Format formato = Format.getPrettyFormat();****    formato.setTextMode(TextMode.PRESERVE);****    formato.setEscapeStrategy(new EscapeSimbolos());****    formato.setIgnoreTrAXEscapingPIs(true);****    XMLOutputter outputter = new XMLOutputter(formato);****    ---------------------****    ** **    I tried setting setIgnoreTrAXEscapingPIs to false, because I am not sure what this does exactly, but nothing seems to change.****    ** **    Any ideas?****    ****    _______________________________________________****    To control your jdom-interest membership:****    http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt; ****   &lt;div class="footer noise"&gt;  ** **   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] EscapeStrategy for in-text html tags not working</header>
    <body>Hi Rolf,     Although you are technically right that we should always generate socially &lt;br/&gt; acceptable xml, I would like to add some caveats to your response.    First, not all html can be translated to xhtml (for example, the html attribute &lt;br/&gt; "target" to generate a popup).    Second, there are many workarounds needed (for example, &amp;amp;nbsp and other symbols &lt;br/&gt; don't exist in xhtml due to unfortunate choices of version numbers of included &lt;br/&gt; documents in the standards).    Third, you don't always have control over how the process using your xml will &lt;br/&gt; parse it, if at all.    Fourth, xml is often the lowest or second lowest protocol in a large number of &lt;br/&gt; protocols (for example, a URI inside a javascript string inside a javascript &lt;br/&gt; block inside an xhtml, etc.)    The key to making xml useful is being flexible enough to work around the bugs in &lt;br/&gt; all of these well-established tools (especially xml itself with its needless &lt;br/&gt; vestiges of sgml and its inability to contain unparsed tags or use xml &lt;br/&gt; fragments). Therefore, sometimes it make sense to ask if an xml tool like jdom &lt;br/&gt; could provide some of those required workarounds.    The alternative in cases like these might not suffice to demand more goodness in &lt;br/&gt; our output xml; the alternative might turn out to be to use json or yaml or some &lt;br/&gt; other alternative to xml itself, when the tools are not flexible enough.    Mike Brenner    From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On &lt;br/&gt; Behalf Of Rolf Lear Sent: Wednesday, January 09, 2013 7:49 AM To: SoTaNeZ Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] EscapeStrategy for in-text html tags not working    Hi there.    Escaping "&amp;lt;" and other the other characters '&amp;gt;', '&amp;amp;', and '\r' is always done &lt;br/&gt; (with one exception...). The '\n' char is also sometimes replaced with \r\n.    if (ch == '&amp;lt;' || ch == '&amp;gt;' || ch == '&amp;amp;' || ch == '\r' || ch == '\n' ......    To do anything else would be to produce broken XML.    What you want is (likelye to be) broken XML and JDOM is not designed to produce &lt;br/&gt; broken XML. Really the best way to solve your problem is to do the right &lt;br/&gt; handling of your output. The code using your XML should parse the data from your &lt;br/&gt; element and the parsing process will un-escape the characters. The next best way &lt;br/&gt; to do things is to make the actual HTML content valid XHTML and to parse it and &lt;br/&gt; then add the Element content as JDOM objects to the JDOM tree, and then output &lt;br/&gt; the complete JDOM document normally.    The wrong way to do it wold be to override/extend the AbstractXMLOutputProcessor &lt;br/&gt; and to 'hack' the code that does the escaping.    TrAXEscapePI concept is designed to support obscure functionality in the &lt;br/&gt; XMLTransformation process (XSLT). Technically I think you *can* use this concept &lt;br/&gt; to support not-escaping by having the following JDOM content:    emt.addContent(new &lt;br/&gt; emt.addContent(new &lt;br/&gt;    Then you will need to set Format.setIgnoreTrAXExcapingPIs to false when you &lt;br/&gt; output the JDOM Content.    The above is a *hack* and is not what I recommend that you do.    Rolf    On 09/01/2013 3:50 AM, SoTaNeZ wrote: Hello.    I have some XML elements which text is not plain, but contains some HTML tags. The thing is that when outputting these to an XML file the characters "&amp;lt;" and &lt;br/&gt; "&amp;gt;" are changed into "&amp;amp;lt;" and "&amp;amp;gt;" preventing its correct posterior HTML &lt;br/&gt; processing. I tried using this EscapeStrategy:    ------------------    case '&amp;lt;': case '&amp;gt;': default:    ------------------    but with no effect. The code within the two case statements is never reached, &lt;br/&gt; but the method is executed, so it seems that these characters are converted &lt;br/&gt; before the EscapeStrategy gets into action, or maybe I am doing something wrong.    This is the code to set the format:    ---------------------    ---------------------    I tried setting setIgnoreTrAXEscapingPIs to false, because I am not sure what &lt;br/&gt; this does exactly, but nothing seems to change.    Any ideas?    _______________________________________________    To control your jdom-interest membership:    http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] EscapeStrategy for in-text html tags not working</header>
    <body>Hi there.    Escaping "&amp;lt;" and other the other characters '&amp;gt;', '&amp;amp;', and '\r' is always done (with one exception...). The '\n' char is also sometimes replaced with \r\n.    if (ch == '&amp;lt;' || ch == '&amp;gt;' || ch == '&amp;amp;' || ch == '\r' || ch == '\n' ......    To do anything else would be to produce broken XML.    What you want is (likelye to be) broken XML and JDOM is not designed to produce broken XML. Really the best way to solve your problem is to do the right handling of your output. The code using your XML should parse the data from your element and the parsing process will un-escape the characters. The next best way to do things is to make the actual HTML content valid XHTML and to parse it and then add the Element content as JDOM objects to the JDOM tree, and then output the complete JDOM document normally.    The wrong way to do it wold be to override/extend the AbstractXMLOutputProcessor and to 'hack' the code that does the escaping.    TrAXEscapePI concept is designed to support obscure functionality in the XMLTransformation process (XSLT). Technically I think you *can* use this concept to support not-escaping by having the following JDOM content:    emt.addContent(new emt.addContent(new    Then you will need to set Format.setIgnoreTrAXExcapingPIs to false when you output the JDOM Content.    The above is a *hack* and is not what I recommend that you do.    Rolf    On 09/01/2013 3:50 AM, SoTaNeZ wrote:   &lt;div class="quote quote-1"&gt;  Hello.    I have some XML elements which text is not plain, but contains some HTML tags. The thing is that when outputting these to an XML file the characters "&amp;lt;" and "&amp;gt;" are changed into "&amp;amp;lt;" and "&amp;amp;gt;" preventing its correct posterior HTML processing. I tried using this EscapeStrategy:    ------------------    case '&amp;lt;': case '&amp;gt;': default:    ------------------    but with no effect. The code within the two case statements is never reached, but the method is executed, so it seems that these characters are converted before the EscapeStrategy gets into action, or maybe I am doing something wrong.    This is the code to set the format:    ---------------------    ---------------------    I tried setting setIgnoreTrAXEscapingPIs to false, because I am not sure what this does exactly, but nothing seems to change.    Any ideas?</body>
  </mail>
  <mail>
    <header>[jdom-interest] EscapeStrategy for in-text html tags not working</header>
    <body>Hello.    I have some XML elements which text is not plain, but contains some HTML tags. The thing is that when outputting these to an XML file the characters "&amp;lt;" and "&amp;gt;" are changed into "&amp;amp;lt;" and "&amp;amp;gt;" preventing its correct posterior HTML processing. I tried using this EscapeStrategy:    ------------------    case '&amp;lt;': case '&amp;gt;': default:    ------------------    but with no effect. The code within the two case statements is never reached, but the method is executed, so it seems that these characters are converted before the EscapeStrategy gets into action, or maybe I am doing something wrong.    This is the code to set the format:    ---------------------    ---------------------    I tried setting setIgnoreTrAXEscapingPIs to false, because I am not sure what this does exactly, but nothing seems to change.    Any ideas?</body>
  </mail>
  <mail>
    <header>[jdom-interest] Planning for JDOM 2.1.x</header>
    <body>Hi all.    There are a few new features for JDOM that should be pushed to a 2.1.x version. These items include: - an extension to the XPathFactory API that allows for an implementation to reuse a 'compiled' or 'preprocessed' version of the JDOMDocument for the XPath lookups. - additional XMLStream* implementations (StAX) to output/build JDOM content that would allow JDOM to be a natural storage target for the native Java JAXB processes. - let JDOM Core classes accept Iterable&amp;lt;...&amp;gt; instances (for example, Element.addAll(Collection&amp;lt;? extends Content&amp;gt;) could rather be Element.addAll(Iterable&amp;lt;? extends Content&amp;gt;) - Saxon is anticipating a new version soon, and it would be great to formalize support for using Saxon for XSLT transformation and XPath evaluation. - I have some extensions I would like to make to the NamespaceStack class to facilitate easier access to Namespace logic. - for    Depending on other factors, I think it would be reasonable to target a 2.1.0 release around April Fool's day. That gives some time for some beta versions for some field testing. Also, hopefully the 9.5 Saxon release will be out by then.    I have been working with Saxon to integrate their API for XPath evaluation in JDOM, but there are a couple of technical issues in JDOM and the way that existing XPath evaluation is done that make it slightly incompatible with the Saxon (and XPath) API. There is a lot of common ground though, and using native Saxon for JDOM/XSLT makes sense, but will need some tweaks for use with JDOM XPath evaluation.    I have also been working with Gordon Burgett on the new StAX Support based on his code submission on GitHub, and I also have code ready for the extensions to the XPath API. The Iterable changes would be relatively easy to implement, and the NamespaceStack class would be a simple extension with no existing logic changes (and the work is mostly done).    I am looking for input on any other features or updates that you would like included in a 2.1 version. For example, is anyone using any code from the contrib area, and should that contrib code be 'productionized'?    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Downloads.....</header>
    <body>Is it possible to update the github copies of 1.1 and latest 1.1.x, to add a readme or otherwise a tag/statement that there are NEWer versions, and if you are using Java 5, then you should really be using jdom2?    At some point in the future, might even want to mark them as deprecated.    v/r, Lou   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On Behalf Of Rolf Lear Sent: Sunday, December 16, 2012 10:01 AM To: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ; Michael Kay Subject: Re: [jdom-interest] Downloads.....    Hi All.    In concept, I agree with you, but, honestly, the 500 is better than 5 argument is exactly what interests me. I am looking at relative usage.    Also, 'sonatype' (the maven gateway I use) now has the statistics page up and running.    For example, here's the usage graph for JDOM 1.1 from maven (you can see that JDOM 1.1 usage is actually trending *up* ... :( I don't understand that, honestly. ):    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;c htt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom:1.1&amp;amp;chxr=1,0,37487&amp;amp;c hds=0,37487&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:26900,27976,27960 ,33207,31134,32157,31650,33266,32598,30451,37487,35979&amp;amp;chxl=0:|Dec2011|Jan20 12|Feb2012|Mar2012|Apr2012|May2012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|N ov2012    Here's the graph for all jdom2 artifacts:    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;c htt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom2&amp;amp;chxr=1,0,1387&amp;amp;chds= 0,1387&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,27,54,94,125,183 ,136,388,899,1387&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2012|Ju n2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    What's interesting is seeing that maven users have not been finding the jdom2 artifacts:    Here's the graph for 2.0.2 which is the last version posted to the jdom artifact before I was convinced I had to move jdom 2.x versions to the new jdom2 artifact....    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;c chds=0,2141&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,0,0,0,949,1 872,2141,2077,1979,1954&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2 012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    Now, compare that with the previous version 2.0.1 ... see what happened when 2.0.2 was released?    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;c chds=0,1368&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,0,35,1232,1 368,676,532,392,346,392&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2 012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    You would expect something similar from 2.0.2 when 2.0.3 was released ...? But you can see that the 'tail off' is simply not there in 2.0.3... basically people are not looking at artifact jdom2 the same as they look at jdom.    Anyway, download statistics do add some value, whether is is just trend information, or for 'warm and fuzzies'.    Also, maven-central keeps relatively convenient statistics... which is possibly the best thing about maven ... ;)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Access to the API doc in jdom.org does not work</header>
    <body>Hi all.    &lt;a class="exlink mklink" href="http://www.jdom.org" rel="nofollow"&gt; http://www.jdom.org &lt;/a&gt; is available again.    Rolf    &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Access to the API doc in jdom.org does not work</header>
    <body>Yeah, known issue.  The ISP is working on it.    -jh-    On Dec 16, 2012, at 9:38 PM, JOSE L MARTINEZ-AVIAL wrote:   &lt;div class="quote quote-1"&gt;  Hi, I'm getting a forbidden page when I try to access &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/output/Format.html" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/output/Format.html &lt;/a&gt;  Could you please check? Thanks</body>
  </mail>
  <mail>
    <header>[jdom-interest] Access to the API doc in jdom.org does not work</header>
    <body>Hi,    I'm getting a forbidden page when I try to access  &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/output/Format.html" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/output/Format.html &lt;/a&gt;  Could you please check? Thanks    JL</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Downloads.....</header>
    <body>Hi All.    In concept, I agree with you, but, honestly, the 500 is better than 5 argument is exactly what interests me. I am looking at relative usage.    Also, 'sonatype' (the maven gateway I use) now has the statistics page up and running.    For example, here's the usage graph for JDOM 1.1 from maven (you can see that JDOM 1.1 usage is actually trending *up* ... :( I don't understand that, honestly. ):    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;chtt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom:1.1&amp;amp;chxr=1,0,37487&amp;amp;chds=0,37487&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:26900,27976,27960,33207,31134,32157,31650,33266,32598,30451,37487,35979&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    Here's the graph for all jdom2 artifacts:    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;chtt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom2&amp;amp;chxr=1,0,1387&amp;amp;chds=0,1387&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,27,54,94,125,183,136,388,899,1387&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    What's interesting is seeing that maven users have not been finding the jdom2 artifacts:    Here's the graph for 2.0.2 which is the last version posted to the jdom artifact before I was convinced I had to move jdom 2.x versions to the new jdom2 artifact....    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;chtt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom:2.0.2&amp;amp;chxr=1,0,2141&amp;amp;chds=0,2141&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,0,0,0,949,1872,2141,2077,1979,1954&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    Now, compare that with the previous version 2.0.1 ... see what happened when 2.0.2 was released?    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=lc&amp;amp;chs=800x200&amp;amp;chco=326A9E&amp;amp;chxt=x &lt;/a&gt; ,y&amp;amp;chtt=Downloads+Over+the+Last+12+Months+For+org.jdom:jdom:2.0.1&amp;amp;chxr=1,0,1368&amp;amp;chds=0,1368&amp;amp;chxs=1N*s*&amp;amp;chls=3&amp;amp;chm=o,0066FF,0,-1,10,0&amp;amp;chd=t:0,0,0,0,35,1232,1368,676,532,392,346,392&amp;amp;chxl=0:|Dec2011|Jan2012|Feb2012|Mar2012|Apr2012|May2012|Jun2012|Jul2012|Aug2012|Sep2012|Oct2012|Nov2012    You would expect something similar from 2.0.2 when 2.0.3 was released ...? But you can see that the 'tail off' is simply not there in 2.0.3... basically people are not looking at artifact jdom2 the same as they look at jdom.    Anyway, download statistics do add some value, whether is is just trend information, or for 'warm and fuzzies'.    Also, maven-central keeps relatively convenient statistics... which is possibly the best thing about maven ... ;)    Rolf    On 14/12/2012 3:27 AM, Michael Kay wrote:   &lt;div class="quote quote-1"&gt;  I came to the conclusion a while ago that download statistics were almost useless. They're inflated by people doing automatic and repeated downloads from their build scripts, and deflated by people getting copies that have been staged somewhere else. About the only thing you can say is that a project getting 500 downloads a day is more popular than one getting 5.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Downloads.....</header>
    <body>I came to the conclusion a while ago that download statistics were almost useless. They're inflated by people doing automatic and repeated downloads from their build scripts, and deflated by people getting copies that have been staged somewhere else. About the only thing you can say is that a project getting 500 downloads a day is more popular than one getting 5.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Downloads.....</header>
    <body>Hi Jason, All.    Technically the official download is from jdom.org, and the github is just a copy, but the jdom.org download page actually points to the github copy of the page if you click the link (or you still have the option of navigating on to the jdom.org download area which will *not* download from github, but from jdom.org).    I like being able to see how many downloads are being done, and I can tell from the github pages that there's about 250 downloads a day (at 4MB each that's 1GB a day, which I suppose is quite a lot, really, for one project using a free service... hmmm. We should set up a torrent for it.... ;-).    I don't know how many downloads happen from the 'horse's mouth' www.jdom.org location.    It would be great if we could get statistics on the combined download activity for the various releases.... makes for entertainment and some satisfaction (hey, it's nice to know that people use JDOM, through ways other than just bug reports.... ;-).    Adding this to the jdom.org site may be relatively complicated because you would have to trawl the web logs, keep a bookmark to avouid double- counts, etc. More effort than it seems is worth it.    For what it's worth I can also follow the maven-central statistics. For there the downloads are more interesting to track because it shows a lot of inertia on the 1.1 release of JDOM... of course, now the maven site (oss.sonatype.org) is misbehaving, but about 35-40K downloads a month, of which 80% or so are for JDOM 1.1, about 10% are for 1.1.1 through 1.1.3, and about 10% was for JDOM 2.x releases.... that's based on memory the last time I actually checked was about the 8th of december, and it only updates once a month, for the previous month, about 1 week in to the next... i.e. I check the maven-central downloads once a month sometime after the 7th of the month.    You can see why jdom 1.1 is still so popular in maven when you see:  &lt;a class="exlink mklink" href="http://mvnrepository.com/artifact/org.jdom/jdom/1.1" rel="nofollow"&gt; http://mvnrepository.com/artifact/org.jdom/jdom/1.1 &lt;/a&gt;   compare it with:  &lt;a class="exlink mklink" href="http://mvnrepository.com/artifact/org.jdom/jdom/1.1.3" rel="nofollow"&gt; http://mvnrepository.com/artifact/org.jdom/jdom/1.1.3 &lt;/a&gt;   Also, compare it with:  &lt;a class="exlink mklink" href="http://mvnrepository.com/artifact/org.jdom/jdom2/2.0.3" rel="nofollow"&gt; http://mvnrepository.com/artifact/org.jdom/jdom2/2.0.3 &lt;/a&gt;   The mvnrepository site has not yet included the 2.0.4 version (lazy people ... ;-)    Bottom line is that when maven projects use things like saxon, they pull the slow and more buggy 1.1 code instead of 1.1.3.    This is another reason why I don't like Maven... 30K people a month are downloading code from 2007 that: does not synchronize on the Namespace class; can't handle surrogate double-char characters; two dozen other bug fixes; and thinks attributes with no namespace prefix are in the *default* namespace, not the 'no namespace'.... and there is no way to stop this madness....    Rolf    On 13/12/2012 7:23 PM, Jason Hunter wrote:   &lt;div class="quote quote-1"&gt;  &lt;a class="exlink mklink" href="http://jdom.org" rel="nofollow"&gt; http://jdom.org &lt;/a&gt; &amp;gt;.  What activity metrics were you watching?  Maybe we can just add those on &lt;a class="exlink mklink" href="http://jdom.org" rel="nofollow"&gt; http://jdom.org &lt;/a&gt; &amp;gt;.    -jh-    On Dec 13, 2012, at 8:58 AM, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  Github has suddenly stopped supporting downloads of binart files. Check the github blog:    https:github.com/blog    It appears that they are grandfathering existing files... but we won't be adding any new downloads later...    Any suggestions?    &lt;a class="exlink mklink" href="http://jdom.org" rel="nofollow"&gt; http://jdom.org &lt;/a&gt; &amp;gt; site, but it is harder to measure activity from there...</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Downloads.....</header>
    <body>Probably we need to move back to jdom.org.  What activity metrics were you &lt;br/&gt; watching?  Maybe we can just add those on jdom.org.    -jh-    On Dec 13, 2012, at 8:58 AM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Github has suddenly stopped supporting downloads of binart files. Check the &lt;br/&gt; github blog:    https:github.com/blog    It appears that they are grandfathering existing files... but we won't be adding &lt;br/&gt; any new downloads later...    Any suggestions?    One obvious option is to use the base jdom.org site, but it is harder to measure &lt;br/&gt; activity from there...</body>
  </mail>
  <mail>
    <header>[jdom-interest] Downloads.....</header>
    <body>Github has suddenly stopped supporting downloads of binart files. Check the &lt;br/&gt; github blog:    https:github.com/blog    It appears that they are grandfathering existing files... but we won't be adding &lt;br/&gt; any new downloads later...    Any suggestions?    One obvious option is to use the base jdom.org site, but it is harder to measure &lt;br/&gt; activity from there...    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Converting Result Set into XML and returning through Web Service</header>
    <body>JDOM classes are not JavaBeans either, and org.jdom2.Parent is an interface too.    I don't know enough about JDeveloper to be helpful with that either.    Basically you should probably ask people who ar emore familiar with JDeveloper than with JDOM.    Rolf    On 04/12/2012 1:15 AM, Ajay Sharma wrote:   &lt;div class="quote quote-1"&gt;  Hi,    I am developing a web service where I need to create Result set data into XML tree. Previously I was using Jdevloper 10 and there I can send org.w3c.Document object.    But the problem now is that I migrated to Jdevloper 11 and in Jdevloper 11 it is not allowed to return Interface through web service. When I used JDOM 2 API and tested I got following error at the time of exposing Class as web service.    Exception:    1.Oracle.j2ee.ws.common.tools.api.ValidationException:    a.org.jdom2.Parent – Not a Java bean.    What is the reason behind this ? Is there any other approach ?</body>
  </mail>
  <mail>
    <header>[jdom-interest] Converting Result Set into XML and returning through Web Service</header>
    <body>Hi,     I am developing a web service where I need to create Result set data into XML tree. Previously I was using Jdevloper 10 and there I can send org.w3c.Document object.    But the problem now is that I migrated to Jdevloper 11 and in Jdevloper 11 it is not allowed to return Interface through web service. When I used JDOM 2 API and tested I got following error at the time of exposing Class as web service.    Exception:    1.       Oracle.j2ee.ws.common.tools.api.ValidationException:    a.       org.jdom2.Parent - Not a Java bean.    What is the reason behind this ? Is there any other approach ?    Regards,</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Parsing HTML elements</header>
    <body>Thanks Rolf,    that'd be the right thing indeed which I did not think of.    For now, I've implemented a replacement of the raw data... that is simpler. I sure agree JDOM should refuse to do anything with undeclared prefixes. I had tried to add namespace declarations within the factory but that has not &lt;br/&gt; been taken in account.    thanks.    Paul    Le 21 nov. 2012 à 00:08, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  Hi Paul.    In the mail below I suggested using a parsing proxy. The term I meant to use is &lt;br/&gt; a 'Filter'. See this article here:    &lt;a class="exlink mklink" href="http://www.ibm.com/developerworks/xml/library/x-tipsaxfilter/" rel="nofollow"&gt; http://www.ibm.com/developerworks/xml/library/x-tipsaxfilter/ &lt;/a&gt;   You can do some magic with &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#setXMLFilter" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#setXMLFilter &lt;/a&gt; (org.xml.sax.XMLFilter)    For example, your filter could exend &lt;br/&gt; &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html &lt;/a&gt;   and then override the method &lt;br/&gt; &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html#startElement" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html#startElement &lt;/a&gt; (java.lang.String,%20java.lang.String,%20java.lang.String,%20org.xml.sax.Attributes)    to set the 'attrs' URI's correctly, and then call super.startElement(....).</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Parsing HTML elements</header>
    <body>Hi Paul.    In the mail below I suggested using a parsing proxy. The term I meant to use is a 'Filter'. See this article here:    &lt;a class="exlink mklink" href="http://www.ibm.com/developerworks/xml/library/x-tipsaxfilter/" rel="nofollow"&gt; http://www.ibm.com/developerworks/xml/library/x-tipsaxfilter/ &lt;/a&gt;   You can do some magic with  &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#setXMLFilter" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#setXMLFilter &lt;/a&gt; (org.xml.sax.XMLFilter)    For example, your filter could exend  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html &lt;/a&gt;   and then override the method  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html#startElement" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/org/xml/sax/helpers/XMLFilterImpl.html#startElement &lt;/a&gt; (java.lang.String,%20java.lang.String,%20java.lang.String,%20org.xml.sax.Attributes)    to set the 'attrs' URI's correctly, and then call super.startElement(....).    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Parsing HTML elements</header>
    <body>Hmmm not using the default API.    JDOM expects the getURI() method to have a value if there is a prefix for the &lt;br/&gt; attribute. This is reasonable... ;)    This indicates the sax stream is broken. JDOM should be throwing "Namespace URIs &lt;br/&gt; must be non-null and non-empty Strings".    If you cannot fic the SAX stream code, you can maybe write a proxy class that &lt;br/&gt; fixes the URIs as the events pass through.    Rolf    Rolf &lt;span&gt; pa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @hoplahup.net &lt;/span&gt; &amp;gt; wrote: Hello JDOm experts,    I'm hitting a wall here and I am not sure who is responsible. Just like the previous series of post, I am trying to parse an HTML document. In this case I use the CyberNeko HTML parser &lt;a class="exlink mklink" href="http://nekohtml.sourceforge.net/" rel="nofollow"&gt; http://nekohtml.sourceforge.net/ &lt;/a&gt; &lt;br/&gt; which creates a SAX stream hence is easily convertible to a JDOM document.    Now, my big issue is that the document I have (which I cannot easily change &lt;br/&gt; right now) contains undeclared namespace-prefixed attribute-names!    Do I have a way to predefine the namespace somewhere?    thanks in advance    Paul</body>
  </mail>
  <mail>
    <header>[jdom-interest] Parsing HTML elements</header>
    <body>Hello JDOm experts,    I'm hitting a wall here and I am not sure who is responsible. Just like the previous series of post, I am trying to parse an HTML document. In this case I use the CyberNeko HTML parser &lt;a class="exlink mklink" href="http://nekohtml.sourceforge.net/" rel="nofollow"&gt; http://nekohtml.sourceforge.net/ &lt;/a&gt; &lt;br/&gt; which creates a SAX stream hence is easily convertible to a JDOM document.    Now, my big issue is that the document I have (which I cannot easily change &lt;br/&gt; right now) contains undeclared namespace-prefixed attribute-names!    Do I have a way to predefine the namespace somewhere?    thanks in advance    Paul</body>
  </mail>
  <mail>
    <header>[jdom-announce] JDOM 2.0.4 released</header>
    <body>Hi all.    JDOM 2.0.4 is now available from the regular locations.    The changes for 2.0.4 are as follows:    Bugs:    Fixes Issue 93 - Some Java containers (e.g. Applets) have security restrictions on accessing System properties. Fixes Issue 94 - Improve the exception-handling in the intializers for the XMLSchema validating singletons in XMLReaders. Fixes Issue 97 - Update to using/packaging Jaxen 1.1.4 Fixes Issue 98 - Improve the XPathHelper class so that it can build queries to all nodes, including at document level. Fixes Issue 100 - Use the functionally equivalent 'older' DOM methods instead of DOM 3 methods with may not be implemented completely in all DOM libraries.    Please download the package from:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.0.4.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.0.4.zip &lt;/a&gt;   Reminder for Maven Users ========================    Please note that this release was not made to the jdom artifact, but to the jdom2 artifact.    The details should be available here (it takes a few hours for maven-central to be synchronized):  &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom2|2.0.4|jar    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.4 released</header>
    <body>Hi all.    JDOM 2.0.4 is now available from the regular locations.    The changes for 2.0.4 are as follows:    Bugs:    Fixes Issue 93 - Some Java containers (e.g. Applets) have security restrictions on accessing System properties. Fixes Issue 94 - Improve the exception-handling in the intializers for the XMLSchema validating singletons in XMLReaders. Fixes Issue 97 - Update to using/packaging Jaxen 1.1.4 Fixes Issue 98 - Improve the XPathHelper class so that it can build queries to all nodes, including at document level. Fixes Issue 100 - Use the functionally equivalent 'older' DOM methods instead of DOM 3 methods with may not be implemented completely in all DOM libraries.    Please download the package from:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.0.4.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.0.4.zip &lt;/a&gt;   Reminder for Maven Users ========================    Please note that this release was not made to the jdom artifact, but to the jdom2 artifact.    The details should be available here (it takes a few hours for maven-central to be synchronized):  &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom2|2.0.4|jar    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>&lt;div class="quote quote-1"&gt;  You could fork it and fix it (on github for example)   &lt;/div&gt;   That´s true, but not very practical. I don´t have time to get to know the jtidy code and fix it. Apart from that, what would I do with the patch? If I sent it to the JTidy project it would probably be waiting for implementation like the open bug. And there are many more methods returning null that shouldn´t.    Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>&lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  hi Rolf,   &lt;div class="quote quote-2"&gt;  Indeed, file a bug against JTidy.   &lt;/div&gt;   I already checked the project but it seems quite dead, so I guess this won´t be &lt;br/&gt; fixed in a timely manner if at all... Perhaps you could also add a remark in the FAQs regarding JTidy or whatever you &lt;br/&gt; think is appropriate.   &lt;/div&gt;   You could fork it and fix it (on github for example)    Gary   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  Here's the offending lines of code in the DOMNodeImpl class from JTidy:   &lt;/div&gt;   Thanks, I will include this in my bug report. Surprising that such (as I would &lt;br/&gt; guess) vital code has not been implemented yet.    Again, thx for your help! Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>&lt;div class="quote quote-1"&gt;  Indeed, file a bug against JTidy.   &lt;/div&gt;   filed as &lt;a class="exlink mklink" href="https://sourceforge.net/p/jtidy/bugs/259/" rel="nofollow"&gt; https://sourceforge.net/p/jtidy/bugs/259/ &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>hi Rolf,     &lt;div class="quote quote-1"&gt;  Indeed, file a bug against JTidy.   &lt;/div&gt;   I already checked the project but it seems quite dead, so I guess this won´t be fixed in a timely manner if at all... Perhaps you could also add a remark in the FAQs regarding JTidy or whatever you think is appropriate.   &lt;div class="quote quote-1"&gt;  Here's the offending lines of code in the DOMNodeImpl class from JTidy:   &lt;/div&gt;   Thanks, I will include this in my bug report. Surprising that such (as I would guess) vital code has not been implemented yet.    Again, thx for your help! Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi Lars.    Indeed, file a bug against JTidy.    Here's the offending lines of code in the DOMNodeImpl class from JTidy:    /** * @todo DOM level 3 getTextContent() Not implemented. Returns null. * @see org.w3c.dom.Node#getTextContent() */ public String getTextContent() throws DOMException    THat's from line 523 of:  &lt;a class="exlink mklink" href="http://jtidy.svn.sourceforge.net/viewvc/jtidy/trunk/jtidy/src/main/java/org/w3c/tidy/DOMNodeImpl.java?revision=1132&amp;amp;view=markup" rel="nofollow"&gt; http://jtidy.svn.sourceforge.net/viewvc/jtidy/trunk/jtidy/src/main/java/org/w3c/tidy/DOMNodeImpl.java?revision=1132&amp;amp;view=markup &lt;/a&gt;   Rolf    On 08/11/2012 4:20 AM, Larsen wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    first of all, thanks for your extensive help!   &lt;div class="quote quote-2"&gt;  The Java API documentation is a mess in this area.... JDK 1.5 package information indicates that the org.w3c.dom API supports DOM Level 2:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html" rel="nofollow"&gt; http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html &lt;/a&gt;  &lt;/div&gt;  That´s nice to hear. I was already wondering wether my English is too bad or if the javadoc is so crudely written that I can´t understand it.   &lt;div class="quote quote-2"&gt;  What would be useful is if you could determine the library that you are using. Since you have already 'hacked' the code, why don't you temporarily add the line: System.out.println(text.getClass()); to the method. This will tell you the concrete implementation of DOM that's broken.   &lt;/div&gt;   It´s "org.w3c.tidy.DOMTextImpl". I use JTidy to bring HTML code I obtain from a customer´s database into Java objects. So, should I file a bug against JTidy?    My code in that area in case it helps:          // convert text representation to Document</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi Rolf,     first of all, thanks for your extensive help!   &lt;div class="quote quote-1"&gt;  The Java API documentation is a mess in this area.... JDK 1.5 package information indicates that the org.w3c.dom API supports DOM Level 2:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html" rel="nofollow"&gt; http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html &lt;/a&gt;  &lt;/div&gt;   That´s nice to hear. I was already wondering wether my English is too bad or if the javadoc is so crudely written that I can´t understand it.   &lt;div class="quote quote-1"&gt;  What would be useful is if you could determine the library that you are using. Since you have already 'hacked' the code, why don't you temporarily add the line: System.out.println(text.getClass()); to the method. This will tell you the concrete implementation of DOM that's broken.   &lt;/div&gt;   It´s "org.w3c.tidy.DOMTextImpl". I use JTidy to bring HTML code I obtain from a customer´s database into Java objects. So, should I file a bug against JTidy?    My code in that area in case it helps:          // convert text representation to Document          Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi Lars.    I am back home, and I have my JDOM code in front of me.    I have just gone through the code, and 'it works for me'. What this means is:    if: - you load a Document using a DOM DocumentBuilderFactory supplied by Xerces - and you pass that document to JDOM to build a JDOM document - and that document contains Text nodes    that: - JDOM will correctly translate those DOM Text nodes in to JDOM Text nodes.    Now, I am not saying that using the getTextContent() is the 'right' method to call. It is possible that I would be better off using getNodeValue(). In fact, in JDOM versions before 2.x it used getNodeValue(). I can't think of why I decided to use getTextContent() instead other than the fact that that part of code was refactored significantly, and I used the documentation carefully, and perhaps there was something that used getTextContent() and I chose to do it that way.    I have just run the entire test suite with the code changed to use getNodeValue() and it still works fine for me.    On checking the DOM specification, the getTextContent() method was added in DOM level 3.    The Java API documentation is a mess in this area.... JDK 1.5 package information indicates that the org.w3c.dom API supports DOM Level 2:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html" rel="nofollow"&gt; http://docs.oracle.com/javase/1.5.0/docs/api/org/w3c/dom/package-summary.html &lt;/a&gt;   Yet, the Node class indicates it implements Level 3..... and it exposes all the Level 3 changes.    In fact, the Java5 new features indicate that:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/1.5.0/docs/guide/xml/jaxp/index.html" rel="nofollow"&gt; http://docs.oracle.com/javase/1.5.0/docs/guide/xml/jaxp/index.html &lt;/a&gt;   JAXP implements the Level3 specification.    So, what this means is that: - JDOM is doing the right thing - It uses functionality supported since Java5 - it is probably your particular DOM library that has a broken implementation of the new-to-DOM3 method getTextContent() - JDOM does not need to use getTextContent() because the old method getNodeValue() will work just fine.    What would be useful is if you could determine the library that you are using. Since you have already 'hacked' the code, why don't you temporarily add the line: System.out.println(text.getClass()); to the method. This will tell you the concrete implementation of DOM that's broken.    I will also change the text() method to use getNodeValue() instead... it makes sense to do it if there's a broken library, and it's no big deal for JDOM.... Also, I am planning a release imminently, so the timing is good.    If you could get back to me on what library you are using, I will dig in to it and we can see if there's a fix for your library (I imagine that there is....).    I did google for "getTextContent bug Text Node" but I find no seemingly relevant hits.    Created issue #100 for this: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/100" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/100 &lt;/a&gt;   Rolf    On 07/11/2012 5:48 PM, Larsen wrote:   &lt;div class="quote quote-1"&gt;  I will try to test this tomorrow in my company.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>I will try to test this tomorrow in my company.    Lars    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi    If you pull the JDOM code from github, set it up as an eclipse project (if you use eclipse...), then right-click the build.xml file and run the eclipse target. If you use eclipse you can then right-click the project and run all tests, or you can run the ant junit target.    As for which DOM you use, run your project with the java option -Djaxp.debug=1 to see which DOM is found.    Rolf &lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:Hi Rolf,    I haven´t used unit tests so far and would need some instructions on how to run them in case this becomes necessary.    How can I check for a buggy DOM implementation?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi    If you pull the JDOM code from github, set it up as an eclipse project (if you &lt;br/&gt; use eclipse...), then right-click the build.xml file and run the eclipse target. &lt;br/&gt; If you use eclipse you can then right-click the project and run all tests, or &lt;br/&gt; you can run the ant junit target.    As for which DOM you use, run your project with the java option -Djaxp.debug=1 &lt;br/&gt; to see which DOM is found.    Rolf &lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:Hi Rolf,    I haven´t used unit tests so far and would need some instructions on how  to run them in case this becomes necessary.    How can I check for a buggy DOM implementation?    Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi Rolf,     I haven´t used unit tests so far and would need some instructions on how to run them in case this becomes necessary.    How can I check for a buggy DOM implementation?    Lars    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi (again).    Based on some double-checking, I suspect that you have a buggy DOM implementation?    GetTextContent returns nodeBalue for Text nodes...   Node.getTextContent says it should anyway.    I will check it out some more later.    Rolf &lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:&amp;gt; I am quite a JDOM2 newbie and noticed strange/incorrect behaviour when   &lt;div class="quote quote-2"&gt;  converting a W3C-Element to a JDOM-Element. (snip)   &lt;/div&gt;   PS: Using latest JDOM 2.0.3 and Java 7 ("1.7.0_09")</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi (again).    Based on some double-checking, I suspect that you have a buggy DOM &lt;br/&gt; implementation?    GetTextContent returns nodeBalue for Text nodes...   Node.getTextContent says it &lt;br/&gt; should anyway.    I will check it out some more later.    Rolf &lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:&amp;gt; I am quite a JDOM2 newbie and noticed &lt;br/&gt; strange/incorrect behaviour when    &lt;div class="quote quote-1"&gt;  converting a W3C-Element to a JDOM-Element. (snip)   &lt;/div&gt;   PS: Using latest JDOM 2.0.3 and Java 7 ("1.7.0_09")</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi Larsen.    It does look odd. There's a couple of questions... like, how do the DOMBuilder &lt;br/&gt; tests pass?    I am only going to be able to look in to this in a few hours time.    Rolf    Rolf &lt;span&gt; lars &lt;a class="email mklink"&gt; ... &lt;/a&gt; @web.de &lt;/span&gt; &amp;gt; wrote:&amp;gt; I am quite a JDOM2 newbie and noticed &lt;br/&gt; strange/incorrect behaviour when    &lt;div class="quote quote-1"&gt;  converting a W3C-Element to a JDOM-Element. (snip)   &lt;/div&gt;   PS: Using latest JDOM 2.0.3 and Java 7 ("1.7.0_09")</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>&lt;div class="quote quote-1"&gt;  I am quite a JDOM2 newbie and noticed strange/incorrect behaviour when converting a W3C-Element to a JDOM-Element. (snip)   &lt;/div&gt;   PS: Using latest JDOM 2.0.3 and Java 7 ("1.7.0_09")</body>
  </mail>
  <mail>
    <header>[jdom-interest] Content missing after conversion from W3C Element to JDOM2 Element</header>
    <body>Hi,     I am quite a JDOM2 newbie and noticed strange/incorrect behaviour when converting a W3C-Element to a JDOM-Element. Though, I can´t imagine that this really is a bug as I guess that somebody else would have noticed and probably fixed this before. Also, I couldn´t find other people having this problem. So, at the moment I would rather think that I am doing something wrong here.    This is the part that I want to convert from W3C to JDOM stored in the variable "table":       This is my code:    After this conversion, I have a JDOM element with the correct structure, but the content from the img-tag is missing. I fixed this problem by importing the JDOM source into my project and changing this method:    // BUG ???    Could anyone please shed some light if this is a bug or a mistake on my side?    Lars</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Prepping JDOM 2.4 - question about XPath API</header>
    <body>Gary, All.    I think you are right, but I don't think 3.0.0 is the way I want to go... 2.1.0 is better.    In this case the API change is fully compatible going forward... code written for any 2.x version will work with 2.1.x, but *some code* written for 2.1.x will not work with 2.0.x.    Specifically, I am intending to *extend* the API, and not change any existing methods signatures.    Also, I am in the process of working on the Saxon support in JDOM for XSLT and XPath: few reasons... - faster than Jaxen - supports XPath 2.0 - good to have diversity    THis work is what has inspired this change to add a static index concept to the XPath API. In reality, there is no rush to implement the API changes until the Saxon interfaces is ready too. This will likely be at least a month or three away.....    So, I think I am answering my own questions here: Plan a 2.1.x release of JDOM for the new-year 2013 timeframe. Put these API changes and Saxon support in at the same time....    Release 2.0.4 in the next few days with other pending fixes.    Thanks    Rolf    On 28/10/2012 7:14 PM, Gary Gregory wrote:   &lt;div class="quote quote-1"&gt;  You may want to call it JDOM 3 then. In the Apache projects I work on, a major version change signals the allowance of API changes that are not binary compatible.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Prepping JDOM 2.4 - question about XPath API</header>
    <body>You may want to call it JDOM 3 then. In the Apache projects I work on,    a major version change signals the allowance of API changes that are not binary compatible.    Gary    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    I have been working on a Saxon interface layer for the past few weeks... and I &lt;br/&gt; realized that there is the option of adding support for a library-specific &lt;br/&gt; 'index' for calculating XPaths.    For example, Saxon builds an 'index' in to the document which it then uses to &lt;br/&gt; 'accelerate' the XPath queries. If an index is built once, and then reused &lt;br/&gt; multiple times, it can improve the performance of the XPath evaluation quite &lt;br/&gt; significantly (in my testing, it can 'halve' the evaluation time.    I have played with various scenarios, but I think the best way to support &lt;br/&gt; 'indexes' is to incorporate them at the 'Factory' level. Thus, add the &lt;br/&gt; following:    new method: StaticIndex XPathFactory.buildIndex(Object) this method will build a 'StaticInstance' instance which contains the &lt;br/&gt; information needed by the factory to have a static 'index' in to the document or node.    org.jdom2.xpath.StaticIndex - a class containing whatever the factory wants....    add versions of the methods evaluate(...), evaluateFirst(...), and diagnose(...) &lt;br/&gt; which take a StaticIndex argument in addition to the context.    I know this is a fair bit of detail for people not necessarily familiar with the &lt;br/&gt; code, but the consequence of this change would be that if someone has already &lt;br/&gt; extended the XPath API with their own implementation (which I don't think anyone &lt;br/&gt; has done), they will need to make code changes because the underlying API will &lt;br/&gt; change a bit.    It will also mean that people who wrote code against JDOM 2.4 will not be able &lt;br/&gt; to run with JDOM 2.3 or older.    I don't believe any of this will be a problem, but I thought I would get some &lt;br/&gt; input before I commit....    I have submitted Issue 99 to track:    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/99" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/99 &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Prepping JDOM 2.4 - question about XPath API</header>
    <body>Hi all.    I have been working on a Saxon interface layer for the past few weeks... and I realized that there is the option of adding support for a library-specific 'index' for calculating XPaths.    For example, Saxon builds an 'index' in to the document which it then uses to 'accelerate' the XPath queries. If an index is built once, and then reused multiple times, it can improve the performance of the XPath evaluation quite significantly (in my testing, it can 'halve' the evaluation time.    I have played with various scenarios, but I think the best way to support 'indexes' is to incorporate them at the 'Factory' level. Thus, add the following:    new method: StaticIndex XPathFactory.buildIndex(Object) this method will build a 'StaticInstance' instance which contains the information needed by the factory to have a static 'index' in to the document or node.    org.jdom2.xpath.StaticIndex - a class containing whatever the factory wants....    add versions of the methods evaluate(...), evaluateFirst(...), and diagnose(...) which take a StaticIndex argument in addition to the context.    I know this is a fair bit of detail for people not necessarily familiar with the code, but the consequence of this change would be that if someone has already extended the XPath API with their own implementation (which I don't think anyone has done), they will need to make code changes because the underlying API will change a bit.    It will also mean that people who wrote code against JDOM 2.4 will not be able to run with JDOM 2.3 or older.    I don't believe any of this will be a problem, but I thought I would get some input before I commit....    I have submitted Issue 99 to track:    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/99" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/99 &lt;/a&gt;   Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Enhance jdom by OSGi support</header>
    <body>Hi Benjamin.    An early issue was created in the JDOM 2.x process:    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/6" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/6 &lt;/a&gt;   This has been resolved, and JDOM 2.x has no classes/files in anything other than the org.jdom2.* namespace.    This should make it easier to make a bundle from JDOM 2.x    That's the good news.    The bad news is that I know nothing about OSGi. I have no idea of what it takes to support that model.    You mention Maven in your mail. At the moment the 'maven' word is a swear word in my home.... It's not likely (while I am maintaining JDOM) for the code base to be converted to a maven build process. There are some real reasons, and some emotional reasons, but fundamentally I regret having committed to producing a JDOM artifact on maven-central.    If a maven build process for JDOM is a requirement of OSGi support then it is a 'no-go' for me.    If maven is not required for creating a suitable OSGi system, then I will consider putting in effort to make it work on the following 'conditions':    - there is some distinct reason why it is better for 'jdom' to create the bundle rather than some third-party (as you have already pointed out, other people seem to be making OSGi bundles for JDOM already...) - there is an OSGi expert who has 'round-trip' experience in making OSGi bundles who can take responsibility for the JDOM OSGi bundle (responsibility for either 'doing it', or alternatively being a 'mentor' for someone who 'does it', and then 'validates' the result). The expert also has to be available for some time to answer any issues that may come up. - there is no need for maven in the JDOM build - there is no need to change any signatures of the JDOM API - there is a relatively easy system for testing the bundle to ensure it works.    I have learned (from the maven-central artifact for JDOM) that there are issues when trying to support some protocol/system that you don't understand.    I do no know OSGi. I do not use it. I do not know its benefits even. I am not equipped to produce it. I cannot even learn enough about it to get to the point where I am expert enough to do it properly.    There needs to be a committed OSGi expert involved.    Rolf    On 15/09/2012 3:46 AM, Benjamin Graf wrote:   &lt;div class="quote quote-1"&gt;  Hi,    is OSGi support still of any interest? Maybe have a look on  &lt;a class="exlink mklink" href="https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2" rel="nofollow"&gt; https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2 &lt;/a&gt; to get the right manifest entries for jdom2. It might be useful to switch the whole project to maven at give it standardized structure and let all the magic been done by plugins (package type bundle)    Any comments?    Greets Benjamin &lt;a class="exlink mklink" href="https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2" rel="nofollow"&gt; https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2 &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Enhance jdom by OSGi support</header>
    <body>Hi,     is OSGi support still of any interest? Maybe have a look on  &lt;a class="exlink mklink" href="https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2" rel="nofollow"&gt; https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2 &lt;/a&gt; to get the right manifest entries for jdom2. It might be useful to switch the whole project to maven at give it standardized structure and let all the magic been done by plugins (package type bundle)    Any comments?    Greets Benjamin &lt;a class="exlink mklink" href="https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2" rel="nofollow"&gt; https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-2.0.2 &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Performance measurements with Saxon</header>
    <body>O'Neil is working on some refactoring of the wrapper code at the moment, he'll send you a copy when it's stable. We're trying to reduce proliferation so that improvements to algorithms only need to be made once.    Generally these queries run far faster than the tree construction time. In the table I posted, "build-time" is the time to build the model in ms (say 177ms) and "avg" is the time to run the query in ms (0.04ms for the simplest queries, about 30ms for the most expensive). So you are right that if the model has to be built in order to run a single query or transformation, the build time can be more important than the query time. This is of course the scenario where lazy construction ought to play a role.    (Most of the XMark queries are linear with document size assuming the Saxon-EE optimizer is available; if I remember right only one is quadratic. Of course with non-linear queries, the query time quickly overtakes the build time as the document size grows.)    In this test we wanted to test our own builders, so we are building the tree programmatically rather than just invoking the parser; we haven't tested how this build time compares with the "native" build using the parser. The only case for using JDOM with Saxon in preference to using the TinyTree is where the model is built programmatically by a previous step in the processing pipeline, so this isn't an unreasonable thing to do.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Performance measurements with Saxon</header>
    <body>Hi Michael.    I look at those results and I am really pleased that JDOM 2.x is so much faster than JDOM 1.x on the query time (twice as fast as JDOM 1.x).    There were a number of areas in JDOM 2.x that I focused on, memory footprint, iterator performance, and parse time. It is really good to see that the memory and iterator improvements are reflected in your 'independent' tests.    Of course, it's also instinctive to be competitive.... and, in that light, I have to ask:    - is it possible you can point me to the code you are using for the test (especially the 'wrapper layers' so I can inspect that code, and perhaps have a 'second opinion' to see whether the wrapper has room for improvement, and also whether JDOM can accommodate the Saxon logic more efficiently... I am willing (eager) to spend some time ensuring that the combination of JDOM and Saxon is as good as possible.    - can you give an indication of what the baseline time is for the TinyTree query process? The ratios are good to compare one model against the other, but, creating the JDOM model takes 110ms less than XOM, and if the queries are taking just a few ms, then it stands to reason that JDOM2 outperforms XOM substantially for cases where. For example, if the Query takes 5ms, then JDOM can query the document 22 times in the time it takes XOM to query it once....    Finally, I already have a scheduled release for JDOM 2.0.4 for early October. If it is possible to 'link up' with your Saxon team I think it is worth working together so that I can have an even better combination of JDOM 2.x and Saxon for release 9.5 of Saxon.... would that be possible? It would also be great to get some feedback on the JDOM 2.x apis and whether the changes have made it easier (or harder) to integrate with Saxon.... a 'debriefing' would be nice.    Thanks for the feedack on the performance though, it's great to see something independent.    Rolf    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  JDOM2 is now working as an external object model for Saxon.    We've done some performance measurements which are summarised here:    &lt;a class="exlink mklink" href="http://dev.saxonica.com/blog/mike/2012/09/index.html#000194" rel="nofollow"&gt; http://dev.saxonica.com/blog/mike/2012/09/index.html#000194 &lt;/a&gt;   These figures show that of all the external object models, JDOM2 now comes second (to XOM) in the league. The Saxon driver for XOM is probably the most carefully tuned of all the drivers, which may have something to do with it; also, I believe that XOM added features explicitly for Saxon's use, to make sorting of nodes into document order   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-1"&gt;  more efficient.    A more detailed breakdown of the results for JDOM1 and JDOM2 is given below. The first group of results are for JDOM1, the second group for JDOM2. For each query in the XMark benchmark, they show the execution time in seconds running against a 1Mb source document; the driver executes each query repeatedly until 1000 iterations or 30 seconds have elapsed.    There's a consistent speed-up between JDOM and JDOM2. In the cases where   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-1"&gt;  the speed-up is greatest, however, this is in part because of improvements in the Saxon "wrapper": instead of using our own general-purpose implementation of the descendant axis, we now make use of Parent.getDescendants().    In this measurements, JDOM2 has slightly lower memory requirements but slightly higher tree-building time; but I wouldn't be 100% confident that either figure is consistent.    Our intention is to release Saxon 9.5 (when it's ready) with support for   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-1"&gt;  both JDOM and JDOM2.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Performance measurements with Saxon</header>
    <body>JDOM2 is now working as an external object model for Saxon.    We've done some performance measurements which are summarised here:    &lt;a class="exlink mklink" href="http://dev.saxonica.com/blog/mike/2012/09/index.html#000194" rel="nofollow"&gt; http://dev.saxonica.com/blog/mike/2012/09/index.html#000194 &lt;/a&gt;   These figures show that of all the external object models, JDOM2 now comes second (to XOM) in the league. The Saxon driver for XOM is probably the most carefully tuned of all the drivers, which may have something to do with it; also, I believe that XOM added features explicitly for Saxon's use, to make sorting of nodes into document order more efficient.    A more detailed breakdown of the results for JDOM1 and JDOM2 is given below. The first group of results are for JDOM1, the second group for JDOM2. For each query in the XMark benchmark, they show the execution time in seconds running against a 1Mb source document; the driver executes each query repeatedly until 1000 iterations or 30 seconds have elapsed.    There's a consistent speed-up between JDOM and JDOM2. In the cases where the speed-up is greatest, however, this is in part because of improvements in the Saxon "wrapper": instead of using our own general-purpose implementation of the descendant axis, we now make use of Parent.getDescendants().    In this measurements, JDOM2 has slightly lower memory requirements but slightly higher tree-building time; but I wouldn't be 100% confident that either figure is consistent.    Our intention is to release Saxon 9.5 (when it's ready) with support for both JDOM and JDOM2.</body>
  </mail>
  <mail>
    <header>[jdom-interest] HotFix packages on GitHub</header>
    <body>Hi all.    During the 2.x process I have uploaded a number of files to GitHub here:    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;   There are 'real' packages (2.0.0, 2.0.1, 2.0.2, and 2.0.3) as well as real support files (jdom2-dev-jars.zip).    There are also a lot of 'low value' files, like the early beta versions of 2.x, and the various *issue*.zip interim fix packages.    I intend to remove all except the 'current' issue packages, and I intend to remove the BETA packages. This would leave just the important stuff behind.    Can anyone think of any reason to keep these 'low value' files? They are just taking up space..... aren't they?    Unless I hear otherwise, I will remove the cruft this coming weekend....    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Pending fix for issue #93</header>
    <body>Hi all.    Recently issue #93 was filed (this morning), and I have a fix out for it already....    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/93" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/93 &lt;/a&gt;   This issue relates to using JDOM in a security-constrained environment (in this case, an applet). The actual issue is that some of the JDOM code references System.getProperties(), and some properties are not accessible from Applets.    This issue is contained within a very limited scope of JDOM usage, so it should have no impact on regular JDOM users.    Still, you should probably be aware of it.    The issue has been fixed, and there is a hotfix package of JDOM with the fix available on the github download site.    I will be scheduling a formal release of JDOM 2.0.4 for the October timeframe unless something else comes up before that.    Thanks all    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.3 released - special note for Maven users</header>
    <body>Hi all.    JDOM 2.0.3 is now available from the regular locations, unless you are a maven user, in which case, it is not the normal location! See the maven notes at the end....    The changes for 2.0.3 are as follows:    Bugs: Fixes Issue 88 - makes subclasses of JDOM content serializable even if they are not in the org.jdom2 package.    Fixes Issue 90 - fixes a false-positive check for Attributes. See the issue for the details.    Features: Fixes Issue 89 - extends the SAX processing in JDOM to allow specific (named) JAXP factories to be used    Fixes Issue 91 - A performance improvement for AttributeList    Fixes Issue 92 - Performance improvements for Verifier    No issue, but includes performance improvements to the regular ContentList.    Procedural: Resolves Issue 87 - The name for the JDOM artifact in maven-central: JDOM 2.x from now on will be released in to the jdom2 artifact, instead of the jdom artifact.    Please download the package from:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.0.3.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.0.3.zip &lt;/a&gt;   Maven Users ===========    If you use maven to access your JDOM resources, please note that this release was not made to the jdom artifact, but to the jdom2 artifact.    This has all sorts of implications, but, I am assured, that this is the best way to reduce the headaches that were created when jdom 2.0.0 was first released.    Please see the notes on issue #87 to understand the reasons for why this decision was made...  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/87" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/87 &lt;/a&gt;   In future, maven users should only reference JDOM 1.x versions from the jdom artifact, and all JDOM 2.x versions should be referenced from the jdom2 artifact.    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Thanks Rolf. That actually does clarify a few things. Especially:    a big difference between XML 1.0 and 1.1 is that the Char dataset for 1.1   &lt;div class="quote quote-1"&gt;  is larger than 1.0 (it includes [#x1-#xD7FF] instead of 'just' #x9 | #xA | #xD | [#x20-#xD7FF] )   &lt;/div&gt;   I am slowly becoming 'one' with the xml  :)    Wilf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  So, I have been studying up on the Chars and RestrictedChars in the XML1.1 spec.    My personal feeling is that the RestrictedChars mechanism for specifying the document format is somewhat complicated, but I now believe I have 'grokked' it. It all boils down to these four constraints:    1. There are two sets of Characters defined for XML:    Char ::= [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF] RestrictedChar ::= [#x1-#x8] | [#xB-#xC] | [#xE-#x1F] | [#x7F-#x84] | [#x86-#x9F]    RestrictedChar is a subset of Char    2. a valid XML *unparsed* document is defined as:    document ::= ( prolog element Misc* ) - ( Char* RestrictedChar Char* )    3. prolog, element, and Misc are all (indirectly) constrained to 'Char' based characters.    4. Character and entity references must resolve to data from the 'Char' set... &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#" rel="nofollow"&gt; http://www.w3.org/TR/xml11/# &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#sec-references" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#sec-references &lt;/a&gt;    Based on the four statements above it is apparent that a valid document consists of a prolog (which may be empty), an element (which must exist), and followed by optional comments, PI's and whitespace. Further, there are not allowed to be any restricted chars in the *unparsed* document anywhere.    But, a big difference between XML 1.0 and 1.1 is that the Char dataset for 1.1 is larger than 1.0 (it includes [#x1-#xD7FF] instead of 'just' #x9 | #xA | #xD | [#x20-#xD7FF] )    So, XML 1.1 includes all the low-value control characters.... but, it *Restricts* them from appearing *raw* in the unparsed document. It goes even further, and it also restricts the following chars in the *unparsed* document: [#x7F-#x84] | [#x86-#x9F].    In XML 1.1 though, you can use a char reference to display these    Unfortunately for you, Wilf, XML 1.1 still makes the following Java char values illegal as XML characters: 0x0000, 0xD800-0xDFFF, and 0xFFFF    JDOM 2.x follows JDOM 1.x and allows the set of characters defined for XML 1.0.    This is likely a problem. Unfortunately, it is not easily possible for JDOM to 'infer' whether it is working with an XML 1.0 or 1.1 document.    Perhaps this needs some thought.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>So, I have been studying up on the Chars and RestrictedChars in the XML1.1 spec.    My personal feeling is that the RestrictedChars mechanism for specifying the document format is somewhat complicated, but I now believe I have 'grokked' it. It all boils down to these four constraints:    1. There are two sets of Characters defined for XML:    Char ::= [#x1-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF] RestrictedChar ::= [#x1-#x8] | [#xB-#xC] | [#xE-#x1F] | [#x7F-#x84] | [#x86-#x9F]    RestrictedChar is a subset of Char    2. a valid XML *unparsed* document is defined as:    document ::= ( prolog element Misc* ) - ( Char* RestrictedChar Char* )    3. prolog, element, and Misc are all (indirectly) constrained to 'Char' based characters.    4. Character and entity references must resolve to data from the 'Char' set... &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#sec-references" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#sec-references &lt;/a&gt;   Based on the four statements above it is apparent that a valid document consists of a prolog (which may be empty), an element (which must exist), and followed by optional comments, PI's and whitespace. Further, there are not allowed to be any restricted chars in the *unparsed* document anywhere.    But, a big difference between XML 1.0 and 1.1 is that the Char dataset for 1.1 is larger than 1.0 (it includes [#x1-#xD7FF] instead of 'just' #x9 | #xA | #xD | [#x20-#xD7FF] )    So, XML 1.1 includes all the low-value control characters.... but, it *Restricts* them from appearing *raw* in the unparsed document. It goes even further, and it also restricts the following chars in the *unparsed* document: [#x7F-#x84] | [#x86-#x9F].    In XML 1.1 though, you can use a char reference to display these    Unfortunately for you, Wilf, XML 1.1 still makes the following Java char values illegal as XML characters: 0x0000, 0xD800-0xDFFF, and 0xFFFF    JDOM 2.x follows JDOM 1.x and allows the set of characters defined for XML 1.0.    This is likely a problem. Unfortunately, it is not easily possible for JDOM to 'infer' whether it is working with an XML 1.0 or 1.1 document.    Perhaps this needs some thought.    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>I retract that in its entirety!    You are 100% correct. Bytes in does not equal bytes out.    Wilf (slightly humbled at this point)    ---------- Forwarded message ---------- &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Date: Fri, Sep 7, 2012 at 3:47 PM Subject: Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body &lt;span&gt; bjo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xowave.com &lt;/span&gt; Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;   Java strings are not zero terminated. In Java, you can do this just fine:       and you get ...    text is [ ] bytes are: [0] chars are: [ ]    Whatever bytes you put into a String in java you always get out the same. Only change would be if you add in one charset and extract in a different one.    However, for binary data, like u said, Base 64 is best (it seems) since that is the only way to ensure wysiwyg.    Wilf    &lt;span&gt; bjo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xowave.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  On Sep 7, 2012, at 4:43 PM, Canadian Wilf wrote:   &lt;div class="quote quote-2"&gt;  I can do this:    String random = new String(someRandomByte[])   &lt;/div&gt;   Let me address this by pointing out a degenerate case. Strings in java are terminated by the null char (er, I think. Wow, it's been a while since I learned this insanely basic thing). If your someRandomBytes contains two consecutive zero bytes (= a single zero char), then the string "random" will obviously not be what you wanted, because it will end early -- if you are lucky. Another example is if the "someRandomByte" ends in the first half of a unicode codepoint. What happens then? So, yes you can construct a string from a byte array like you did here but please don't! RTFM: "The behavior of this constructor when the given bytes are not valid in the default charset is unspecified." Unspecified. As in "it might delete your hard drive, log on to facebook and unfriend your wife." That's what unspecified means, so those bytes need to be "sanitized" too.    If that's the kind of data you want to put in XML (raw, random-assed binary), use Base64!   &lt;div class="quote quote-2"&gt;  However, the string cannot be passed to the Text of an XML Element since   &lt;/div&gt;  it may contain illegal characters (&amp;lt;= 0X20 ascii, vertical tab, etc.) This will fail:   &lt;div class="quote quote-2"&gt;   new Element("test").setText(random)    XOM and JDOM both restrict the access and will throw   &lt;/div&gt;  IllegalDataException if one of the characters (0x--0xFFFF) is not in XML Unicode specs.    First off, I think maybe you should read this because we are not talking about 0x0 to 0xFFFF: &lt;a class="exlink mklink" href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow"&gt; http://www.joelonsoftware.com/articles/Unicode.html &lt;/a&gt;   and &amp;gt; for obvious reasons, but the library does this for you. Then there are values you can't put into XML at all. These fall into other categories. "not valid in a string" (eg the NULL character usually used as a string terminator) is one. Yes, that's right, you can't put 0x00 in an XML string, 'cause you can't put it in a string! OMG! Stop the presses! I also find this annoying, and have been bitten by it (I think it was 0x17 or something), but that's life.    I agree, however, it would be nice to have some clarity on exactly what's allowed.    When in doubt, use Base64!    Or create sub elements for the weird chars, just like html does for, say,    bjorn</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>I retract that!    If you use UTF-8 or ASCII or ascii compatible charset, then the bytes are the same.    UTF-16 will be a bit weird.    ---------- Forwarded message ---------- &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Date: Fri, Sep 7, 2012 at 3:47 PM Subject: Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body &lt;span&gt; bjo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xowave.com &lt;/span&gt; Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;   Java strings are not zero terminated. In Java, you can do this just fine:       and you get ...    text is [ ] bytes are: [0] chars are: [ ]    Whatever bytes you put into a String in java you always get out the same. Only change would be if you add in one charset and extract in a different one.    However, for binary data, like u said, Base 64 is best (it seems) since that is the only way to ensure wysiwyg.    Wilf    &lt;span&gt; bjo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xowave.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  On Sep 7, 2012, at 4:43 PM, Canadian Wilf wrote:   &lt;div class="quote quote-2"&gt;  I can do this:    String random = new String(someRandomByte[])   &lt;/div&gt;   Let me address this by pointing out a degenerate case. Strings in java are terminated by the null char (er, I think. Wow, it's been a while since I learned this insanely basic thing). If your someRandomBytes contains two consecutive zero bytes (= a single zero char), then the string "random" will obviously not be what you wanted, because it will end early -- if you are lucky. Another example is if the "someRandomByte" ends in the first half of a unicode codepoint. What happens then? So, yes you can construct a string from a byte array like you did here but please don't! RTFM: "The behavior of this constructor when the given bytes are not valid in the default charset is unspecified." Unspecified. As in "it might delete your hard drive, log on to facebook and unfriend your wife." That's what unspecified means, so those bytes need to be "sanitized" too.    If that's the kind of data you want to put in XML (raw, random-assed binary), use Base64!   &lt;div class="quote quote-2"&gt;  However, the string cannot be passed to the Text of an XML Element since   &lt;/div&gt;  it may contain illegal characters (&amp;lt;= 0X20 ascii, vertical tab, etc.) This will fail:   &lt;div class="quote quote-2"&gt;   new Element("test").setText(random)    XOM and JDOM both restrict the access and will throw   &lt;/div&gt;  IllegalDataException if one of the characters (0x--0xFFFF) is not in XML Unicode specs.    First off, I think maybe you should read this because we are not talking about 0x0 to 0xFFFF: &lt;a class="exlink mklink" href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow"&gt; http://www.joelonsoftware.com/articles/Unicode.html &lt;/a&gt;   and &amp;gt; for obvious reasons, but the library does this for you. Then there are values you can't put into XML at all. These fall into other categories. "not valid in a string" (eg the NULL character usually used as a string terminator) is one. Yes, that's right, you can't put 0x00 in an XML string, 'cause you can't put it in a string! OMG! Stop the presses! I also find this annoying, and have been bitten by it (I think it was 0x17 or something), but that's life.    I agree, however, it would be nice to have some clarity on exactly what's allowed.    When in doubt, use Base64!    Or create sub elements for the weird chars, just like html does for, say,    bjorn</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Java strings are not zero terminated. In Java, you can do this just fine:       and you get ...    text is [ ] bytes are: [0] chars are: [ ]    Whatever bytes you put into a String in java you always get out the same. Only change would be if you add in one charset and extract in a different one.    However, for binary data, like u said, Base 64 is best (it seems) since that is the only way to ensure wysiwyg.    Wilf    &lt;span&gt; bjo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xowave.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  On Sep 7, 2012, at 4:43 PM, Canadian Wilf wrote:   &lt;div class="quote quote-2"&gt;  I can do this:    String random = new String(someRandomByte[])   &lt;/div&gt;   Let me address this by pointing out a degenerate case. Strings in java are terminated by the null char (er, I think. Wow, it's been a while since I learned this insanely basic thing). If your someRandomBytes contains two consecutive zero bytes (= a single zero char), then the string "random" will obviously not be what you wanted, because it will end early -- if you are lucky. Another example is if the "someRandomByte" ends in the first half of a unicode codepoint. What happens then? So, yes you can construct a string from a byte array like you did here but please don't! RTFM: "The behavior of this constructor when the given bytes are not valid in the default charset is unspecified." Unspecified. As in "it might delete your hard drive, log on to facebook and unfriend your wife." That's what unspecified means, so those bytes need to be "sanitized" too.    If that's the kind of data you want to put in XML (raw, random-assed binary), use Base64!   &lt;div class="quote quote-2"&gt;  However, the string cannot be passed to the Text of an XML Element since   &lt;/div&gt;  it may contain illegal characters (&amp;lt;= 0X20 ascii, vertical tab, etc.) This will fail:   &lt;div class="quote quote-2"&gt;   new Element("test").setText(random)    XOM and JDOM both restrict the access and will throw   &lt;/div&gt;  IllegalDataException if one of the characters (0x--0xFFFF) is not in XML Unicode specs.    First off, I think maybe you should read this because we are not talking about 0x0 to 0xFFFF: &lt;a class="exlink mklink" href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow"&gt; http://www.joelonsoftware.com/articles/Unicode.html &lt;/a&gt;   and &amp;gt; for obvious reasons, but the library does this for you. Then there are values you can't put into XML at all. These fall into other categories. "not valid in a string" (eg the NULL character usually used as a string terminator) is one. Yes, that's right, you can't put 0x00 in an XML string, 'cause you can't put it in a string! OMG! Stop the presses! I also find this annoying, and have been bitten by it (I think it was 0x17 or something), but that's life.    I agree, however, it would be nice to have some clarity on exactly what's allowed.    When in doubt, use Base64!    Or create sub elements for the weird chars, just like html does for, say,    bjorn</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>On Sep 7, 2012, at 4:43 PM, Canadian Wilf wrote:   &lt;div class="quote quote-1"&gt;  I can do this:    String random = new String(someRandomByte[])   &lt;/div&gt;   Let me address this by pointing out a degenerate case. Strings in java are &lt;br/&gt; terminated by the null char (er, I think. Wow, it's been a while since I learned &lt;br/&gt; this insanely basic thing). If your someRandomBytes contains two consecutive &lt;br/&gt; zero bytes (= a single zero char), then the string "random" will obviously not &lt;br/&gt; be what you wanted, because it will end early -- if you are lucky. Another &lt;br/&gt; example is if the "someRandomByte" ends in the first half of a unicode &lt;br/&gt; codepoint. What happens then? So, yes you can construct a string from a byte &lt;br/&gt; array like you did here but please don't! RTFM: "The behavior of this &lt;br/&gt; constructor when the given bytes are not valid in the default charset is &lt;br/&gt; unspecified." Unspecified. As in "it might delete your hard drive, log on to &lt;br/&gt; facebook and unfriend your wife." That's what unspecified means, so those bytes &lt;br/&gt; need to be "sanitized" too.    If that's the kind of data you want to put in XML (raw, random-assed binary), &lt;br/&gt; use Base64!   &lt;div class="quote quote-1"&gt;  However, the string cannot be passed to the Text of an XML Element since it may &lt;br/&gt; contain illegal characters (&amp;lt;= 0X20 ascii, vertical tab, etc.) This will fail:    new Element("test").setText(random)    XOM and JDOM both restrict the access and will throw IllegalDataException if one &lt;br/&gt; of the characters (0x--0xFFFF) is not in XML Unicode specs.   &lt;/div&gt;   First off, I think maybe you should read this because we are not talking about &lt;br/&gt; 0x0 to 0xFFFF: &lt;a class="exlink mklink" href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow"&gt; http://www.joelonsoftware.com/articles/Unicode.html &lt;/a&gt;   &lt;br/&gt; for obvious reasons, but the library does this for you. Then there are values &lt;br/&gt; you can't put into XML at all. These fall into other categories. "not valid in a &lt;br/&gt; string" (eg the NULL character usually used as a string terminator) is one. Yes, &lt;br/&gt; that's right, you can't put 0x00 in an XML string, 'cause you can't put it in a &lt;br/&gt; string! OMG! Stop the presses! I also find this annoying, and have been bitten &lt;br/&gt; by it (I think it was 0x17 or something), but that's life.    I agree, however, it would be nice to have some clarity on exactly what's &lt;br/&gt; allowed.    When in doubt, use Base64!    Or create sub elements for the weird chars, just like html does for, say, &lt;br/&gt;    bjorn</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Hi Oliver,     You get bonus points for the correct answer! And it is not just binary data that is the problem. All sorts of Java String data *could* have illegal XML characters.    So, I was a bit of an idiot until I understood that this is simply a limitation of XML and Java (and.Net and...). Furthermore, there is no work around other than to make sure to know what data you are working with before you setText(..) or the like.    I am not the only one caught by surprise by this:    &lt;a class="exlink mklink" href="http://apache-wicket.1842946.n4.nabble.com/How-to-deal-with-vertical-tabs-td3238166.html" rel="nofollow"&gt; http://apache-wicket.1842946.n4.nabble.com/How-to-deal-with-vertical-tabs-td3238166.html &lt;/a&gt;   &lt;a class="exlink mklink" href="http://www.xml.com/pub/a/2002/10/23/deviant.html" rel="nofollow"&gt; http://www.xml.com/pub/a/2002/10/23/deviant.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/8386970/best-practice-for-handling-vertical-tabs-and-other-invalid-xml-characters" rel="nofollow"&gt; http://stackoverflow.com/questions/8386970/best-practice-for-handling-vertical-tabs-and-other-invalid-xml-characters &lt;/a&gt;   The last link is a question.    What are the best practices for sanitizing data to make sure it does not contain the forbidden?    Wilf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>It sounds like you're trying to include binary data (converted to a string) in XML.  That won't work.  Try Base64 encoding the data first. (*Chris*)    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello,    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Let's focus on valid character data for xml. How to do this:      &lt;/div&gt;   Java Strings are not actually random bytes. The bytes are UTF-16, if I remember correctly.   &lt;div class="quote quote-2"&gt;  Element e = new Element("random") e.setText(s) or e.addContent(new CDATA(s))    Currently this will fail.   &lt;/div&gt;   Sorry, you lost me here. How will this fail? Will it throw an exception? Or will it otherwise do something undesired?    Maybe I'm missing something, but it sounds to me as if you are referring to specs that apply to XML character streams and not to JDOM objects.    Take care Oliver   &lt;div class="quote quote-2"&gt;  .. Which seems wrong because I should be able to send whatever data I want as text  in xml content.    What use is xml (1.0 or 1.1) if I cannot represent various data? Is the solution to make a custom escaper for my data?    e.setText(encodeSpecial(s)) and decodeSpecial(e.getText())    Crazy!    Wilf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;   Hi Wilf.    You are getting your wires crossed..... In your mail you referenced parsed and external entities. These have nothing to do with PCDATA (parsed character data - regular XML text), and CDATA (unparsed character data -    Michael was answering your question based on the 'entities', where as you want the details on the 'PCDATA' and the 'CDATA'.    So, forget about the 'entity' references, and focus on the valid character data for XML.    The only difference between CDATA (character blocks between &amp;lt;![CDATA[ and ]]&amp;gt; ) and PCDATA (element 'text'), is that the XML Parser will look for '&amp;lt;' and '&amp;amp;' characters in PCDATA, but not in CDATA.    With the correct escaping, all CDATA content can be expressed as PCDATA content.    This does not help you though, because not all Java 'char' characters are valid Unicode characters, and thus not all chars are valid as either CDATA or PCDATA.    In XML 1.0 this distinction was clear.    In XML 1.1 I am not certain how to interpret the difference between 'Chars' and 'RestrictedChars': &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#charsets" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#charsets &lt;/a&gt;   JDOM takes a 1.0 perspective on Characters... which may be a problem, but it is not going to solve your issues even if it supports 1.1 chars.    Rolf    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-4"&gt;  Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>I can do this:    String random = new String(someRandomByte[])    However, the string cannot be passed to the Text of an XML Element since it may contain illegal characters (&amp;lt;= 0X20 ascii, vertical tab, etc.) This will fail:    new Element("test").setText(random)    XOM and JDOM both restrict the access and will throw &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/IllegalDataException.html" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/IllegalDataException.html &lt;/a&gt; if one of the characters (0x--0xFFFF) is not in XML Unicode specs.    Either you did not know about this, or you were as stupid as I was just yesterday.    Wilf    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello,    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Let's focus on valid character data for xml. How to do this:      &lt;/div&gt;   Java Strings are not actually random bytes. The bytes are UTF-16, if I remember correctly.   &lt;div class="quote quote-2"&gt;  Element e = new Element("random") e.setText(s) or e.addContent(new CDATA(s))    Currently this will fail.   &lt;/div&gt;   Sorry, you lost me here. How will this fail? Will it throw an exception? Or will it otherwise do something undesired?    Maybe I'm missing something, but it sounds to me as if you are referring to specs that apply to XML character streams and not to JDOM objects.    Take care Oliver   &lt;div class="quote quote-2"&gt;  .. Which seems wrong because I should be able to send whatever data I want as text  in xml content.    What use is xml (1.0 or 1.1) if I cannot represent various data? Is the solution to make a custom escaper for my data?    e.setText(encodeSpecial(s)) and decodeSpecial(e.getText())    Crazy!    Wilf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;   Hi Wilf.    You are getting your wires crossed..... In your mail you referenced parsed and external entities. These have nothing to do with PCDATA (parsed character data - regular XML text), and CDATA (unparsed character data -    Michael was answering your question based on the 'entities', where as you want the details on the 'PCDATA' and the 'CDATA'.    So, forget about the 'entity' references, and focus on the valid character data for XML.    The only difference between CDATA (character blocks between &amp;lt;![CDATA[ and ]]&amp;gt; ) and PCDATA (element 'text'), is that the XML Parser will look for '&amp;lt;' and '&amp;amp;' characters in PCDATA, but not in CDATA.    With the correct escaping, all CDATA content can be expressed as PCDATA content.    This does not help you though, because not all Java 'char' characters are valid Unicode characters, and thus not all chars are valid as either CDATA or PCDATA.    In XML 1.0 this distinction was clear.    In XML 1.1 I am not certain how to interpret the difference between 'Chars' and 'RestrictedChars': &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#charsets" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#charsets &lt;/a&gt;   JDOM takes a 1.0 perspective on Characters... which may be a problem, but it is not going to solve your issues even if it supports 1.1 chars.    Rolf    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-4"&gt;  Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Hello,    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Let's focus on valid character data for xml. How to do this:      &lt;/div&gt;   Java Strings are not actually random bytes. The bytes are UTF-16, if I remember correctly.   &lt;div class="quote quote-1"&gt;  Element e = new Element("random") e.setText(s) or e.addContent(new CDATA(s))    Currently this will fail.   &lt;/div&gt;   Sorry, you lost me here. How will this fail? Will it throw an exception? Or will it otherwise do something undesired?    Maybe I'm missing something, but it sounds to me as if you are referring to specs that apply to XML character streams and not to JDOM objects.    Take care Oliver   &lt;div class="quote quote-1"&gt;  .. Which seems wrong because I should be able to send whatever data I want as text  in xml content.    What use is xml (1.0 or 1.1) if I cannot represent various data? Is the solution to make a custom escaper for my data?    e.setText(encodeSpecial(s)) and decodeSpecial(e.getText())    Crazy!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Maybe what JDOM needs is extensions, like .Net    &lt;a class="exlink mklink" href="http://blogs.technet.com/b/stefan_gossner/archive/2009/08/26/how-to-deal-with-invalid-characters-in-soap-responses-from-asp-net-web-services.aspx" rel="nofollow"&gt; http://blogs.technet.com/b/stefan_gossner/archive/2009/08/26/how-to-deal-with-invalid-characters-in-soap-responses-from-asp-net-web-services.aspx &lt;/a&gt;   Just nasty, this xml thing.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Wilf.    You are getting your wires crossed..... In your mail you referenced parsed and external entities. These have nothing to do with PCDATA (parsed character data - regular XML text), and CDATA (unparsed character data -    Michael was answering your question based on the 'entities', where as you want the details on the 'PCDATA' and the 'CDATA'.    So, forget about the 'entity' references, and focus on the valid character data for XML.    The only difference between CDATA (character blocks between &amp;lt;![CDATA[  and ]]&amp;gt; ) and PCDATA (element 'text'), is that the XML Parser will look for '&amp;lt;' and '&amp;amp;' characters in PCDATA, but not in CDATA.    With the correct escaping, all CDATA content can be expressed as PCDATA content.    This does not help you though, because not all Java 'char' characters are valid Unicode characters, and thus not all chars are valid as either CDATA or PCDATA.    In XML 1.0 this distinction was clear.    In XML 1.1 I am not certain how to interpret the difference between 'Chars' and 'RestrictedChars': &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#charsets" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#charsets &lt;/a&gt;   JDOM takes a 1.0 perspective on Characters... which may be a problem, but it is not going to solve your issues even if it supports 1.1 chars.    Rolf    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-2"&gt;  Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Let's focus on valid character data for xml. How to do this:       Element e = new Element("random") e.setText(s) or e.addContent(new CDATA(s))    Currently this will fail. .. Which seems wrong because I should be able to send whatever data I want as text  in xml content.    What use is xml (1.0 or 1.1) if I cannot represent various data? Is the solution to make a custom escaper for my data?    e.setText(encodeSpecial(s)) and decodeSpecial(e.getText())    Crazy!    Wilf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Wilf.    You are getting your wires crossed..... In your mail you referenced parsed and external entities. These have nothing to do with PCDATA (parsed character data - regular XML text), and CDATA (unparsed character data -    Michael was answering your question based on the 'entities', where as you want the details on the 'PCDATA' and the 'CDATA'.    So, forget about the 'entity' references, and focus on the valid character data for XML.    The only difference between CDATA (character blocks between &amp;lt;![CDATA[  and ]]&amp;gt; ) and PCDATA (element 'text'), is that the XML Parser will look for '&amp;lt;' and '&amp;amp;' characters in PCDATA, but not in CDATA.    With the correct escaping, all CDATA content can be expressed as PCDATA content.    This does not help you though, because not all Java 'char' characters are valid Unicode characters, and thus not all chars are valid as either CDATA or PCDATA.    In XML 1.0 this distinction was clear.    In XML 1.1 I am not certain how to interpret the difference between 'Chars' and 'RestrictedChars': &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#charsets" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#charsets &lt;/a&gt;   JDOM takes a 1.0 perspective on Characters... which may be a problem, but it is not going to solve your issues even if it supports 1.1 chars.    Rolf    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-2"&gt;  Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Hi Wilf.    You are getting your wires crossed..... In your mail you referenced parsed and external entities. These have nothing to do with PCDATA (parsed character data - regular XML text), and CDATA (unparsed character data -    Michael was answering your question based on the 'entities', where as you want the details on the 'PCDATA' and the 'CDATA'.    So, forget about the 'entity' references, and focus on the valid character data for XML.    The only difference between CDATA (character blocks between &amp;lt;![CDATA[  and ]]&amp;gt; ) and PCDATA (element 'text'), is that the XML Parser will look for '&amp;lt;' and '&amp;amp;' characters in PCDATA, but not in CDATA.    With the correct escaping, all CDATA content can be expressed as PCDATA content.    This does not help you though, because not all Java 'char' characters are valid Unicode characters, and thus not all chars are valid as either CDATA or PCDATA.    In XML 1.0 this distinction was clear.    In XML 1.1 I am not certain how to interpret the difference between 'Chars' and 'RestrictedChars': &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#charsets" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#charsets &lt;/a&gt;   JDOM takes a 1.0 perspective on Characters... which may be a problem, but it is not going to solve your issues even if it supports 1.1 chars.    Rolf    &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Then what is the proper mode:    Element e = new Element("foo")    Should I do this:       or       Wilf    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  No, that's all wrong. The contents of an unparsed entity are always an external resource, they are never part of a text or attribute node. Parsed entities do become part of the content, but they must always use the XML character set.    Michael Kay Saxonica    On 07/09/2012 13:10, Canadian Wilf wrote:    According to the xml 1.1 spec:    4 Physical Structures ...   &lt;div class="quote quote-2"&gt;  [Definition: An *unparsed entity* is a resource whose contents may or &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.]   &lt;/div&gt;   AND    Entities may be either parsed or unparsed. [Definition: The contents of   &lt;div class="quote quote-2"&gt;  a *parsed entity* are referred to as its replacement &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-repltext" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-repltext &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt; is considered an integral part of the document.]   &lt;/div&gt;   [Definition: An *unparsed entity* is a resource whose contents may or may   &lt;div class="quote quote-2"&gt;  &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.] Parsed entities are invoked by name using entity references; unparsed entities by name, given in the value of *ENTITY* or *ENTITIES* attributes.   &lt;/div&gt;   In the current JDOM version, Element method setText(string) and also addContent(CDATA) refuses text that contains illegal characters. It is treating the data provided as 'parsed' when it should by the spec be treating it as free content.    I understand:    1) The xml 1.1 spec defines a parsed entity as its 'replacement text'.    2) Replacement text' would refer to the actual textual makeup of a serialized Element, not the data an Element holds in a Text content element    Then, if the above is true, the current implementation is actually wrong to verify data.    I propose that JDOM stop verifying data set as Element text and CDATA and leave it to the xerces (or whatever) to make sure the document is proper 1.1.    Am I understanding everything correctly?    Thoughts?    ---------- Forwarded message ---------- &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Date: Thu, Sep 6, 2012 at 9:52 PM Subject: XML 1.1 -- Please stab me with a dull knife and trample my dead body To: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;   Hi All,    I just learned that in order to safely use JDOM2, I will need to sanitize my Element .setText(string) so that the parsed data does not contain verboten characters under the XML 1.1 spec.    I have an ascii processor and it needs to be able to use xml as a document format. Unfortunately, not all ascii is allowed in an Element text.    Stab me with a dull knife and trample my dead body. But ..... please please please don't make me sanitize all my data before putting it into XML Elements.    1) It makes my programming task much more cumbersome because I must ensure not to feed any of the new verboten and doomed ascii/UTF-8 characters to store as xml text.    2) No one uses xml 1.1, do they?    3) It slows down the parsing (a very small amount) with all the element text checking.    Now that JDOM2 is xml 1.1 compatible, is there any turning back. Can this be undone?    Does everyone understand that their software will bust if data provided as text is not adhering to the new standard?    What about you? How do you deal with it when using the libraries?    Wilf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Then, what you are referring to is &amp;lt;!ENTITY bob  "Bob Weaver"&amp;gt;.  And that part of the spec has nothing to do with the JDOM content in a Text of CDATA node.    Wilf    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  No, that's all wrong. The contents of an unparsed entity are always an external resource, they are never part of a text or attribute node. Parsed entities do become part of the content, but they must always use the XML character set.    Michael Kay Saxonica    On 07/09/2012 13:10, Canadian Wilf wrote:    According to the xml 1.1 spec:    4 Physical Structures ...   &lt;div class="quote quote-2"&gt;  [Definition: An *unparsed entity* is a resource whose contents may or &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.]   &lt;/div&gt;   AND    Entities may be either parsed or unparsed. [Definition: The contents of   &lt;div class="quote quote-2"&gt;  a *parsed entity* are referred to as its replacement &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-repltext" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-repltext &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt; is considered an integral part of the document.]   &lt;/div&gt;   [Definition: An *unparsed entity* is a resource whose contents may or may   &lt;div class="quote quote-2"&gt;  &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.] Parsed entities are invoked by name using entity references; unparsed entities by name, given in the value of *ENTITY* or *ENTITIES* attributes.   &lt;/div&gt;   In the current JDOM version, Element method setText(string) and also addContent(CDATA) refuses text that contains illegal characters. It is treating the data provided as 'parsed' when it should by the spec be treating it as free content.    I understand:    1) The xml 1.1 spec defines a parsed entity as its 'replacement text'.    2) Replacement text' would refer to the actual textual makeup of a serialized Element, not the data an Element holds in a Text content element    Then, if the above is true, the current implementation is actually wrong to verify data.    I propose that JDOM stop verifying data set as Element text and CDATA and leave it to the xerces (or whatever) to make sure the document is proper 1.1.    Am I understanding everything correctly?    Thoughts?    ---------- Forwarded message ---------- &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Date: Thu, Sep 6, 2012 at 9:52 PM Subject: XML 1.1 -- Please stab me with a dull knife and trample my dead body To: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;   Hi All,    I just learned that in order to safely use JDOM2, I will need to sanitize my Element .setText(string) so that the parsed data does not contain verboten characters under the XML 1.1 spec.    I have an ascii processor and it needs to be able to use xml as a document format. Unfortunately, not all ascii is allowed in an Element text.    Stab me with a dull knife and trample my dead body. But ..... please please please don't make me sanitize all my data before putting it into XML Elements.    1) It makes my programming task much more cumbersome because I must ensure not to feed any of the new verboten and doomed ascii/UTF-8 characters to store as xml text.    2) No one uses xml 1.1, do they?    3) It slows down the parsing (a very small amount) with all the element text checking.    Now that JDOM2 is xml 1.1 compatible, is there any turning back. Can this be undone?    Does everyone understand that their software will bust if data provided as text is not adhering to the new standard?    What about you? How do you deal with it when using the libraries?    Wilf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>No, that's all wrong. The contents of an unparsed entity are always an external resource, they are never part of a text or attribute node. Parsed entities do become part of the content, but they must always use the XML character set.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>According to the xml 1.1 spec:    4 Physical Structures ...   &lt;div class="quote quote-1"&gt;  [Definition: An *unparsed entity* is a resource whose contents may or may &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.]   &lt;/div&gt;   AND    Entities may be either parsed or unparsed. [Definition: The contents of a *parsed   &lt;div class="quote quote-1"&gt;  entity* are referred to as its replacement &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-repltext" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-repltext &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt; is considered an integral part of the document.]   &lt;/div&gt;   [Definition: An *unparsed entity* is a resource whose contents may or may   &lt;div class="quote quote-1"&gt;  &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-text" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-text &lt;/a&gt; &amp;gt;, and if text, may be other than XML. Each unparsed entity has an associated &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.w3.org/TR/xml11/#dt-notation" rel="nofollow"&gt; http://www.w3.org/TR/xml11/#dt-notation &lt;/a&gt; &amp;gt;, identified by name. Beyond a requirement that an XML processor make the identifiers for the entity and notation available to the application, XML places no constraints on the contents of unparsed entities.] Parsed entities are invoked by name using entity references; unparsed entities by name, given in the value of *ENTITY* or *ENTITIES* attributes.   &lt;/div&gt;   In the current JDOM version, Element method setText(string) and also addContent(CDATA) refuses text that contains illegal characters. It is treating the data provided as 'parsed' when it should by the spec be treating it as free content.    I understand:    1) The xml 1.1 spec defines a parsed entity as its 'replacement text'.    2) Replacement text' would refer to the actual textual makeup of a serialized Element, not the data an Element holds in a Text content element    Then, if the above is true, the current implementation is actually wrong to verify data.    I propose that JDOM stop verifying data set as Element text and CDATA and leave it to the xerces (or whatever) to make sure the document is proper 1.1.    Am I understanding everything correctly?    Thoughts?    ---------- Forwarded message ---------- &lt;span&gt; canw &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Date: Thu, Sep 6, 2012 at 9:52 PM Subject: XML 1.1 -- Please stab me with a dull knife and trample my dead body To: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;   Hi All,    I just learned that in order to safely use JDOM2, I will need to sanitize my Element .setText(string) so that the parsed data does not contain verboten characters under the XML 1.1 spec.    I have an ascii processor and it needs to be able to use xml as a document format. Unfortunately, not all ascii is allowed in an Element text.    Stab me with a dull knife and trample my dead body. But ..... please please please don't make me sanitize all my data before putting it into XML Elements.    1) It makes my programming task much more cumbersome because I must ensure not to feed any of the new verboten and doomed ascii/UTF-8 characters to store as xml text.    2) No one uses xml 1.1, do they?    3) It slows down the parsing (a very small amount) with all the element text checking.    Now that JDOM2 is xml 1.1 compatible, is there any turning back. Can this be undone?    Does everyone understand that their software will bust if data provided as text is not adhering to the new standard?    What about you? How do you deal with it when using the libraries?    Wilf</body>
  </mail>
  <mail>
    <header>[jdom-interest] XML 1.1 -- Please stab me with a dull knife and trample my dead body</header>
    <body>Hi All,     I just learned that in order to safely use JDOM2, I will need to sanitize my Element .setText(string) so that the parsed data does not contain verboten characters under the XML 1.1 spec.    I have an ascii processor and it needs to be able to use xml as a document format. Unfortunately, not all ascii is allowed in an Element text.    Stab me with a dull knife and trample my dead body. But ..... please please please don't make me sanitize all my data before putting it into XML Elements.    1) It makes my programming task much more cumbersome because I must ensure not to feed any of the new verboten and doomed ascii/UTF-8 characters to store as xml text.    2) No one uses xml 1.1, do they?    3) It slows down the parsing (a very small amount) with all the element text checking.    Now that JDOM2 is xml 1.1 compatible, is there any turning back. Can this be undone?    Does everyone understand that their software will bust if data provided as text is not adhering to the new standard?    What about you? How do you deal with it when using the libraries?    Wilf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Preparing for JDOM 2.0.3</header>
    <body>Very nice work!    On 2012-09-04 12:41, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi All.    A few issues have been identified in JDOM over the past few weeks. When the first issue was resolved (unable to serialize subclasses of Element outside org.jdom2 package) I promised to release 2.0.3 over this past weekend, but a second (low priority) issue was identified (lack of support for specific JAXP factory).    Additionally, 'Canadian Wilf' showed interest in improving the performance of the Verifier code. As a result, I have been working with Wilf to get the Verifier code 'fast'.    Taken together, it all means that I have 'slipped' this release date...    Right now the performance changes have been completed successfully, with the Verifier now running in about one third of the time it used to. This speeds up parsing considerably. THere is a wiki page documenting the process here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/Verifier-Performance" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/Verifier-Performance &lt;/a&gt;   I have just built the 'hotfix' package containing all fixes since JDOM 2.0.2 and posted it to github here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;   I intend to release the full 2.0.3 package on this coming weekend (slipping the 2.0.3 release date by 1 week).    Thanks &amp;amp; Happy Coding</body>
  </mail>
  <mail>
    <header>[jdom-interest] Preparing for JDOM 2.0.3</header>
    <body>Hi All.    A few issues have been identified in JDOM over the past few weeks. When the first issue was resolved (unable to serialize subclasses of Element outside org.jdom2 package) I promised to release 2.0.3 over this past weekend, but a second (low priority) issue was identified (lack of support for specific JAXP factory).    Additionally, 'Canadian Wilf' showed interest in improving the performance of the Verifier code. As a result, I have been working with Wilf to get the Verifier code 'fast'.    Taken together, it all means that I have 'slipped' this release date...    Right now the performance changes have been completed successfully, with the Verifier now running in about one third of the time it used to. This speeds up parsing considerably. THere is a wiki page documenting the process here: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/Verifier-Performance" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/Verifier-Performance &lt;/a&gt;   I have just built the 'hotfix' package containing all fixes since JDOM 2.0.2 and posted it to github here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;   I intend to release the full 2.0.3 package on this coming weekend (slipping the 2.0.3 release date by 1 week).    Thanks &amp;amp; Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>Thanks again Rolf----Dropped crimson and it runs OK with the no arg constructor.    On to learning the new features in JDOM.    From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Tuesday, August 21, 2012 2:32 PM To: Craig Christophersen Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] jdom2 runtime    OK, I believe the issue is an incompatible issue with crimson. I believe you have xrimson earlier in the classpath than xerces, as a result the JAXP process is choosing the crimson parser instead of xerces.    You should be able to check this by adding "-Djaxp.debug=1" to your jvm arguments.    Crimson is *really* old... the most recent release was in 2001.... and it is discontinued. Though I am surprised it even has any JAXP vestiges... though, checking it's documentation, it *does* support JAXP 1.1, thus, I imagine what is happening in your case is that you have Crimson earlier in the classpath than xerces. As a result, the JAP API is finding the crimson parser ahead of the Xerces.    I recommend dropping the crimson jar from your classpath. There is nothing you should be needing Crimson for (and if you have third-party-dependencies requiring crimson then there's problems).    Alternatively, put the xerces jar at the top of the classpath.    With the fix for issue #89 (not available yet) you can specify the xerces JAXP factory explicitly....    For the record, the 'simple' circumstance is for there to be just one XML parser in your classpath... not two.    I recommend using the xerces.jar and matching xmlapis.jar only    For what it's worth, the other jars Xalan, saxon, etc, are not actual parsers, but rather additional XML functionality.    Rolf    On 21/08/2012 3:37 PM, Craig Christophersen wrote:    Exception in thread "AWT-EventQueue-0" java.lang.ExceptionInInitializerError    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(SAXBuilder.java:338)    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(SAXBuilder.java:221)    at transform.ReadDmFile.&amp;lt;init&amp;gt;(ReadDmFile.java:47)    at transform.TransformAction.execute(TransformAction.java:410)    at transform.MakeBook.actionPerformed(MakeBook.java:112)    at javax.swing.AbstractButton.fireActionPerformed(Unknown Source)    at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.setPressed(Unknown Source)    at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)    at java.awt.AWTEventMulticaster.mouseReleased(Unknown Source)    at java.awt.Component.processMouseEvent(Unknown Source)    at javax.swing.JComponent.processMouseEvent(Unknown Source)    at java.awt.Component.processEvent(Unknown Source)    at java.awt.Container.processEvent(Unknown Source)    at java.awt.Component.dispatchEventImpl(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Window.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.EventQueue.dispatchEventImpl(Unknown Source)    at java.awt.EventQueue.access$000(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.security.AccessController.doPrivileged(Native Method)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.security.AccessController.doPrivileged(Native Method)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue.dispatchEvent(Unknown Source)    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.run(Unknown Source)    Caused by: java.lang.UnsupportedOperationException: This parser does not support specification "null" version "null"    at javax.xml.parsers.SAXParserFactory.setSchema(Unknown Source)    at org.jdom2.input.sax.XMLReaders.&amp;lt;init&amp;gt;(XMLReaders.java:122)    at org.jdom2.input.sax.XMLReaders.&amp;lt;clinit&amp;gt;(XMLReaders.java:95)    ... 42 more    Other parsers: Xalon-2.7.0.jar, xml-apis-est-1.3.04.jar, xml-apis.jar, xercesImpl.jar, saxon.jar,  crimson.jar    From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Tuesday, August 21, 2012 1:23 PM To: Craig Christophersen Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] jdom2 runtime    Yes, there's a real advantage to the no-arg constructor ... it's simple ;-)    But, it should be working. What's the error message? Is there a stack trace? Do you have any other XML Parsers in your classpath?    Rolf    On 21/08/2012 3:10 PM, Craig Christophersen wrote:    Thanks Rolf.    I am able to run new SAXBuilder(new XMLReaderSAX2Factory(false, "org.apache.xerces.parsers.SAXParser")); OK.    I do have xercesImpl and xml-apis in my classpath.  But I cannot yet get the no arg constructor (new SAXBuilder()) to run.    Is there some advantage to using the no arg constructor?    Thanks, Craig</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>OK, I believe the issue is an incompatible issue with crimson. I believe you have xrimson earlier in the classpath than xerces, as a result the JAXP process is choosing the crimson parser instead of xerces.    You should be able to check this by adding "-Djaxp.debug=1" to your jvm arguments.    Crimson is *really* old... the most recent release was in 2001.... and it is discontinued. Though I am surprised it even has any JAXP vestiges... though, checking it's documentation, it *does* support JAXP 1.1, thus, I imagine what is happening in your case is that you have Crimson earlier in the classpath than xerces. As a result, the JAP API is finding the crimson parser ahead of the Xerces.    I recommend dropping the crimson jar from your classpath. There is nothing you should be needing Crimson for (and if you have third-party-dependencies requiring crimson then there's problems).    Alternatively, put the xerces jar at the top of the classpath.    With the fix for issue #89 (not available yet) you can specify the xerces JAXP factory explicitly....    For the record, the 'simple' circumstance is for there to be just one XML parser in your classpath... not two.    I recommend using the xerces.jar and matching xmlapis.jar only    For what it's worth, the other jars Xalan, saxon, etc, are not actual parsers, but rather additional XML functionality.    Rolf    On 21/08/2012 3:37 PM, Craig Christophersen wrote:   &lt;div class="quote quote-1"&gt;   Exception in thread "AWT-EventQueue-0" java.lang.ExceptionInInitializerError    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(_SAXBuilder.java:338_)    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(_SAXBuilder.java:221_)    at transform.ReadDmFile.&amp;lt;init&amp;gt;(_ReadDmFile.java:47_)    at transform.TransformAction.execute(_TransformAction.java:410_)    at transform.MakeBook.actionPerformed(_MakeBook.java:112_)    at javax.swing.AbstractButton.fireActionPerformed(Unknown Source)    at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.setPressed(Unknown Source)    at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)    at java.awt.AWTEventMulticaster.mouseReleased(Unknown Source)    at java.awt.Component.processMouseEvent(Unknown Source)    at javax.swing.JComponent.processMouseEvent(Unknown Source)    at java.awt.Component.processEvent(Unknown Source)    at java.awt.Container.processEvent(Unknown Source)    at java.awt.Component.dispatchEventImpl(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Window.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.EventQueue.dispatchEventImpl(Unknown Source)    at java.awt.EventQueue.access$000(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.security.AccessController.doPrivileged(_Native Method_)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.security.AccessController.doPrivileged(_Native Method_)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue.dispatchEvent(Unknown Source)    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.run(Unknown Source)    Caused by: _java.lang.UnsupportedOperationException_: This parser does not support specification "null" version "null"    at javax.xml.parsers.SAXParserFactory.setSchema(Unknown Source)    at org.jdom2.input.sax.XMLReaders.&amp;lt;init&amp;gt;(_XMLReaders.java:122_)    at org.jdom2.input.sax.XMLReaders.&amp;lt;clinit&amp;gt;(_XMLReaders.java:95_)    ... 42 more    Other parsers: Xalon-2.7.0.jar, xml-apis-est-1.3.04.jar, xml-apis.jar, xercesImpl.jar, saxon.jar,  crimson.jar    *From:*Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] *Sent:* Tuesday, August 21, 2012 1:23 PM *To:* Craig Christophersen *Cc:* &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  *Subject:* Re: [jdom-interest] jdom2 runtime    Yes, there's a real advantage to the no-arg constructor ... it's simple ;-)    But, it should be working. What's the error message? Is there a stack trace? Do you have any other XML Parsers in your classpath?    Rolf    On 21/08/2012 3:10 PM, Craig Christophersen wrote:    Thanks Rolf.    I am able to run *new*SAXBuilder(*new*XMLReaderSAX2Factory(*false*, "org.apache.xerces.parsers.SAXParser")); OK.    I do have xercesImpl and xml-apis in my classpath.  But I cannot yet get the no arg constructor (new SAXBuilder()) to run.    Is there some advantage to using the no arg constructor?    Thanks, Craig   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>Exception in thread "AWT-EventQueue-0" java.lang.ExceptionInInitializerError    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(SAXBuilder.java:338)    at org.jdom2.input.SAXBuilder.&amp;lt;init&amp;gt;(SAXBuilder.java:221)    at transform.ReadDmFile.&amp;lt;init&amp;gt;(ReadDmFile.java:47)    at transform.TransformAction.execute(TransformAction.java:410)    at transform.MakeBook.actionPerformed(MakeBook.java:112)    at javax.swing.AbstractButton.fireActionPerformed(Unknown Source)    at javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)    at javax.swing.DefaultButtonModel.setPressed(Unknown Source)    at javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)    at java.awt.AWTEventMulticaster.mouseReleased(Unknown Source)    at java.awt.Component.processMouseEvent(Unknown Source)    at javax.swing.JComponent.processMouseEvent(Unknown Source)    at java.awt.Component.processEvent(Unknown Source)    at java.awt.Container.processEvent(Unknown Source)    at java.awt.Component.dispatchEventImpl(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)    at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)    at java.awt.Container.dispatchEventImpl(Unknown Source)    at java.awt.Window.dispatchEventImpl(Unknown Source)    at java.awt.Component.dispatchEvent(Unknown Source)    at java.awt.EventQueue.dispatchEventImpl(Unknown Source)    at java.awt.EventQueue.access$000(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.awt.EventQueue$1.run(Unknown Source)    at java.security.AccessController.doPrivileged(Native Method)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.awt.EventQueue$2.run(Unknown Source)    at java.security.AccessController.doPrivileged(Native Method)    at java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)    at java.awt.EventQueue.dispatchEvent(Unknown Source)    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)    at java.awt.EventDispatchThread.run(Unknown Source)    Caused by: java.lang.UnsupportedOperationException: This parser does not support specification "null" version "null"    at javax.xml.parsers.SAXParserFactory.setSchema(Unknown Source)    at org.jdom2.input.sax.XMLReaders.&amp;lt;init&amp;gt;(XMLReaders.java:122)    at org.jdom2.input.sax.XMLReaders.&amp;lt;clinit&amp;gt;(XMLReaders.java:95)    ... 42 more    Other parsers: Xalon-2.7.0.jar, xml-apis-est-1.3.04.jar, xml-apis.jar, xercesImpl.jar, saxon.jar,  crimson.jar    From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Tuesday, August 21, 2012 1:23 PM To: Craig Christophersen Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] jdom2 runtime    Yes, there's a real advantage to the no-arg constructor ... it's simple ;-)    But, it should be working. What's the error message? Is there a stack trace? Do you have any other XML Parsers in your classpath?    Rolf    On 21/08/2012 3:10 PM, Craig Christophersen wrote:    Thanks Rolf.    I am able to run new SAXBuilder(new XMLReaderSAX2Factory(false, "org.apache.xerces.parsers.SAXParser")); OK.    I do have xercesImpl and xml-apis in my classpath.  But I cannot yet get the no arg constructor (new SAXBuilder()) to run.    Is there some advantage to using the no arg constructor?    Thanks, Craig</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>Yes, there's a real advantage to the no-arg constructor ... it's simple ;-)    But, it should be working. What's the error message? Is there a stack trace? Do you have any other XML Parsers in your classpath?    Rolf    On 21/08/2012 3:10 PM, Craig Christophersen wrote:   &lt;div class="quote quote-1"&gt;   Thanks Rolf.    I am able to run *new*SAXBuilder(*new*XMLReaderSAX2Factory(*false*, "org.apache.xerces.parsers.SAXParser")); OK.    I do have xercesImpl and xml-apis in my classpath.  But I cannot yet get the no arg constructor (new SAXBuilder()) to run.    Is there some advantage to using the no arg constructor?    Thanks, Craig   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>Thanks Rolf.    I am able to run new SAXBuilder(new XMLReaderSAX2Factory(false, "org.apache.xerces.parsers.SAXParser")); OK.    I do have xercesImpl and xml-apis in my classpath.  But I cannot yet get the no arg constructor (new SAXBuilder()) to run.    Is there some advantage to using the no arg constructor?    Thanks, Craig    From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Tuesday, August 21, 2012 12:39 PM To: Craig Christophersen Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] jdom2 runtime    In JDOM 2.x the new SAXBuilder()   (no arguments) will use regular JAXP API's to get the right SAX Parser for your system.    The JAXP process is described here:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/SAXParserFactory" rel="nofollow"&gt; http://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/SAXParserFactory &lt;/a&gt; . html#newInstance%28%29    In most cases, if you want to use a particular parser (xerces, for example), all you need to do is add the jar to the classpath. As a fallback mechanism, the standard JRE has an XML Parser built in already (an older version of xerces with some customizations - one of which is that it is not in the regular apache package.... so you cannot call it org.apache.xerces.parsers.SAXParser). So, you do not need to have any third-party jar unless you want one. I would still recommend adding xerces to your classpath though (and with it, you will want the xml-apis.jar).    So, in your 'old' code, if you used to do:       then I suggest you either: -  add (only) xerces (with xmlapis.jar) to the classpath, and use the plain ... = new SAXBuilder(); constructor.... -  add xerces to the classpath, use ... = new SAXBuilder(new    Note though, that the deprecated/'old' constructor new SAXBuilder("org.apache.xerces.parsers.SAXParser"); will still work (with a deprecated warning) if you have the xerces.jar in your classpath.    I recommend that you use the (newer) JAXP API for constructing SAXBuilders. You can still customize it with a particular library.    I note that there is a lack of functionality in JDOM for using JAXP with a custom factory.... I will add that.... I think.... see issue #89    For what it's worth, the documentation on the org.jdom.input.sax is fairly comprehensive:  &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/package-summary.html" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/package-summary.html &lt;/a&gt;  even though it does not have an example of what you want (although it has other examples).    Also, the source code for the deprecated constructor is educational... :  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/inp" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/inp &lt;/a&gt;  ut/SAXBuilder.java#L266 and  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/inp" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/inp &lt;/a&gt;  ut/SAXBuilder.java#L288    I will consider the usage of a JAXP custom factory using the 'other' JAXP constructor:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/javax/xml/parsers/SAXParserFactory" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/javax/xml/parsers/SAXParserFactory &lt;/a&gt; . html#newInstance%28java.lang.String,%20java.lang.ClassLoader%29    Issue #89: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/89" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/89 &lt;/a&gt;   Rolf    On 21/08/2012 1:23 PM, Craig Christophersen wrote:       While I now have jdom2 compiling OK in an application, I am running into runtime problems with SAXBuilder.    With previous jdom both SAXBuilder builder = new SAXBuilder();  and worked for constructing a SAXBuilder.    Question:    So now to use new SAXBuilder() (which uses JAXP) do I need something additional in my classpath??    Or is there somewhere I can see an example of what is mentioned in the migration guide ---   Deprecated. use &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder &lt;/a&gt;  SAXBuilder(XMLReaderJDOMFactory) with &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.h" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.h &lt;/a&gt;  XMLReaderSAX2Factory.XMLReaderSAX2Factory(boolean, String)?    Thanks,    Craig Christophersen    Software Developer    Synesis7</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 runtime</header>
    <body>In JDOM 2.x the new SAXBuilder()   (no arguments) will use regular JAXP API's to get the right SAX Parser for your system.    The JAXP process is described here:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance%28%29" rel="nofollow"&gt; http://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance%28%29 &lt;/a&gt;   In most cases, if you want to use a particular parser (xerces, for example), all you need to do is add the jar to the classpath. As a fallback mechanism, the standard JRE has an XML Parser built in already (an older version of xerces with some customizations - one of which is that it is not in the regular apache package.... so you cannot call it org.apache.xerces.parsers.SAXParser). So, you do not need to have any third-party jar unless you want one. I would still recommend adding xerces to your classpath though (and with it, you will want the xml-apis.jar).    So, in your 'old' code, if you used to do:       then I suggest you either: -  add (only) xerces (with xmlapis.jar) to the classpath, and use the plain ... = new SAXBuilder(); constructor.... -  add xerces to the classpath, use ... = new SAXBuilder(new    Note though, that the deprecated/'old' constructor new SAXBuilder("org.apache.xerces.parsers.SAXParser"); will still work (with a deprecated warning) if you have the xerces.jar in your classpath.    I recommend that you use the (newer) JAXP API for constructing SAXBuilders. You can still customize it with a particular library.    I note that there is a lack of functionality in JDOM for using JAXP with a custom factory.... I will add that.... I think.... see issue #89    For what it's worth, the documentation on the org.jdom.input.sax is fairly comprehensive:  &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/package-summary.html" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/package-summary.html &lt;/a&gt; even though it does not have an example of what you want (although it has other examples).    Also, the source code for the deprecated constructor is educational... :  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/input/SAXBuilder.java#L266" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/input/SAXBuilder.java#L266 &lt;/a&gt;  and  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/input/SAXBuilder.java#L288" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/core/src/java/org/jdom2/input/SAXBuilder.java#L288 &lt;/a&gt;   I will consider the usage of a JAXP custom factory using the 'other' JAXP constructor:  &lt;a class="exlink mklink" href="http://docs.oracle.com/javase/6/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance%28java.lang.String" rel="nofollow"&gt; http://docs.oracle.com/javase/6/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance%28java.lang.String &lt;/a&gt; ,%20java.lang.ClassLoader%29    Issue #89: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/89" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/89 &lt;/a&gt;   Rolf    On 21/08/2012 1:23 PM, Craig Christophersen wrote:   &lt;div class="quote quote-1"&gt;      While I now have jdom2 compiling OK in an application, I am running into runtime problems with SAXBuilder.    With previous jdom both SAXBuilder builder = new SAXBuilder();  and SAXBuilder builder = new SAXBuilder("_org.apache.xerces.parsers.SAXParser_");worked for constructing a SAXBuilder.    Question:    So now to use new SAXBuilder() (which uses JAXP) do I need something additional in my classpath??    Or is there somewhere I can see an example of what is mentioned in the migration guide --- *Deprecated.* /use |SAXBuilder(XMLReaderJDOMFactory)| &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder%28org.jdom2.input.sax.XMLReaderJDOMFactory%29" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder%28org.jdom2.input.sax.XMLReaderJDOMFactory%29 &lt;/a&gt; with |XMLReaderSAX2Factory.XMLReaderSAX2Factory(boolean, String)| &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.html#XMLReaderSAX2Factory%28boolean" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.html#XMLReaderSAX2Factory%28boolean &lt;/a&gt; ,%20java.lang.String%29&amp;gt;?/    Thanks,    Craig Christophersen    Software Developer    Synesis7    &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] jdom2 runtime</header>
    <body>While I now have jdom2 compiling OK in an application, I am running into runtime problems with SAXBuilder.    With previous jdom both SAXBuilder builder = new SAXBuilder();  and worked for constructing a SAXBuilder.    Question:    So now to use new SAXBuilder() (which uses JAXP) do I need something additional in my classpath??    Or is there somewhere I can see an example of what is mentioned in the migration guide ---   Deprecated. use &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#SAXBuilder &lt;/a&gt;  SAXBuilder(XMLReaderJDOMFactory) with &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.h" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.h &lt;/a&gt;  XMLReaderSAX2Factory.XMLReaderSAX2Factory(boolean, String)?    Thanks,    Craig Christophersen    Software Developer    Synesis7</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>Hi Chris.    Don't be too hard on yourself. It is an eclipse problem, and many people have &lt;br/&gt; wasted hours on this type of problem. I should update the migration page.    Pleased it is now working, and I hope it does not sour your JDOM2 experience.    Rolf    &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote:Took two cleans to get it all &lt;br/&gt; clean. Changed back: to:    in that one class. All now compiles. Thank you much for your help……I guess this was more of an eclipse and developer &lt;br/&gt; not cleaning his project enough issue.   I look forward to running this application now, and learning more about the &lt;br/&gt; enhancements in jdom2. Thank you again, Craig          From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 2:06 PM To: &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt;  Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: RE: [jdom-interest] jdom2 migration issue   In eclipse do a 'clean' on your project...   Perhaps there are some 'vestiges' of a previous eclipse build.   Rolf      &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote: This is very peculiar.  That line now compiles. But further down in the class is another method using  "document" that will &lt;br/&gt; not(with the same type mismatch error). The line " Element root = document.getRootElement();” errors. Method:                       &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 1:02 PM To: Craig Christophersen Cc: Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    Right, then the next thing to do is to worry about the protected variable &lt;br/&gt; 'document'.       I had assumed that this was the same variable as the one in the line:       But, now I am not so sure.... perhaps in this case the document in the build &lt;br/&gt; line is some other document variable with the same name from a super class or &lt;br/&gt; something.    So, what happens if you replace the build line:       with:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>Took two cleans to get it all clean.    Changed back:       to:       in that one class.    All now compiles.    Thank you much for your help……I guess this was more of an eclipse and developer &lt;br/&gt; not cleaning his project enough issue.    I look forward to running this application now, and learning more about the &lt;br/&gt; enhancements in jdom2.    Thank you again, Craig    From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 2:06 PM To: &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt;  Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: RE: [jdom-interest] jdom2 migration issue    In eclipse do a 'clean' on your project...    Perhaps there are some 'vestiges' of a previous eclipse build.    Rolf    &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote: This is very peculiar.  That line now compiles. But further down in the class is another method using  "document" that will &lt;br/&gt; not(with the same type mismatch error). The line " Element root = document.getRootElement();” errors. Method:      &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 1:02 PM To: Craig Christophersen Cc: Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    Right, then the next thing to do is to worry about the protected variable &lt;br/&gt; 'document'.       I had assumed that this was the same variable as the one in the line:       But, now I am not so sure.... perhaps in this case the document in the build &lt;br/&gt; line is some other document variable with the same name from a super class or &lt;br/&gt; something.    So, what happens if you replace the build line:       with:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>In eclipse do a 'clean' on your project...    Perhaps there are some 'vestiges' of a previous eclipse build.    Rolf    &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote:This is very peculiar.  That &lt;br/&gt; line now compiles. But further down in the class is another method using  "document" that will &lt;br/&gt; not(with the same type mismatch error). The line " Element root = document.getRootElement();” errors. Method:                       &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 1:02 PM To: Craig Christophersen Cc: Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    Right, then the next thing to do is to worry about the protected variable &lt;br/&gt; 'document'.       I had assumed that this was the same variable as the one in the line:       But, now I am not so sure.... perhaps in this case the document in the build &lt;br/&gt; line is some other document variable with the same name from a super class or &lt;br/&gt; something.    So, what happens if you replace the build line:       with:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>This is very peculiar.  That line now compiles. But further down in the class is another method using  "document" that will &lt;br/&gt; not(with the same type mismatch error). The line " Element root = document.getRootElement();” errors. Method:      &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 1:02 PM To: Craig Christophersen Cc: Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    Right, then the next thing to do is to worry about the protected variable &lt;br/&gt; 'document'.       I had assumed that this was the same variable as the one in the line:       But, now I am not so sure.... perhaps in this case the document in the build &lt;br/&gt; line is some other document variable with the same name from a super class or &lt;br/&gt; something.    So, what happens if you replace the build line:       with:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>Right, then the next thing to do is to worry about the protected variable 'document'.       I had assumed that this was the same variable as the one in the line:       But, now I am not so sure.... perhaps in this case the document in the build line is some other document variable with the same name from a super class or something.    So, what happens if you replace the build line:       with:       Rolf    On Mon, 20 Aug 2012 12:51:33 -0600, "Craig Christophersen" &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  In the open type window it does show another project in eclipse with "org.jdom.Document".  But it is another project that I will migrate also once I get it working in this project.  The other project is not referenced by the current project.    There are 8 classes in the project that use jdom.  Below is a typical import:          And another class imports:               &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 12:25 PM To: Craig Christophersen; Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    In eclipse, edit your file, then type shift-ctrl-T Then type org.jdom.Document    In the box below, you have all the locations of jdom 1.x Documents.    As a double-check, can you copy/paste the entire import section in your class.... I am convinced there must be an import from org.jdom.* or something.    P.S. when you reply, do a reply-all, and I will get your answer faster.....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>In the open type window it does show another project in eclipse with &lt;br/&gt; "org.jdom.Document".  But it is another project that I will migrate also once I &lt;br/&gt; get it working in this project.  The other project is not referenced by the &lt;br/&gt; current project.    There are 8 classes in the project that use jdom.  Below is a typical import:          And another class imports:               &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 12:25 PM To: Craig Christophersen; Jdom interest Subject: RE: [jdom-interest] jdom2 migration issue    In eclipse, edit your file, then type shift-ctrl-T Then type org.jdom.Document    In the box below, you have all the locations of jdom 1.x Documents.    As a double-check, can you copy/paste the entire import section in your class.... I am convinced there must be an import from org.jdom.* or something.    P.S. when you reply, do a reply-all, and I will get your answer faster.....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>In eclipse, edit your file, then type shift-ctrl-T Then type org.jdom.Document    In the box below, you have all the locations of jdom 1.x Documents.    As a double-check, can you copy/paste the entire import section in your class.... I am convinced there must be an import from org.jdom.* or something.    P.S. when you reply, do a reply-all, and I will get your answer faster.....    Rolf    On Mon, 20 Aug 2012 12:18:29 -0600, "Craig Christophersen" &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello Rolf; Thank you for your reply.  I have again looked thru stuff and found no old jdom.  Are there known jars(I use several apache) that would include jdom classes???  I am using eclipse.   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Monday, August 20, 2012 11:35 AM To: Craig Christophersen Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] jdom2 migration issue    Hi Craig.    There must be some other imports from the org.jdom package (as well as org.jdom2....).    The error message you are getting would be impossible unless you have those imports.    Something is wrong in your imports.... and your build path must have some old JDOM classes from places other than just the old JDOM jar.    Finally, it is normal in GUI-type development tools, (eclipse, IntelliJ, etc) to exclude the package on field names.... i.e. the line:       would not normally be created by Eclipse/IntelliJ unless your class was already using the org.jdom.Document version somewhere. You should probably replace the line with:       and ensure that you can import Document from org.jdom2 with       Bottom line is that you still have old JDOM classes in your build path, and the copde you have shown us us using *both* Document versions (org.jdom, as well as org.jdom2).</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom2 migration issue</header>
    <body>Hi Craig.    There must be some other imports from the org.jdom package (as well as org.jdom2....).    The error message you are getting would be impossible unless you have those imports.    Something is wrong in your imports.... and your build path must have some old JDOM classes from places other than just the old JDOM jar.    Finally, it is normal in GUI-type development tools, (eclipse, IntelliJ, etc) to exclude the package on field names.... i.e. the line:       would not normally be created by Eclipse/IntelliJ unless your class was already using the org.jdom.Document version somewhere. You should probably replace the line with:       and ensure that you can import Document from org.jdom2 with       Bottom line is that you still have old JDOM classes in your build path, and the copde you have shown us us using *both* Document versions (org.jdom, as well as org.jdom2).    Rolf    On Mon, 20 Aug 2012 09:58:15 -0600, "Craig Christophersen" &lt;span&gt; crai &lt;a class="email mklink"&gt; ... &lt;/a&gt; @synesis7.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;     I have been trying to migrate to Jdom2 in an application.  I have followed the migration guide but get a type mismatch error.    Snippit below:                      /**    * Read the specified File and parse it to create a JDOM tree    **/                SAXBuilder builder =    new SAXBuilder(); //"org.apache.xerces.parsers.SAXParser"    // Parse the specified file and convert it to a JDOM document          On last line I get "Type mismatch: cannot convert from org.jdom2.Document to org.jdom.Document"    The old jdom jar is removed from this project.    Any help would be appreciated.    Thanks,    Craig Christophersen    Software Developer    Synesis7</body>
  </mail>
  <mail>
    <header>[jdom-interest] jdom2 migration issue</header>
    <body>I have been trying to migrate to Jdom2 in an application.  I have followed the migration guide but get a type mismatch error.    Snippit below:                      /**    * Read the specified File and parse it to create a JDOM tree    **/                SAXBuilder builder =    new SAXBuilder(); //"org.apache.xerces.parsers.SAXParser"    // Parse the specified file and convert it to a JDOM document          On last line I get "Type mismatch: cannot convert from org.jdom2.Document to org.jdom.Document"    The old jdom jar is removed from this project.    Any help would be appreciated.    Thanks,    Craig Christophersen    Software Developer    Synesis7</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fixed - Re: Serialization Trouble through Inheritance</header>
    <body>Hi Björn, everyone.    I have just committed a fix for this issue. This issue affects only people who serialize *subclasses* of the JDOM core classes (like custom subclasses of Element, Text, etc.).    The fix for this issue is 'trivial' and has no negative impact on any compatibility requirements. On the other hand, the commit includes a number of new classes that support the test-cases for the fix.    Like previous issues that have been identified in JDOM 2.x, I will issue a hotfix package on GitHub, and then, in a short while (in this case, 3 weeks) issue a new version of JDOM (in this case, 2.0.3).    Thus, I have uploaded the 'hotfix' to GitHub here:    &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue88.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue88.zip &lt;/a&gt;   and at month-end (August 31st or September 1st or 2nd) I will do a full release of JDOM 2.0.3.    This allows an opportunity for some some other potential issues to be identified and fixed without having a flood of new versions.    If you have any issues, suggestions, questions (even Javadoc comment issues) then please speak up so that they can be fixed in the upcoming release.    Thanks all    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Excellent. It was quite a headscratcher....    I will start the 2.0.3 release process.    &lt;span&gt; b.bu &lt;a class="email mklink"&gt; ... &lt;/a&gt; @isys-software.de &lt;/span&gt; &amp;gt; wrote:Am Freitag, 10. August 2012 &lt;br/&gt; 08:15:09 schrieb Björn Buchner:   &lt;div class="quote quote-1"&gt;  Am Donnerstag, 9. August 2012 18:23:03 schrieb Rolf Lear:   &lt;div class="quote quote-2"&gt;  Hmmm... in a moment of daftness, I attached the wrong file (more haste... less speed).    here is the working CloneBase file.    Rolf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Hi Björn, Oliver    I have identified what the problem is...... this is not actually a Java bug, but it describes what the JDOM bug is... I think....    &lt;a class="exlink mklink" href="http://bugs.sun.com/view_bug.do?bug_id=6522514" rel="nofollow"&gt; http://bugs.sun.com/view_bug.do?bug_id=6522514 &lt;/a&gt;   What this implies is that there is an issue in the permissions of the JDOM element hierarchy.    in my understanding, it goes like this....    org.jdom2.Element extends org.jdom2.Content. org.jdom2.Content extends org.jdom2.CloneBase. org.jdom2.CloneBase is a package-private (not public) class, and CloneBase has no declared constructor (it has the default no-arg constructor).    Your class 'MyElement' is not in the org.jdom2 package, so, it cannot 'see' the no-arg constructor for (package private) org.jdom2.CloneBase.    Thus the MyElement class cannot be de-serialized.    I have 'proven' that this is the logic fault by putting the MyElement class in the org.jdom2 package, and then, miraculously, the code works. When I get home I will try it again but instead with a 'protected' no-arg constructor on org.jdom2.CloneBase, and the MyElement class in some other package..... actually, I have just tried it now, and it works.....    Thus, there are two work-arounds:    - putting your MyElement code in the org.jdom2 package....    - using the attached org.jdom2.CloneBase class which has a protected no-arg constructor.    I have created a new issue (#88), and I have attached a working CloneBase class you can add to your project temporarily.....    I will push out JDOM 2.0.3</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Am Freitag, 10. August 2012 08:15:09 schrieb Björn Buchner:   &lt;div class="quote quote-1"&gt;  Am Donnerstag, 9. August 2012 18:23:03 schrieb Rolf Lear:   &lt;div class="quote quote-2"&gt;  Hmmm... in a moment of daftness, I attached the wrong file (more haste... less speed).    here is the working CloneBase file.    Rolf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Hi Björn, Oliver    I have identified what the problem is...... this is not actually a Java bug, but it describes what the JDOM bug is... I think....    &lt;a class="exlink mklink" href="http://bugs.sun.com/view_bug.do?bug_id=6522514" rel="nofollow"&gt; http://bugs.sun.com/view_bug.do?bug_id=6522514 &lt;/a&gt;   What this implies is that there is an issue in the permissions of the JDOM element hierarchy.    in my understanding, it goes like this....    org.jdom2.Element extends org.jdom2.Content. org.jdom2.Content extends org.jdom2.CloneBase. org.jdom2.CloneBase is a package-private (not public) class, and CloneBase has no declared constructor (it has the default no-arg constructor).    Your class 'MyElement' is not in the org.jdom2 package, so, it cannot 'see' the no-arg constructor for (package private) org.jdom2.CloneBase.    Thus the MyElement class cannot be de-serialized.    I have 'proven' that this is the logic fault by putting the MyElement class in the org.jdom2 package, and then, miraculously, the code works. When I get home I will try it again but instead with a 'protected' no-arg constructor on org.jdom2.CloneBase, and the MyElement class in some other package..... actually, I have just tried it now, and it works.....    Thus, there are two work-arounds: - putting your MyElement code in the org.jdom2 package.... - using the attached org.jdom2.CloneBase class which has a protected no-arg constructor.    I have created a new issue (#88), and I have attached a working CloneBase class you can add to your project temporarily.....    I will push out JDOM 2.0.3</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Am Donnerstag, 9. August 2012 18:23:03 schrieb Rolf Lear:   &lt;div class="quote quote-1"&gt;  Hmmm... in a moment of daftness, I attached the wrong file (more haste... less speed).    here is the working CloneBase file.    Rolf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Hi Björn, Oliver    I have identified what the problem is...... this is not actually a Java bug, but it describes what the JDOM bug is... I think....    &lt;a class="exlink mklink" href="http://bugs.sun.com/view_bug.do?bug_id=6522514" rel="nofollow"&gt; http://bugs.sun.com/view_bug.do?bug_id=6522514 &lt;/a&gt;   What this implies is that there is an issue in the permissions of the JDOM element hierarchy.    in my understanding, it goes like this....    org.jdom2.Element extends org.jdom2.Content. org.jdom2.Content extends org.jdom2.CloneBase. org.jdom2.CloneBase is a package-private (not public) class, and CloneBase has no declared constructor (it has the default no-arg constructor).    Your class 'MyElement' is not in the org.jdom2 package, so, it cannot 'see' the no-arg constructor for (package private) org.jdom2.CloneBase.    Thus the MyElement class cannot be de-serialized.    I have 'proven' that this is the logic fault by putting the MyElement class in the org.jdom2 package, and then, miraculously, the code works. When I get home I will try it again but instead with a 'protected' no-arg constructor on org.jdom2.CloneBase, and the MyElement class in some other package..... actually, I have just tried it now, and it works.....    Thus, there are two work-arounds: - putting your MyElement code in the org.jdom2 package.... - using the attached org.jdom2.CloneBase class which has a protected no-arg constructor.    I have created a new issue (#88), and I have attached a working CloneBase class you can add to your project temporarily.....    I will push out JDOM 2.0.3</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Hmmm... in a moment of daftness, I attached the wrong file (more haste... less speed).    here is the working CloneBase file.    Rolf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Björn, Oliver    I have identified what the problem is...... this is not actually a Java bug, but it describes what the JDOM bug is... I think....    &lt;a class="exlink mklink" href="http://bugs.sun.com/view_bug.do?bug_id=6522514" rel="nofollow"&gt; http://bugs.sun.com/view_bug.do?bug_id=6522514 &lt;/a&gt;   What this implies is that there is an issue in the permissions of the JDOM element hierarchy.    in my understanding, it goes like this....    org.jdom2.Element extends org.jdom2.Content. org.jdom2.Content extends org.jdom2.CloneBase. org.jdom2.CloneBase is a package-private (not public) class, and CloneBase has no declared constructor (it has the default no-arg constructor).    Your class 'MyElement' is not in the org.jdom2 package, so, it cannot 'see' the no-arg constructor for (package private) org.jdom2.CloneBase.    Thus the MyElement class cannot be de-serialized.    I have 'proven' that this is the logic fault by putting the MyElement class in the org.jdom2 package, and then, miraculously, the code works. When I get home I will try it again but instead with a 'protected' no-arg constructor on org.jdom2.CloneBase, and the MyElement class in some other package..... actually, I have just tried it now, and it works.....    Thus, there are two work-arounds: - putting your MyElement code in the org.jdom2 package.... - using the attached org.jdom2.CloneBase class which has a protected no-arg constructor.    I have created a new issue (#88), and I have attached a working CloneBase class you can add to your project temporarily.....    I will push out JDOM 2.0.3</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Hi Björn, Oliver    I have identified what the problem is...... this is not actually a Java bug, but it describes what the JDOM bug is... I think....    &lt;a class="exlink mklink" href="http://bugs.sun.com/view_bug.do?bug_id=6522514" rel="nofollow"&gt; http://bugs.sun.com/view_bug.do?bug_id=6522514 &lt;/a&gt;   What this implies is that there is an issue in the permissions of the JDOM element hierarchy.    in my understanding, it goes like this....    org.jdom2.Element extends org.jdom2.Content. org.jdom2.Content extends org.jdom2.CloneBase. org.jdom2.CloneBase is a package-private (not public) class, and CloneBase has no declared constructor (it has the default no-arg constructor).    Your class 'MyElement' is not in the org.jdom2 package, so, it cannot 'see' the no-arg constructor for (package private) org.jdom2.CloneBase.    Thus the MyElement class cannot be de-serialized.    I have 'proven' that this is the logic fault by putting the MyElement class in the org.jdom2 package, and then, miraculously, the code works. When I get home I will try it again but instead with a 'protected' no-arg constructor on org.jdom2.CloneBase, and the MyElement class in some other package..... actually, I have just tried it now, and it works.....    Thus, there are two work-arounds: - putting your MyElement code in the org.jdom2 package.... - using the attached org.jdom2.CloneBase class which has a protected no-arg constructor.    I have created a new issue (#88), and I have attached a working CloneBase class you can add to your project temporarily.....    I will push out JDOM 2.0.3    Rolf    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello,    Rolf, it shouldn't be necessary to add these methods.    Björn, can you check the import statement for Element?    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;   Hi Björn    I don't have my 'JDOM Laptop' with me at the moment, so I can't easily reproduce your problem, but, I suspect this is just an issue of implementing your own read/write object methods.    What happens if you add the following methods to your 'MyElement' class? I believe this should fix things..... try it... :-)    /** * Serialize out the MyElement. * * @serialData * The Stream protocol is: *   &amp;lt;li&amp;gt;Write the super Element class out... * * @param out where to write the Element to. * @throws IOException if there is a writing problem. */ private void writeObject(final ObjectOutputStream out) throws IOException    /** * Read a MyElement off the ObjectInputStream. * * @see #writeObject(ObjectOutputStream) * @param in where to read the Element from. * @throws IOException if there is a reading problem. * @throws ClassNotFoundException when a class cannot be found */ private void readObject(final ObjectInputStream in)    Rolf    On Thu, 09 Aug 2012 16:08:48 +0200, Björn Buchner &lt;span&gt; b.bu &lt;a class="email mklink"&gt; ... &lt;/a&gt; @isys-software.de &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Hi Folks,    I am using the JDOM 2.0.2 release and experienced some trouble when it comes to serialization.    De-/serializing an Element object through the standard ObjectOutput/InputStream is no problem. Trouble starts when I try to deserialize an object of a class that inherits from Element.    It always ends with a InvalidClassException: no valid constructor. Normally this indicates that JRE is missing a public default constructor, but as you can see in the example below the subclass has a default constructor.    Thanks in advance for your help    Example code:       private static final long serialVersionUID =       public static void main(String ... args) throws IOException,       ObjectInputStream inStream = new ObjectInputStream(new    Result:    Exception in thread "main" java.io.InvalidClassException: at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:147)   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt;  at java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:755) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1751)   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt;  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369) at &amp;lt;packageremoved&amp;gt;.main(MyElement.java:29)   &lt;/div&gt; &lt;div class="footer list-management"&gt;  _______________________________________________ To control your jdom-interest membership: http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;  &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  /*--    Copyright (C) 2012 Jason Hunter &amp;amp; Brett McLaughlin. All rights reserved.    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:    1. Redistributions of source code must retain the above copyright notice, this list of conditions, and the following disclaimer.    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions, and the disclaimer that follows these conditions in the documentation and/or other materials provided with the distribution.    3. The name "JDOM" must not be used to endorse or promote products derived from this software without prior written permission.  For written permission, please contact &amp;lt;request_AT_jdom_DOT_org&amp;gt;.    4. Products derived from this software may not be called "JDOM", nor may "JDOM" appear in their name, without prior written permission from the JDOM Project Management &amp;lt;request_AT_jdom_DOT_org&amp;gt;.    In addition, we request (but do not require) that you include in the end-user documentation provided with the redistribution and/or in the software itself an acknowledgement equivalent to the following: "This product includes software developed by the JDOM Project ( &lt;a class="exlink mklink" href="http://www.jdom.org/" rel="nofollow"&gt; http://www.jdom.org/ &lt;/a&gt; )." Alternatively, the acknowledgment may be graphical using the logos available at &lt;a class="exlink mklink" href="http://www.jdom.org/images/logos" rel="nofollow"&gt; http://www.jdom.org/images/logos &lt;/a&gt; .    THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE JDOM AUTHORS OR THE PROJECT CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    This software consists of voluntary contributions made by many individuals on behalf of the JDOM Project and was originally created by Jason Hunter &amp;lt;jhunter_AT_jdom_DOT_org&amp;gt; and Brett McLaughlin &amp;lt;brett_AT_jdom_DOT_org&amp;gt;.  For more information &lt;a class="exlink mklink" href="http://www.jdom.org/" rel="nofollow"&gt; http://www.jdom.org/ &lt;/a&gt; &amp;gt;.    */</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Hello,    Rolf, it shouldn't be necessary to add these methods.    Björn, can you check the import statement for Element?    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;   Hi Björn    I don't have my 'JDOM Laptop' with me at the moment, so I can't easily reproduce your problem, but, I suspect this is just an issue of implementing your own read/write object methods.    What happens if you add the following methods to your 'MyElement' class? I believe this should fix things..... try it... :-)    /** * Serialize out the MyElement. * * @serialData * The Stream protocol is: *   &amp;lt;li&amp;gt;Write the super Element class out... * * @param out where to write the Element to. * @throws IOException if there is a writing problem. */ private void writeObject(final ObjectOutputStream out) throws &lt;br/&gt; IOException    /** * Read a MyElement off the ObjectInputStream. * * @see #writeObject(ObjectOutputStream) * @param in where to read the Element from. * @throws IOException if there is a reading problem. * @throws ClassNotFoundException when a class cannot be found */ private void readObject(final ObjectInputStream in)    Rolf    On Thu, 09 Aug 2012 16:08:48 +0200, Björn Buchner &lt;span&gt; b.bu &lt;a class="email mklink"&gt; ... &lt;/a&gt; @isys-software.de &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Hi Folks,    I am using the JDOM 2.0.2 release and experienced some trouble when it comes to serialization.    De-/serializing an Element object through the standard ObjectOutput/InputStream is no problem. Trouble starts when I try to deserialize an object of a class that inherits from Element.    It always ends with a InvalidClassException: no valid constructor. Normally this indicates that JRE is missing a public default constructor, but as you can see in the example below the subclass has a default constructor.    Thanks in advance for your help    Example code:             public static void main(String ... args) throws IOException,       ObjectInputStream inStream = new ObjectInputStream(new    Result:    Exception in thread "main" java.io.InvalidClassException: at   &lt;/div&gt;  java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:147)   &lt;div class="quote quote-2"&gt;  at java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:755) at   &lt;/div&gt;  java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1751)   &lt;div class="quote quote-2"&gt;  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369) at &amp;lt;packageremoved&amp;gt;.main(MyElement.java:29)   &lt;/div&gt; &lt;div class="footer list-management"&gt;  _______________________________________________ To control your jdom-interest membership: http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;  &lt;/div&gt; &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Hi Björn    I don't have my 'JDOM Laptop' with me at the moment, so I can't easily reproduce your problem, but, I suspect this is just an issue of implementing your own read/write object methods.    What happens if you add the following methods to your 'MyElement' class? I believe this should fix things..... try it... :-)    /** * Serialize out the MyElement. * * @serialData * The Stream protocol is: *   &amp;lt;li&amp;gt;Write the super Element class out... * * @param out where to write the Element to. * @throws IOException if there is a writing problem. */ private void writeObject(final ObjectOutputStream out) throws IOException    /** * Read a MyElement off the ObjectInputStream. * * @see #writeObject(ObjectOutputStream) * @param in where to read the Element from. * @throws IOException if there is a reading problem. * @throws ClassNotFoundException when a class cannot be found */ private void readObject(final ObjectInputStream in)    Rolf    On Thu, 09 Aug 2012 16:08:48 +0200, Björn Buchner &lt;span&gt; b.bu &lt;a class="email mklink"&gt; ... &lt;/a&gt; @isys-software.de &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Folks,    I am using the JDOM 2.0.2 release and experienced some trouble when it comes to serialization.    De-/serializing an Element object through the standard ObjectOutput/InputStream is no problem. Trouble starts when I try to deserialize an object of a class that inherits from Element.    It always ends with a InvalidClassException: no valid constructor. Normally this indicates that JRE is missing a public default constructor, but as you can see in the example below the subclass has a default constructor.    Thanks in advance for your help    Example code:             public static void main(String ... args) throws IOException,       ObjectInputStream inStream = new ObjectInputStream(new    Result:    Exception in thread "main" java.io.InvalidClassException: at   &lt;/div&gt;  java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:147)   &lt;div class="quote quote-1"&gt;  at java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:755) at   &lt;/div&gt;  java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1751)   &lt;div class="quote quote-1"&gt;  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369) at &amp;lt;packageremoved&amp;gt;.main(MyElement.java:29)   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Serialization Trouble through Inheritance</header>
    <body>Hi Folks,     I am using the JDOM 2.0.2 release and experienced some trouble when it comes to serialization.    De-/serializing an Element object through the standard ObjectOutput/InputStream is no problem. Trouble starts when I try to deserialize an object of a class that inherits from Element.    It always ends with a InvalidClassException: no valid constructor. Normally this indicates that JRE is missing a public default constructor, but as you can see in the example below the subclass has a default constructor.    Thanks in advance for your help    Example code:             public static void main(String ... args) throws IOException,       ObjectInputStream inStream = new ObjectInputStream(new    Result:    Exception in thread "main" java.io.InvalidClassException: at java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:147) at java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:755) at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1751) at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1347) at java.io.ObjectInputStream.readObject(ObjectInputStream.java:369) at &amp;lt;packageremoved&amp;gt;.main(MyElement.java:29)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] java.lang.NoClassDefFoundError: org/jaxen/NamespaceContext</header>
    <body>Hi Elías    The most likely cause of this is because you do not have the Jaxen jar in your classpath. You need the Jaxen 1.1.3 (in the JDOM Download zip) or Jaxen 1.1.4 jar (from the jaxen website).    Check your eclipse build path to make sure you have jaxen in it.    Rolf    On 16/07/2012 3:30 AM, Elías Manchón López wrote:   &lt;div class="quote quote-1"&gt;  Hello Folks,    I'm using jdom2 in my eclipse project. I want to search with xpath in my xml file two nodes and I'm using the next code:    XPathExpression&amp;lt;Element&amp;gt; exprErrorCode =    XPathExpression&amp;lt;Element&amp;gt; exprErrorDesc = if(error_desc != null)    When I debug the program I get the next error:    java.lang.NoClassDefFoundError: org/jaxen/NamespaceContext at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:791) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) at java.net.URLClassLoader.defineClass(URLClassLoader.java:449) at java.net.URLClassLoader.access$100(URLClassLoader.java:71) at java.net.URLClassLoader$1.run(URLClassLoader.java:361) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:423) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:356) at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82) at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:281) at com.ej2DomiturIntegration.xml.XMLCommImpl.setErrorsFromXML(XMLCommImpl.java:263) at com.ej2DomiturIntegration.xml.XMLCommImpl.getConnResponse(XMLCommImpl.java:308) at com.ej2DomiturIntegration.xml.XMLCommImplTest.testOpenConnection(XMLCommImplTest.java:23) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:601) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:300) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) Caused by: java.lang.ClassNotFoundException: org.jaxen.NamespaceContext at java.net.URLClassLoader$1.run(URLClassLoader.java:366) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:423) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:356) ... 40 more    Can somebody help me, please?</body>
  </mail>
  <mail>
    <header>[jdom-interest] java.lang.NoClassDefFoundError: org/jaxen/NamespaceContext</header>
    <body>Hello Folks,     I'm using jdom2 in my eclipse project. I want to search with xpath in my xml file two nodes and I'm using the next code:    XPathExpression&amp;lt;Element&amp;gt; exprErrorCode =    XPathExpression&amp;lt;Element&amp;gt; exprErrorDesc = if(error_desc != null)    When I debug the program I get the next error:    java.lang.NoClassDefFoundError: org/jaxen/NamespaceContext at java.lang.ClassLoader.defineClass1(Native Method) at java.lang.ClassLoader.defineClass(ClassLoader.java:791) at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) at java.net.URLClassLoader.defineClass(URLClassLoader.java:449) at java.net.URLClassLoader.access$100(URLClassLoader.java:71) at java.net.URLClassLoader$1.run(URLClassLoader.java:361) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:423) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:356) at org.jdom2.xpath.jaxen.JaxenXPathFactory.compile(JaxenXPathFactory.java:82) at org.jdom2.xpath.XPathFactory.compile(XPathFactory.java:281) at com.ej2DomiturIntegration.xml.XMLCommImpl.setErrorsFromXML(XMLCommImpl.java:263) at com.ej2DomiturIntegration.xml.XMLCommImpl.getConnResponse(XMLCommImpl.java:308) at com.ej2DomiturIntegration.xml.XMLCommImplTest.testOpenConnection(XMLCommImplTest.java:23) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:601) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42) at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222) at org.junit.runners.ParentRunner.run(ParentRunner.java:300) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) Caused by: java.lang.ClassNotFoundException: org.jaxen.NamespaceContext at java.net.URLClassLoader$1.run(URLClassLoader.java:366) at java.net.URLClassLoader$1.run(URLClassLoader.java:355) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(URLClassLoader.java:354) at java.lang.ClassLoader.loadClass(ClassLoader.java:423) at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308) at java.lang.ClassLoader.loadClass(ClassLoader.java:356) ... 40 more    Can somebody help me, please?    Thanks in advance</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM artifact 'jdom-legacy' in maven</header>
    <body>Hi All.    I am pleased to announce the new JDOM artifact 'jdom-legacy' in maven.    This artifact is introduced to make it possible for maven users to have both JDOM 1.x and 2.x version in their project at the same time.    The Problem: ============    There are three types of JDOM users: - non-maven users - maven users who have a 'simple' dependency chain on JDOM (only require one JDOM version) - maven users with a complicated dependency chain on JDOM (require both 1.x and 2.x JDOM versions).    Non-maven users are completely unaffected by any version/artifact problems, and this is a non-issue for them.    Simple maven dependencies are also easy to handle: maven users (like always) simply choose which version of the jdom artifact to use (1.1.3, 2.0.2, etc.), and these maven users have not been affected by any issues.    The only problem has been for maven users with complicated dependency requirements. The typical condition is for the maven user whio is upgrading their code to use JDOM 2.x, but has a 'transitive dependency' on JDOM 1.x. This happens, for example, when your code uses JDOM 2.x, but you depend on some other maven artifact which in turn depends on JDOM 1.x. In this condition, maven will choose to include just the 2.x version of JDOM, and the program will fail at run-time because the third-party code will not be able to find it's JDOM classes.    The Solution: =============    The solution is to introduce a second maven artifact for JDOM. Maven can then be instructed to pull the second JDOM version of code from the second artifact.    There are effectively two options: either introduce a new artifact for JDOM 2.x code, or alternatively, introduce a new artifact for jdom 1.x code.    In the balance of the options, the better solution is to introduce the new artifact for the 1.x code.    Thus, JDOM 1.1.3 has now also been released as jdom-legacy-1.1.3 :  &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom-legacy|1.1.3|jar    Rationale: ==========    In hindsight, it was a mistake to release JDOM 2.x versions to the existing jdom artifact in maven. With the changed package from org.jdom.* to org.jdom2.*, there should have been a new artifact as well for JDOM 2.x    Unfortunately, this mistake cannot be undone, leaving the maven system in a 'messy' state.    Given all the complicated use-cases of maven users, and given the limited options available for 'correcting' the situation, it comes down to the weighing of pro's and con's and choosing a compromise solution.    for non-maven users: there is no impact    for 'simple case' maven users: there is no impact - they just continue using the 'jdom' artifact the way they always have.    for 'complex case' maven users: the impact is very minimal - all they need to do is add a dependency on 'jdom-legacy'.    Finally, the jdom-legacy solution has a very low risk.    Example - Simple: =================    You have a project you are upgrading to use JDOM 2.x.    All you need to do is change your JDOM dependency to version 2.0.2, pull in the new version with mvn, and fix your code to use the new org.jdom2.* packages.       Example - Complex: ==================    You are upgrading your project to use 2.x, but you have a dependency on some third-party code which in turn requires JDOM 1.x.    For example your current dependencies may look like (htmlcleaner is a project that has a reference to JDOM 1.1 -  &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |net.sourceforge.htmlcleaner|htmlcleaner|2.2|jar ):       Now, if you want to upgrade your code to use JDOM 2.x, you would *want* to just change your version dependency from 1.1.3 to 2.0.2 as follows:       Unfortunately though, your code will fail to compile/run because maven will 'pull' the 2.0.2 version of JDOM, and not 1.1 (the htmlcleaner version) and the htmlcleaner code will be referencing the package org.jdom.* which will not exist (JDOM 2.x has package org.jdom2.*)    The *fix* for this problem is simple: all you need to do is, in your project, to also depend on jdom-legacy:       Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.2 is released</header>
    <body>Hi all!    JDOM 2.0.2 is out and available at &lt;a class="exlink mklink" href="http://jdom.org/downloads/index.html" rel="nofollow"&gt; http://jdom.org/downloads/index.html &lt;/a&gt; It is also available on maven-central as GroupID org.jdom, ArtifactID jdom, and Version 2.0.2.    This release fixes the single issue  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/81" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/81 &lt;/a&gt; - content 'removed' from an Element would cause corruption on any active 'live' sub-lists of the Element.    In addition, there is an improved error message in the XPath code, as well as some minor JavaDoc clarifications.    ====    For details on all the new features available in JDOM 2.x please see the wiki page: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Features" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Features &lt;/a&gt;   For a 'Primer' on getting started with JDOM 2.x, some basic concepts, and examples on how to accomplish the most common tasks in JDOM, see:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer &lt;/a&gt;   For insights on what issues to expect when changing from JDOM 1.x to 2.x have a look at the 'Migration Guide' here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues &lt;/a&gt;   The JavaDoc is available in the release, as well as at:  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/index.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/index.html &lt;/a&gt;   As always, if you have any comments, suggestions, concerns, please speak up!    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Preparing next release</header>
    <body>No need for the exclusions.... in most cases (99.999999%) anyway.    If *my* project requires jdom 2.0.1 and the transitive dependency requires jdom 1.1.3 then maven will 'pick' only one of them, and it will pick the most recent, which makes it pick jdom 2.0.1. There is no need to exclude the 1.1.3 version in the transitive dependency.    The exception to that is in the odd instance (which I cannot find an example of), where the transitive dependency forces version 1.x using special maven version descriptors (like &amp;lt;version&amp;gt;[1.1.3]&amp;lt;/version&amp;gt; ) in which case maven will select the 1.1.3 version instead of the 2.0.1, and only then would you need to add an exclusion to the transitive dependency.    Rolf    Here is the example POM I used to test things out (note that net.sourceforge.htmlcleaner depends on JDOM 1.1):    &lt;a class="exlink mklink" href="http://maven.apache.org/POM/4.0.0" rel="nofollow"&gt; http://maven.apache.org/POM/4.0.0 &lt;/a&gt; " xmlns:xsi=" &lt;a class="exlink mklink" href="http://www.w3.org/2001/XMLSchema-instance" rel="nofollow"&gt; http://www.w3.org/2001/XMLSchema-instance &lt;/a&gt; " xsi:schemaLocation=" &lt;a class="exlink mklink" href="http://maven.apache.org/POM/4.0.0" rel="nofollow"&gt; http://maven.apache.org/POM/4.0.0 &lt;/a&gt; &lt;a class="exlink mklink" href="http://maven.apache.org/maven-v4_0_0.xsd" rel="nofollow"&gt; http://maven.apache.org/maven-v4_0_0.xsd &lt;/a&gt; &lt;a class="exlink mklink" href="http://maven.apache.org" rel="nofollow"&gt; http://maven.apache.org &lt;/a&gt;    On 08/06/2012 2:07 AM, Mattias Jiderhamn wrote:   &lt;div class="quote quote-1"&gt;  Let me see if I get this (again, I haven't used Maven for too long):    If you want to have a Maven project, with transitive dependencies on JDOM &amp;lt;= 1.1.3 (before the re-release), while you want to use JDOM 2 yourself, then (until the dependency project "updates" to jdom-legacy) you'd have to - Add &amp;lt;exclusions&amp;gt; to the depency which adds the transitive JDOM 1 depedency - Explicitly depend on jdom-legacy instead - Depend on JDOM 2, for your own use    Right?    Could multiple depency levels cause problems here (depending on A which depends on B which depends on JDOM &amp;lt; 1.1.3), or does      &lt;div class="quote quote-2"&gt;  ----- Original Message ----- Subject: Re: [jdom-interest] Preparing next release Date: Tue, 05 Jun 2012 15:03:18 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;    hello everyone (again).    After some 'study', and some discussion on the maven-user's mailing list, I have come to the conclusion that the maven predicament is best solved using a 'legacy' type approach.    In summary, I plan to re-release jdom 1.1.3 on maven-central as the new artifact 'jdom-legacy' version 1.1.3.    The reasons are as follows: 1. For non-maven JDOM users it makes no difference (there is no impact for non-maven users). 2. For most maven users there is no impact (they can just choose which version of the 'jdom' artifact they want to use). 3. For those maven users needing both 1.x and 2.x they can use 'jdom' artifact for 2.x, and the 'jdom-legacy' artifact for 1.x 4. This 'solution' does not 'burn any (more) bridges'.... 5. It makes the maven processes independent of JDOM releases.    Future versions of jdom 2.x will continue to be released to the jdom artifact.    Rolf    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Hi again.    Just to let you know that while I was originally going to release 2.0.2 before month-end, I have instead decided to release it probably some time next week.    In the interim I am learning a bunch about maven, and I am tracking   &lt;/div&gt;  down   &lt;div class="quote quote-3"&gt;  some additional input to how to resolve the maven problems. It seems that learning maven to the extent I need is not going to be a 1-day exercise.    So, expect 2.0.2 before the 9th of June.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Preparing next release</header>
    <body>Let me see if I get this (again, I haven't used Maven for too long):    If you want to have a Maven project, with transitive dependencies on JDOM &amp;lt;= 1.1.3 (before the re-release), while you want to use JDOM 2 yourself, then (until the dependency project "updates" to jdom-legacy) you'd have to - Add &amp;lt;exclusions&amp;gt; to the depency which adds the transitive JDOM 1 depedency - Explicitly depend on jdom-legacy instead - Depend on JDOM 2, for your own use    Right?    Could multiple depency levels cause problems here (depending on A which depends on B which depends on JDOM &amp;lt; 1.1.3), or does &amp;lt;exclusions&amp;gt; (for A) work in that case also?      &lt;div class="quote quote-1"&gt;  ----- Original Message ----- Subject: Re: [jdom-interest] Preparing next release Date: Tue, 05 Jun 2012 15:03:18 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;    hello everyone (again).    After some 'study', and some discussion on the maven-user's mailing list, I have come to the conclusion that the maven predicament is best solved using a 'legacy' type approach.    In summary, I plan to re-release jdom 1.1.3 on maven-central as the new artifact 'jdom-legacy' version 1.1.3.    The reasons are as follows: 1. For non-maven JDOM users it makes no difference (there is no impact for non-maven users). 2. For most maven users there is no impact (they can just choose which version of the 'jdom' artifact they want to use). 3. For those maven users needing both 1.x and 2.x they can use 'jdom' artifact for 2.x, and the 'jdom-legacy' artifact for 1.x 4. This 'solution' does not 'burn any (more) bridges'.... 5. It makes the maven processes independent of JDOM releases.    Future versions of jdom 2.x will continue to be released to the jdom artifact.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Example of LocatedElement</header>
    <body>Hi Jose.    If you want to locate just the first error then you should just check the JDOMException returned when parsing.    If you want to locate all the errors/warnings, then you should create an ErrorHandler instance, and override the respective methods, and get the location of the parsing error when the respective error-handler method is called, and make sure you do not throw an excepion from the ErrorHandler method.    If you just want to get the location of all the content (not just the errors), then you should use the ortg.jdom2.located.LocatedJDOMFactory for your SAXBuilder and all the resulting content will implement the org.jdom2.located.Located interface (with a getLine() and getColumn() method).    If you want to have both LocatedElement results as well as trapping each error, you may want to experiment with using both an ErrorHandler and LocatedJDOMFactory for the SAXBuilder.    As for examples, well, the test-cases for locatedJDOMFactory would be a logical place I guess, but since the functionality is new in JDOM 2, I don't think that there are many examples 'in the wild':    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/test/src/java/org/jdom2/test/cases/located/TestLocatedJDOMFactory.java#L51" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/test/src/java/org/jdom2/test/cases/located/TestLocatedJDOMFactory.java#L51 &lt;/a&gt;   For examples of error handlers.... the test harness will not help much, but this should help:  &lt;a class="exlink mklink" href="http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html" rel="nofollow"&gt; http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html &lt;/a&gt;  and  &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#getErrorHandler%28%29" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/input/SAXBuilder.html#getErrorHandler%28%29 &lt;/a&gt;   Rolf    On 07/06/2012 6:50 PM, JOSE L MARTINEZ-AVIAL wrote:   &lt;div class="quote quote-1"&gt;  Hello, Has somebody an example of how LocatedElement can be used? I use Jdom to parse an XML using SAXBuilder, and I'd like to pinpoint to the user the location of an error in the file, but so far I haven't seen any example of how to get the LocatedElement of an element.    Thanks</body>
  </mail>
  <mail>
    <header>[jdom-interest] Example of LocatedElement</header>
    <body>Hello,    Has somebody an example of how LocatedElement can be used? I use Jdom to parse an XML using SAXBuilder, and I'd like to pinpoint to the user the location of an error in the file, but so far I haven't seen any example of how to get the LocatedElement of an element.    Thanks    JL</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Preparing next release</header>
    <body>hello everyone (again).    After some 'study', and some discussion on the maven-user's mailing list, I have come to the conclusion that the maven predicament is best solved using a 'legacy' type approach.    In summary, I plan to re-release jdom 1.1.3 on maven-central as the new artifact 'jdom-legacy' version 1.1.3.    The reasons are as follows: 1. For non-maven JDOM users it makes no difference (there is no impact for non-maven users). 2. For most maven users there is no impact (they can just choose which version of the 'jdom' artifact they want to use). 3. For those maven users needing both 1.x and 2.x they can use 'jdom' artifact for 2.x, and the 'jdom-legacy' artifact for 1.x 4. This 'solution' does not 'burn any (more) bridges'.... 5. It makes the maven processes independent of JDOM releases.    Future versions of jdom 2.x will continue to be released to the jdom artifact.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XPath examples</header>
    <body>&lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  Do the variables have to be xpath values (i.e., in quotes), or can any part of the xpath expression be put into a variable?    Peter Kronenberg   &lt;/div&gt; &lt;/div&gt;   Variables in XPath represent values, not fragments of expression text: XPath isn't like shell scripts where variables are essentially macros. So you can't put "+" or "-" into a variable $op and then do (3 $op 2). Because the language is orthogonal, a variable reference can be used anywhere an expression can be used. That rules out things like child::$e, a/$e (which becomes acceptable in XPath 2.0, but doesn't mean what people sometimes imagine), or $e(2) (which becomes acceptable in XPath 3.0, where functions are first-class values).</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Preparing next release</header>
    <body>Hi again.    Just to let you know that while I was originally going to release 2.0.2 before month-end, I have instead decided to release it probably some time next week.    In the interim I am learning a bunch about maven, and I am tracking down some additional input to how to resolve the maven problems. It seems that learning maven to the extent I need is not going to be a 1-day exercise.    So, expect 2.0.2 before the 9th of June.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XPath examples</header>
    <body>Hi Peter    One of the issues with using var-args for the Namespace is that it becomes ambiguous if I take away the 'Variables' argument.... so it would not work to add a new method without the variables map.    In my head when I put the two major compile methods together, it was 'simple' and 'complex' xpaths .... simple have no variables and Namespaces. Complex ones do....    As for whether the variables have to be XPath values.... I believe so - it would not make sense of the variable value is expected to be 'compiled', and that maks me realize that I got the examples wrong.... there should not be quotes around the $varname in the examples I gave....    Yes, reading the XPath syntax here:  &lt;a class="exlink mklink" href="http://www.w3.org/TR/xpath/#NT-VariableReference" rel="nofollow"&gt; http://www.w3.org/TR/xpath/#NT-VariableReference &lt;/a&gt;   The variable reference is only allowed to be a discrete part of the query, and additionally, it later says:    The variable bindings consist of a mapping from variable names to variable values. The value of a variable is an object, which can be of any of the types that are possible for the value of an expression, and may also be of additional types not specified here.    which implies that the variable value is not re-evaluated    On 30/05/2012 4:48 PM, Peter Kronenberg wrote:   &lt;div class="quote quote-1"&gt;  Thanks for the quick and comprehensive response.    I guess I realized I could pass null for the variables in the compile() method, &lt;br/&gt; but still think it would be a bit cleaner to have a method without the &lt;br/&gt; variables, since I almost always uses namespaces and might not be using &lt;br/&gt; variables so much.    Do the variables have to be xpath values (i.e., in quotes), or can any part of &lt;br/&gt; the xpath expression be put into a variable?    Peter Kronenberg Software Engineer Technica Corporation  &lt;span&gt; pkro &lt;a class="email mklink"&gt; ... &lt;/a&gt; @technicacorp.com &lt;/span&gt;  703.885.1222 (Office)   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Wednesday, May 30, 2012 4:26 PM To: Peter Kronenberg Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] XPath examples    Hi Peter,    Yes, the examples are sparse. A few things though: Check out &lt;br/&gt; &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-XPath-Upgrade" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-XPath-Upgrade &lt;/a&gt;   That gives an overview of the changes in XPath processing in JDOM 2.x    As for your comment on having a compile(expression, namespace, filter) method, I &lt;br/&gt; think that you are 'over-thinking' the problem, and even if you do need a &lt;br/&gt; namespace, then the existing compile method would work well too:    &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/xpath/XPathFactory.html#compile%28java.lang.String" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/xpath/XPathFactory.html#compile%28java.lang.String &lt;/a&gt; ,%20org.jdom2.filter.Filter,%20java.util.Map,%20org.jdom2.Namespace...%29    You just need to add a null value for the variable Map... like:       The Javadoc on that compile method is fairly comprehensive... even if only on &lt;br/&gt; the technical side, and not so much the 'example' side I think.    Now, about the broader concept of variables.... XPath allows you to use variables in your expression. For example, you could have the 'simple' XPath query:    //emt[@name = 'hello']    Which would select all elements with an attribute called 'name' where the 'name' attribute's value is 'hello'.    You could build a JDOM XPathExpression with:    XPathExpression&amp;lt;Element&amp;gt;  xp = XPathFactory.instance().    However, perhaps you want to check for a different 'name' each time, you could then change the XPath query to:    //emt[@name = '$varname']    Now, as soon as your XPath has variables, you need to define them when you compile....    XPathExpression&amp;lt;Element&amp;gt;  xp = XPathFactory.instance().    Then you need to give the variable a value before you use the XPath expression:       Then if you evaluate the expression it will return 'emt' elements with the attribute name="hello".    If you change the variable again:       ... when you evaluate the expression it will return 'emt' elements with the attribute name="world".    Note, I have not used any namespaces in these examples.    The XPathBuilder in theory could make it easier to create a complex XPath expression by 'encapsulating' the XPath process prior to compiling it.    The same variable example could be:    XPathBuilder&amp;lt;Element&amp;gt;  xpb = new XPathBuilder( "//emt[@name = '$varname']", Filter.element()       If your XML Document has Namespaces then you will probably need to have namespaces as part of your XPath expression...    For example, if the actual XML Document is:    &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt;    then the root and both emt elements are in the ' &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt; ' namespace. To select these using an XPath you will need to identify their namespace... the simple XPath query '//emt' will return *nothing*.    You need a namespace-correct XPath query.    In this case, we need a namespace-prefixed query: '//ns:emt' with prefix 'ns' mapped to ' &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt; '. Note how I simply 'created' the namespace prefix 'ns'. Like othr namespace prefixes, it does not matter what the actual prefix is, just the URI. There is one core concept though in XPaths.... that the "" empty-string prefix is *always* mapped to the "" empty-string URI.... there is no such thing as a 'default' namespace in an XPath query.    To do this in JDOM you would do:    XPathExpression&amp;lt;Element&amp;gt;  xp = XPathFactory.instance(). compile("//ns:emt", Filter.element(), null, Namespace.getNamespace("ns", " &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt;    The concepts of Namespace and Variables in XPath are 'orthogonal', although variables themselves may have a namespace... I guess they are not totally orthogonal.    Hope this helps ....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XPath examples</header>
    <body>Thanks for the quick and comprehensive response.    I guess I realized I could pass null for the variables in the compile() method, &lt;br/&gt; but still think it would be a bit cleaner to have a method without the &lt;br/&gt; variables, since I almost always uses namespaces and might not be using &lt;br/&gt; variables so much.    Do the variables have to be xpath values (i.e., in quotes), or can any part of &lt;br/&gt; the xpath expression be put into a variable?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XPath examples</header>
    <body>Hi Peter,     Yes, the examples are sparse. A few things though: Check out  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-XPath-Upgrade" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature-XPath-Upgrade &lt;/a&gt;   That gives an overview of the changes in XPath processing in JDOM 2.x    As for your comment on having a compile(expression, namespace, filter) method, I think that you are 'over-thinking' the problem, and even if you do need a namespace, then the existing compile method would work well too:    &lt;a class="exlink mklink" href="http://www.jdom.org/docs/apidocs/org/jdom2/xpath/XPathFactory.html#compile%28java.lang.String" rel="nofollow"&gt; http://www.jdom.org/docs/apidocs/org/jdom2/xpath/XPathFactory.html#compile%28java.lang.String &lt;/a&gt; ,%20org.jdom2.filter.Filter,%20java.util.Map,%20org.jdom2.Namespace...%29    You just need to add a null value for the variable Map... like:       The Javadoc on that compile method is fairly comprehensive... even if only on the technical side, and not so much the 'example' side I think.    Now, about the broader concept of variables.... XPath allows you to use variables in your expression. For example, you could have the 'simple' XPath query:    //emt[@name = 'hello']    Which would select all elements with an attribute called 'name' where the 'name' attribute's value is 'hello'.    You could build a JDOM XPathExpression with:    XPathExpression&amp;lt;Element&amp;gt; xp = XPathFactory.instance().    However, perhaps you want to check for a different 'name' each time, you could then change the XPath query to:    //emt[@name = '$varname']    Now, as soon as your XPath has variables, you need to define them when you compile....    XPathExpression&amp;lt;Element&amp;gt; xp = XPathFactory.instance().    Then you need to give the variable a value before you use the XPath expression:       Then if you evaluate the expression it will return 'emt' elements with the attribute name="hello".    If you change the variable again:       ... when you evaluate the expression it will return 'emt' elements with the attribute name="world".    Note, I have not used any namespaces in these examples.    The XPathBuilder in theory could make it easier to create a complex XPath expression by 'encapsulating' the XPath process prior to compiling it.    The same variable example could be:    XPathBuilder&amp;lt;Element&amp;gt; xpb = new XPathBuilder( "//emt[@name = '$varname']", Filter.element()       If your XML Document has Namespaces then you will probably need to have namespaces as part of your XPath expression...    For example, if the actual XML Document is:    &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt;    then the root and both emt elements are in the ' &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt; ' namespace. To select these using an XPath you will need to identify their namespace... the simple XPath query '//emt' will return *nothing*.    You need a namespace-correct XPath query.    In this case, we need a namespace-prefixed query: '//ns:emt' with prefix 'ns' mapped to ' &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt; '. Note how I simply 'created' the namespace prefix 'ns'. Like othr namespace prefixes, it does not matter what the actual prefix is, just the URI. There is one core concept though in XPaths.... that the "" empty-string prefix is *always* mapped to the "" empty-string URI.... there is no such thing as a 'default' namespace in an XPath query.    To do this in JDOM you would do:    XPathExpression&amp;lt;Element&amp;gt; xp = XPathFactory.instance(). compile("//ns:emt", Filter.element(), null, Namespace.getNamespace("ns", " &lt;a class="exlink mklink" href="http://example.org" rel="nofollow"&gt; http://example.org &lt;/a&gt;    The concepts of Namespace and Variables in XPath are 'orthogonal', although variables themselves may have a namespace... I guess they are not totally orthogonal.    Hope this helps ....    Rolf    On 30/05/2012 3:10 PM, Peter Kronenberg wrote:   &lt;div class="quote quote-1"&gt;  Where can I find some more examples of Xpath usage in JDOM2? The online documentation is a bit sparse.    I’m specifically confused about how the variables are used. And if I’m not using variables, it seems that I must use the XPathBuilder to set the namespace. Wouldn’t it make sense for XPathFactory to have a compile(String expression, Namespace ns, Filter filter) version?    Or XPathExpression could have a setNamespace() method.    Thanks    Peter Kronenberg    Software Engineer    Technica Corporation    &lt;span&gt; pkro &lt;a class="email mklink"&gt; ... &lt;/a&gt; @technicacorp.com &lt;/span&gt; &lt;span&gt; pkro &lt;a class="email mklink"&gt; ... &lt;/a&gt; @technicacorp.com &lt;/span&gt;    703.885.1222 (Office)   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] XPath examples</header>
    <body>Where can I find some more examples of Xpath usage in JDOM2?  The online &lt;br/&gt; documentation is a bit sparse.    I'm specifically confused about how the variables are used.  And if I'm not &lt;br/&gt; using variables, it seems that I must use the XPathBuilder to set the namespace. &lt;br/&gt; Wouldn't it make sense for XPathFactory to have a compile(String expression, &lt;br/&gt; Namespace ns, Filter filter) version? Or XPathExpression could have a setNamespace() method.    Thanks</body>
  </mail>
  <mail>
    <header>[jdom-interest] Preparing next release</header>
    <body>Hi All.    I am getting ready to push out version 2.0.2 of the JDOM 2.x stream.    Currently in this release is the fix for issue #81 (resetting live FitlerLists after a remove()).    This is the only known bug in JDOM 2.x and a 'hotfix' has been available for a few weeks. It is time to push out the official release.    Additionally, there are issues/concerns regarding the maven artifiacts. The core issue is that currently it is not possible to 'require' both JDOM 1.x and 2.x in your maven project. There appears to be only one solution to this issue and that is to have different 'artifacts' for JDOM 1 and JDOM 2. Obviously (in hindsight) it should have been done this way originally, but there was simply not enough 'expert' feedback/input/assistance when the decisions were being made, and this mistake is now something that just has to be lived with.    As a result, it appears necessary to deploy JDOM 2.0.2 to the maven artifact 'jdom2' (previous versions were deployed to 'jdom').    While this change will make it possible to include both JDOM 1.x and 2.x in your maven projects it will also introduce a number of irritating side-effects:    For 'regular' users, note: 1. previous versions of JDOM 2.x were called jdom-2.0.0.jar and jdom-2.0.1.jar. This new version will be called jdom2-2.0.2.jar, and the 'zip' file will be called jdom2-2.0.2.zip    For maven users, note:    1. if you have already incorporated JDOM 2.x in your project you should update your dependency to be for artifact jdom2, not jdom 2. ensure any maven project you require that also depends on JDOM aware of this problem... because, if that required project 'upgrades' to the jdom artifact version 2.0.1 (instead of jdom2) then you will get two different versions of jdom 2.x in your classpath, and there is no telling what will result.....    So, it is quite possible that by 'solving' the issue relating to requiring both JDOM 1.x and 2.x, that we will instead be introducing even worse problems, but I have been assured that this is the 'only' way to move forward from here.    If anyone has comments, concerns, suggestions, I am all ears.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 0.9b Compatibility</header>
    <body>Hi Again    I'm answer to myself. I haven't idea about Maven and the build of 1.1.3 &lt;br/&gt; distribution of jaxen   (jaxen_1.1.3.jar) is on Maven and defines the dependency &lt;br/&gt; with jdom 1.0. If I build a .jar from it java resources, all works "fine" (im &lt;br/&gt; not sure at all).    Thanks and sorry    Javier Solana Huertas Indra Software Labs   &lt;div class="quote quote-1"&gt;  -----Mensaje original----- De: Solana Huertas, Javier Enviado el: jueves, 24 de mayo de 2012 10:56 Para: 'Rolf Lear' CC: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Asunto: RE: [jdom-interest] JDOM 0.9b Compatibility    Hi all!    I've a problem with jdom 0.9b and it compatibility with jaxen 1.1.3. When I run Xpath.selectNodes(...,..) internally I get a fail and print the next &lt;br/&gt; Exception:    Caused by: java.lang.NoClassDefFoundError: org/jdom/Parent at org.jaxen.jdom.JDOMXPath.&amp;lt;init&amp;gt;(JDOMXPath.java:91) at org.jdom.xpath.JaxenXPath.setXPath(JaxenXPath.java:284) at org.jdom.xpath.JaxenXPath.&amp;lt;init&amp;gt;(JaxenXPath.java:101) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at &lt;br/&gt; sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39) at &lt;br/&gt; sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27) at java.lang.reflect.Constructor.newInstance(Constructor.java:494) at org.jdom.xpath.XPath.newInstance(XPath.java:150)    If DocumentNavigator is in WEB-INF/classes, it works fine but if it is in jaxen &lt;br/&gt; lib, the execution finishes showing the previous error.    We have in mind the upgrade jdom 0.9b to JDOM 2 in a few months but until this &lt;br/&gt; moment, we need to work with 0.9b and jaxen 1.1.3 if it's possible. Have any idea?    Thanks so much    Este correo electrónico y, en su caso, cualquier fichero anexo al mismo, &lt;br/&gt; contiene información de carácter confidencial exclusivamente dirigida a su &lt;br/&gt; destinatario o destinatarios. Si no es vd. el destinatario indicado, queda &lt;br/&gt; notificado que la lectura, utilización, divulgación y/o copia sin autorización &lt;br/&gt; está prohibida en virtud de la legislación vigente. En el caso de haber recibido &lt;br/&gt; este correo electrónico por error, se ruega notificar inmediatamente esta &lt;br/&gt; circunstancia mediante reenvío a la dirección electrónica del remitente. Evite imprimir este mensaje si no es estrictamente necesario.    This email and any file attached to it (when applicable) contain(s) confidential &lt;br/&gt; information that is exclusively addressed to its recipient(s). If you are not &lt;br/&gt; the indicated recipient, you are informed that reading, using, disseminating &lt;br/&gt; and/or copying it without authorisation is forbidden in accordance with the &lt;br/&gt; legislation in effect. If you have received this email by mistake, please &lt;br/&gt; immediately notify the sender of the situation by resending it to their email &lt;br/&gt; address. Avoid printing this message if it is not absolutely necessary.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 0.9b Compatibility</header>
    <body>Hi all!    I've a problem with jdom 0.9b and it compatibility with jaxen 1.1.3. When I run Xpath.selectNodes(...,..) internally I get a fail and print the next &lt;br/&gt; Exception:    Caused by: java.lang.NoClassDefFoundError: org/jdom/Parent at org.jaxen.jdom.JDOMXPath.&amp;lt;init&amp;gt;(JDOMXPath.java:91) at org.jdom.xpath.JaxenXPath.setXPath(JaxenXPath.java:284) at org.jdom.xpath.JaxenXPath.&amp;lt;init&amp;gt;(JaxenXPath.java:101) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at &lt;br/&gt; sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39) at &lt;br/&gt; sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27) at java.lang.reflect.Constructor.newInstance(Constructor.java:494) at org.jdom.xpath.XPath.newInstance(XPath.java:150)    If DocumentNavigator is in WEB-INF/classes, it works fine but if it is in jaxen &lt;br/&gt; lib, the execution finishes showing the previous error.    We have in mind the upgrade jdom 0.9b to JDOM 2 in a few months but until this &lt;br/&gt; moment, we need to work with 0.9b and jaxen 1.1.3 if it's possible. Have any idea?    Thanks so much    Este correo electrónico y, en su caso, cualquier fichero anexo al mismo, &lt;br/&gt; contiene información de carácter confidencial exclusivamente dirigida a su &lt;br/&gt; destinatario o destinatarios. Si no es vd. el destinatario indicado, queda &lt;br/&gt; notificado que la lectura, utilización, divulgación y/o copia sin autorización &lt;br/&gt; está prohibida en virtud de la legislación vigente. En el caso de haber recibido &lt;br/&gt; este correo electrónico por error, se ruega notificar inmediatamente esta &lt;br/&gt; circunstancia mediante reenvío a la dirección electrónica del remitente. Evite imprimir este mensaje si no es estrictamente necesario.    This email and any file attached to it (when applicable) contain(s) confidential &lt;br/&gt; information that is exclusively addressed to its recipient(s). If you are not &lt;br/&gt; the indicated recipient, you are informed that reading, using, disseminating &lt;br/&gt; and/or copying it without authorisation is forbidden in accordance with the &lt;br/&gt; legislation in effect. If you have received this email by mistake, please &lt;br/&gt; immediately notify the sender of the situation by resending it to their email &lt;br/&gt; address. Avoid printing this message if it is not absolutely necessary.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Axis2</header>
    <body>Hi Aaron.    I hate being doubtful about your question, but what you're suggesting just does not make sense.....    For example, in JDOM2, the 'default' XPathFactory has the following implementation for 'compile'....       and that method calls:    public &amp;lt;T&amp;gt; XPathExpression&amp;lt;T&amp;gt; compile(String expression, Filter&amp;lt;T&amp;gt; filter,    There is just no way for that to return a null value.... It has to return a value, or throw an exception....    In the JDOM 1.x code, the code is more complicated, but again, it either returns a new instance, or throws an exception. Ther ei sno way to return 'null'.    There must be something in your code that is resetting it.... or Axis2 is doing something bizarre.... You should probably ask a question on the Axis2 support areas.... this is not a JDOM problem.    Rolf    On 22/05/2012 11:50 AM, &lt;span&gt; aaro &lt;a class="email mklink"&gt; ... &lt;/a&gt; @rsa.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi,    I tried both JDOM and now JDOM2.    For JDOM2,          The xp is null.    For JDOM,       The xp is null.    Both work in the simple java application.    I tried to putting the JDOM jar in webapps/axis2/WEB-INF/lib along with Jaxen – doesn’t do a thing.    Any ideas? TIA    Best regards,    -a</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM and Axis2</header>
    <body>Hi,     I tried both JDOM and now JDOM2.    For JDOM2,    The xp is null.    For JDOM, The xp is null.    Both work in the simple java application.    I tried to putting the JDOM jar in webapps/axis2/WEB-INF/lib along with Jaxen - &lt;br/&gt; doesn't do a thing. Any ideas? TIA    Best regards,    -a</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>&lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-2"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven Whining</header>
    <body>Hi Elliotte.    Don't get me wrong, I was just whining ... ;-) I (personally) have no immediate push to get 1.1.4 in to maven.    On the serious side though, if you do need to push to maven central, and the codehaus process does not do it automatically, you may want to see what I did with JDOM....    Between this page:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven &lt;/a&gt;   and the JDOM Build file:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/master/build.xml#L503" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/master/build.xml#L503 &lt;/a&gt;   Also, there is the open ticket JAXEN-217 which can probably be closed....    Rolf    On 19/05/2012 9:08 AM, Elliotte Rusty Harold wrote:   &lt;div class="quote quote-1"&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:   &lt;div class="quote quote-2"&gt;  The recent Jaxen release is not on maven.   &lt;/div&gt;  Regarding jaxen, there used to be a bug filing procedure but nowadays I think that all Codehaus releases are supposed to hit maven automatically. In any case, the old instructions definitely don't work, so if there's something else we need to do, holler and I'll see if I can make it work if it's not too onerous. I.e. if just need to fill out a form somewhere I can do that. If it requires a full upgrade to maven 3, or some fancy key signing protocol, then it may require another volunteer stepping forward.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven Whining</header>
    <body>&lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  The recent Jaxen release is not on maven.   &lt;/div&gt;   Regarding jaxen, there used to be a bug filing procedure but nowadays I think that all Codehaus releases are supposed to hit maven automatically. In any case, the old instructions definitely don't work, so if there's something else we need to do, holler and I'll see if I can make it work if it's not too onerous. I.e. if just need to fill out a form somewhere I can do that. If it requires a full upgrade to maven 3, or some fancy key signing protocol, then it may require another volunteer stepping forward.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven Whining</header>
    <body>Btw, there are open issues regarding Xerces and Jaxen:    &lt;a class="exlink mklink" href="https://issues.apache.org/jira/browse/XERCESJ-1304" rel="nofollow"&gt; https://issues.apache.org/jira/browse/XERCESJ-1304 &lt;/a&gt; &lt;a class="exlink mklink" href="http://jira.codehaus.org/browse/JAXEN-217" rel="nofollow"&gt; http://jira.codehaus.org/browse/JAXEN-217 &lt;/a&gt;   --Joe</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven Whining</header>
    <body>search.maven.org searches maven central ( &lt;a class="exlink mklink" href="http://repo1.maven.org/maven2/" rel="nofollow"&gt; http://repo1.maven.org/maven2/ &lt;/a&gt; )    I think this information is up to date:    &lt;a class="exlink mklink" href="http://www.mkyong.com/maven/where-is-maven-central-repository/" rel="nofollow"&gt; http://www.mkyong.com/maven/where-is-maven-central-repository/ &lt;/a&gt;   The jdom artifacts at maven central:    &lt;a class="exlink mklink" href="http://search.maven.org/#search%7Cga%7C1%7Cjdom" rel="nofollow"&gt; http://search.maven.org/#search%7Cga%7C1%7Cjdom &lt;/a&gt;   On Fri, May 18, 2012 at 3:32 PM, Rolf Lear  wrote:   &lt;div class="quote quote-1"&gt;  So, why is it that there is:    &lt;a class="exlink mklink" href="http://mvnrepository.com" rel="nofollow"&gt; http://mvnrepository.com &lt;/a&gt;   &lt;a class="exlink mklink" href="http://search.maven.org" rel="nofollow"&gt; http://search.maven.org &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-1"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Maven Whining</header>
    <body>So, why is it that there is:    &lt;a class="exlink mklink" href="http://mvnrepository.com" rel="nofollow"&gt; http://mvnrepository.com &lt;/a&gt;   &lt;a class="exlink mklink" href="http://search.maven.org" rel="nofollow"&gt; http://search.maven.org &lt;/a&gt;   Which one is 'maven'.    Why does the IVY project reference mvnrepository.com, but that repository is out of date...? It does not have JDOM 2.0.1 released 3 weeks ago.    Why is there no xerces 2.11 on maven? It was released in 2010 ?    The recent Jaxen release is not on maven.    JDOM could not be built with the current maven system.... right?    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Hi Brad.    This whole thing is frustrating me... sorry to take it out on your reply....    Yes, you offered help. In fact, I *did* use your pom. At least for a while. The reality is that your pom was enough to complete maybe 5% of the problem, and the *wrong* 5%. Your help was all about changing from an ant build to a mvn build, and that was what I was trying to avoid (even if the code was not moving locations). The other 95% is all about *deploying* to maven-central, which is a massive procedure.... (not really POM related).    But, one of the pre-conditions I made was that I was not going to convert the 1.1.x branch to maven (which was when you were offering help). I think that was fair.    I said I had *zero* experience with maven... (and still essentially have none, I have never built a project with maven.... *never*).    The 1.1.2 and 1.1.3 releases to maven are *fine*.    The procedure for building a maven bundle is *fine*, Zero problems.    The reality is that it was not the right time for me to learn a whole dependency environment while trying to get 2.x out too. The mistakes in doing that outweigh the benefits. I can't possibly be the right person to do it. Apart from the fact that converting JDOM to a maven build process is completely unnecessary, the ant build is simple and works.    The only complaint people actually have is the lack of a '2' character on the JDOM 2.x artifactID. Everything else is fine.    Further, none of your assistance would have prevented the issue at hand, the mis-named artifactID... which is completely unrelated to anything you have done.    I sent e-mails to the list notifying everyone of the intention to name the jdom 2.0.0 artifact 'jdom' *before* I released it and I asked for feedback.    So, this is the fault of everyone except me ;-) *you* and everyone else with maven experience should have picked up that 'very bad idea'.    While I am the only (active) maintainer of JDOM I see zero point in converting it to maven. I do not know the day-to-day procedures, I see no value in learning them, I don't need them for (paid) work, and I see no 'fun' value in it (in fact, the more I deal with it the more un-fun it becomes), etc. I have learned more than enough to get a *good* (maybe not great) deployment process going.    So, getting back on track....    I am willing to consider solutions to the missing '2' on the artifactID... The solution is probably much simpler than dealing with this sort of mail-thread.    Now that I am home (and have the right encryption keys available to try), I will see if I can put in a jdom2 artifact with a jdom jar.    Otherwise I will investigate some other alternatives. It would be useful    But I am getting more and more stubborn about getting grief about maven being 'easy', etc.    Rolf    On 18/05/2012 4:28 PM, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  As I recall, you turned down my offer to help with the end of the problem I could help with (replicating your ant build process with *NO* source changes) and never used the pom I sent you for the first step, the compile. I told you then I couldn't help with the deploy process having never been that far.    Seems to me these are consequences of a decision to buck the conventions and jump to right to the deep end (deployment) just to maintain a legacy build system regardless the costs. These are the costs. Its not maven that dictates the artifact name must match the jar name. That comes from ant not maven. For all I know there's a plugin that can remap that even now but I'll defer to the experts for that.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>+1 to both paragraphs!    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  All in all, I think it is fair to blame maven here.   &lt;/div&gt;   I have a great deal of sympathy with both sides of this debate.    Maven is a pig to use. We've given up trying several times. The documentation is awful, the process is awful, there is no way of testing your artefacts, and when you get them wrong (as we have done) there is no way of putting it right.    On the other hand, Maven is quite rightly focused on meeting the needs of its users rather than package developers. Those users do have complex requirements, and individual components like JDOM or Saxon are tiny parts of their overall systems; they don't want to tailor their working methods to the idiosyncracies of individual packages. (And they certainly don't want to have upgrades foisted on them: when something isn't broken, they don't want to fix it). So as developers, I think it's reasonable that we should make some effort to fit into the process the way it has been designed. But it *is* an extremely frustrating experience, and I'm not convinced it needs to be.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>As I recall, you turned down my offer to help with the end of the problem I could help with (replicating your ant build process with *NO* source changes) and never used the pom I sent you for the first step, the compile. I told you then I couldn't help with the deploy process having never been that far.    Seems to me these are consequences of a decision to buck the conventions and jump to right to the deep end (deployment) just to maintain a legacy build system regardless the costs. These are the costs. Its not maven that dictates the artifact name must match the jar name. That comes from ant not maven. For all I know there's a plugin that can remap that even now but I'll defer to the experts for that.    I didn't answer the questions because they are deployment questions. Again I've ever been there.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  You never answered any of the 4 questions ;-)    A few months ago I was begging for maven-experienced people to 'do it right'....   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>&lt;div class="quote quote-1"&gt;  All in all, I think it is fair to blame maven here.   &lt;/div&gt;   I have a great deal of sympathy with both sides of this debate.    Maven is a pig to use. We've given up trying several times. The documentation is awful, the process is awful, there is no way of testing your artefacts, and when you get them wrong (as we have done) there is no way of putting it right.    On the other hand, Maven is quite rightly focused on meeting the needs of its users rather than package developers. Those users do have complex requirements, and individual components like JDOM or Saxon are tiny parts of their overall systems; they don't want to tailor their working methods to the idiosyncracies of individual packages. (And they certainly don't want to have upgrades foisted on them: when something isn't broken, they don't want to fix it). So as developers, I think it's reasonable that we should make some effort to fit into the process the way it has been designed. But it *is* an extremely frustrating experience, and I'm not convinced it needs to be.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Disclaimer: I have only been using Maven for about 6 months. I have added stuff to a Nexus repo, but know nothing of Maven Central uploads.    Joe Bowbeer wrote:   &lt;div class="quote quote-1"&gt;  If there is a problem with the way jdom2 was published to maven, this might affect your stats?   &lt;/div&gt;   Joe may have a point. In case your project has (transient) dependencies on JDOM 1, it means JDOM 2 cannot be added using Maven. (Instead, you may download the JAR from jdom.org and add to your Nexus repo with a modified artifactId.)    Blaming Maven for requiring unique artifact ids, is like blaming Java for requiring different package names to reuse the same class name (hence, org.jdom2). I cannot see how this is stupid - just a convention to be systematic. The fact that you may get it wrong if you do not understand the conventions or see the implications of the system does not change that.    See more below.    Rolf Lear wrote   &lt;div class="quote quote-1"&gt;  ... I get the impression that Maven developers expect the world to conform to them, rather than tolerating the heterogeneous we live in. It is "everyone else's fault" if things don't work the maven way.....   &lt;/div&gt;  As has been mentioned, Maven assumes convention over configuration. I agree it was awkward at first, but now I see benefits.   &lt;div class="quote quote-1"&gt;  1. you say that the artifact does not need to be the same as the 'base name' of the jar, yet everything i have read suggests it does need to be the same   &lt;/div&gt;  I think the point is, that non-Maven JARs do not have to have the same name as the non-Maven (jdom.org) ones.   &lt;div class="quote quote-1"&gt;  ... I recall that when I tried to upload maven bundles to sonatype, the jar name has to be of the specific form version is 1.2.3 then it expects abc123-1.2.3.jar, abc123-1.2.3-sources.jar, abc123-1.2.3-javadocs.jar, etc.   &lt;/div&gt;  You may want to check if it is possible to override the filename of the JAR by also providing the POM (and have the repo generate the filename).   &lt;div class="quote quote-1"&gt;  2. If it is possible to load jdom-2.0.2.jar in to the jdom2 artifact, I will consider it... but what about people who are already pulling 2.0.0 and 2.0.1 from the jdom artifact? How will they know to 'move' if their dependencies are not going to move with the artifact....? If I can keep the jdom-2.0.x.jar, I would also consider deploying to *both* jdom2 and jdom artifacts....   &lt;/div&gt;  I don't have a good answer for this. I've run into this issue with other project, changing group id as well.   &lt;div class="quote quote-1"&gt;  3. How do I 'notify' the 30k people a month using 1.1 that they should upgrade/change their artifact to jdom2?   &lt;/div&gt;  On this mailing list + jdom.org...?   &lt;div class="quote quote-1"&gt;  4. Maven provides no way to 'test' something... (at least not with the simple 'bundle' upload). How do I do a 'dry run'? I have already got the JDOM beta's in the jdom2 artifact because I needed to get some 'practice' in.....   &lt;/div&gt;  Could you set up a local repo to test with...?   &lt;div class="quote quote-1"&gt;  The massive re-organization of the code would be a huge impact on the version history would be a PITA for a start....   &lt;/div&gt;  How come, when you're already on Git?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Rolf, Thanks for moving this discussion forward.  I trust Gary and Brad can choose the best option of those you listed.    I'm a fairly naive maven user (that is: it just works for me - once I got over the starting hurdles - and if it doesn't work I blame m2e and not maven :-)    Idea: I have used Ivy in order to do some custom publishing from an Ant build.  I wanted to suggest that Ivy might be more suitable for JDOM's needs?  Ivy is just a .jar that knows how to speak to Maven.    --Joe    On Fri, May 18, 2012 at 12:12 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  So, the fix for this problem appears to be putting future versions of jdom 2.x in to a separate artifact. If the fix is accomplished by changing the artifact ID, then great... the way I see it is:    1. leave it the way it is and have psycho's on jdom-interest whining ;-) 2. put jdom-2.0.2.jar in the jdom artifact, as now, but also deploy jdom2-2.0.2.jar to jdom2 artifact (double-release to maven) 3. put jdom-2.0.2.jar and future versions in jdom2 artifact (assuming I can have a different jar 'base' name than artifact name). 4. put jdom2-2.0.2.jar and future versions in jdom2 artifact, and keep the 'standard' jdom-2.0.2.jar on jdom.org, but that *sux* to have different jars on www.jdom.org and maven-central. 5. rename all of JDOM's future jars to jdom2-2.x.y.jar to accomodate the maven 'problem' ( ;-) ) and then 'conform' to maven-mantra.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>bear with me, I really am trying to get a working solution here... but I am 'South African', so I may come across a little rough ;-)    Also, understand that I do not use maven/ivy/whatever. Getting maven working at all without expert advice was a challenge. I was literally begging for help....    &lt;a class="exlink mklink" href="http://markmail.org/message/wcn5woeer2abez6m" rel="nofollow"&gt; http://markmail.org/message/wcn5woeer2abez6m &lt;/a&gt;   Also understand that it is highly unlikely that jdom will move to the full maven-build type model. It is going to stay as an ant-based build. The massive re-organization of the code would be a huge impact on the version history would be a PITA for a start....    Currently the maven deploy is done using a maven 'bundle' approach. I do not see this changing any time soon.    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven &lt;/a&gt;   See more comments inline.....    Rolf    &lt;span&gt; gary &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello All,    All right, let's see... let me point out again that this is not a Maven problem. This will happen no matter what dependency management system you use. Maven happens to be the grand-daddy of them all in the Java world.   &lt;/div&gt;   Let me fix that statement for you :)   &lt;div class="quote quote-1"&gt;  let me point out again that this is not a Maven-only problem and that other dependency management systems have the same problem. 'ant' is the grand-daddy of dependency management in the Java world,   &lt;/div&gt;  and Maven is the 'whippersnapper' ;-)    hehe.   &lt;div class="quote quote-1"&gt;  In my case I use Ant and Ivy. So all the Maven bashing is pointless because this can happen outside of Maven as is in my case. Maven has pros and cons for sure and outside the scope of this thread.    The bottom line is that JDOM is broken for use from dependency management tools like Ivy and Maven. My guess is that it is also broken for Scala SBT, Buildr, and Graddle. Tools that rely on artifact ids cannot use two different code bases/packages/jars if they have the same id.    More below.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  So, a general comment, and four questions....    The inability of maven to accommodate the flexibility of 'real life' development in an automated way is not the fault of JDOM. The very fact that I have spent so much time already 'dealing' with maven indicates that it has something fundamentally wrong with its design/model. I get the impression that Maven developers expect the world to conform to them, rather than tolerating the heterogeneous we live in. It is "everyone else's fault" if things don't work the maven way.....   &lt;/div&gt;  I disagree but I do not want to spend more time attributing blame. That's not going to help anyone today.   &lt;/div&gt;   Perhaps, I *know* there are emotions involved,... but the problem is really quite simple.... I'll get to it.   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  1. you say that the artifact does not need to be the same as the 'base name' of the jar, yet everything i have read suggests it does need to be the same: &lt;a class="exlink mklink" href="http://maven.apache.org/maven-conventions.html" rel="nofollow"&gt; http://maven.apache.org/maven-conventions.html &lt;/a&gt; Further, while I have no record of it, I recall that when I tried to upload maven bundles to sonatype, the jar name has to be of the specific form version is 1.2.3 then it expects abc123-1.2.3.jar, abc123-1.2.3-sources.jar, abc123-1.2.3-javadocs.jar, etc. When I get home I can try something different to double-check, but i am pretty certain.... If maven were actually 'easy' to work with, there should be an easy way for anyone to actually try that.... is there a way?   &lt;/div&gt;  You might be right in the end WRT jar names matching artifact id. I like you do not care to fight Maven more than I already do. What I do know is that Maven is overridable is all sorts of advanced and magical ways that I do not fully grok. So it might be possible of course to end up with the jar file name you want in the end.    FWIW, for all of the Apache Commons projects I've seen that required a package name change (Math 3.0, Lang 3.0, VFS 2.0), we've ended up with a jar file that matches the artifact id. That's never bothered anyone enough to change the default I suppose.   &lt;/div&gt;  For what it's worth, JDOM *has* changed the jar file, from jdom-1.1.3.jar to jdom-2.0.1.jar    I know, you meant that you expected jdom2.jar or something.... but *why*? Because *maven* needs it? Because *ivy* needs it?   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  2. If it is possible to load jdom-2.0.2.jar in to the jdom2 artifact, I will consider it... but what about people who are already pulling 2.0.0 and 2.0.1 from the jdom artifact? How will they know to 'move' if their dependencies are not going to move with the artifact....? If I can keep the jdom-2.0.x.jar, I would also consider deploying to *both* jdom2 and jdom artifacts....   &lt;/div&gt;  This is where I think JDOM2 made a big mistake.    JDOM 1 is not binary compatible with JDOM 2 because of the package name change.   &lt;/div&gt;   It was incompatible for other reasons, so 'formalizing' it with a package change made it very obvious ... ;-)    And this is where I think your logic step breaks down....    java -cp .:jdom-1.1.3.jar:jdom-2.0.1.jar MyApp    is just fine.    What you are saying is that it is JDOM's fault that Maven cannot build a class path..... ;-)    There is *no* problem with running both jdom 1.x and 2.x in the same system. The problem is how to 'package'/'build'/'deliver' the jars.    So, I am an 'old fashioned' ant-build type person. I am very happy with that, but I know it is not 'cool'.    On the other hand, I acknowledge there are other ways to do it. So, it comes down to the fact that *JDOM* is fine, the JDOM 2.x jars have a perfectly good name, but they are not being *exposed* correctly in Maven/ivy/whatever.    So I messed up with the maven deploy, again, how to fix it? As I said before, I am willing to consider fixing things, this is not a dead issue.... (but I take offense when people say it is JDOM's fault that maven cannot build a classpath.... Hell, ant can do it, so why then is maven 'better'!).   &lt;div class="quote quote-1"&gt;  So I cannot just change my ivy.xml (or pom.xml) and say I want "2.0.1" instead of "1.1.1" and have it work.   &lt;/div&gt;   or ivy   &lt;div class="quote quote-1"&gt;  I must change all of my source files to use the new package. If I have to do that, then surely, changing the artifact id from "jdom" to "jdom2" makes sense and is not an added burden IMO.   &lt;/div&gt;  The decision to put JDOM 2.x in the jdom artifact is/was (at the time) reasonable.... now I see that it's not necessarily so reasonable, but I am stuck.... I am stuck with deciding what the *right* solution is...    I agree that when changing package names that changing the artifactID is easy too... but changing the artifactID has implications for JDOM....    Technically there is nothing wrong with the way that JDOM is released, as jdom-1.1.3.jar and jdom-2.0.1.jar. Technically they are both successfully released to maven. Technically they should probably have had different artifact ID's.... but, do I have to rename (the future) jdom-2.0.2.jar jdom2-2.0.2.jar just to make maven (and ivy.... etc.) happy?    So, the fix for this problem appears to be putting future versions of jdom 2.x in to a separate artifact. If the fix is accomplished by changing the artifact ID, then great... the way I see it is:    1. leave it the way it is and have psycho's on jdom-interest whining ;-) 2. put jdom-2.0.2.jar in the jdom artifact, as now, but also deploy jdom2-2.0.2.jar to jdom2 artifact (double-release to maven) 3. put jdom-2.0.2.jar and future versions in jdom2 artifact (assuming I can have a different jar 'base' name than artifact name). 4. put jdom2-2.0.2.jar and future versions in jdom2 artifact, and keep the 'standard' jdom-2.0.2.jar on jdom.org, but that *sux* to have different jars on www.jdom.org and maven-central. 5. rename all of JDOM's future jars to jdom2-2.x.y.jar to accomodate the maven 'problem' ( ;-) ) and then 'conform' to maven-mantra.   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  3. How do I 'notify' the 30k people a month using 1.1 that they should upgrade/change their artifact to jdom2?   &lt;/div&gt;  The same way you tell them there is a new version. At Apache we use an announcement mailing list, some folks use Twitter, and so on.    In the end you cannot force people to upgrade, each developer has to make a conscious decision to update a jar (which might drag in other jars with it and so on.)   &lt;/div&gt;   Agreed, I was just whining about no-one liking jdom 2.x ;-)   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  4. Maven provides no way to 'test' something... (at least not with the simple 'bundle' upload). How do I do a 'dry run'? I have already got the JDOM beta's in the jdom2 artifact because I needed to get some 'practice' in.....   &lt;/div&gt;  This is how we do it for Apache Commons including dry runs:  &lt;a class="exlink mklink" href="http://wiki.apache.org/commons/UsingNexus" rel="nofollow"&gt; http://wiki.apache.org/commons/UsingNexus &lt;/a&gt;  &lt;/div&gt;   That *requires* using 'mvn' to build JDOM.... which is not going to happen (short/medium term).   &lt;div class="quote quote-1"&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Tatu    That's a pretty strong opinion.    three things.    there is nothing stopping you from using JDOM 1.x and 2.x at the same time. You can easily put both jars in your classpath.... it is *maven* that is stopping you from doing that. I am only allowed to have one group-id - it is the oss-sonatype nexus that stops me from doing adding more. if this all seems 'a very bad idea', why did you not prevent this problem from happening when I asked numerous times for experienced maven users to assist?    All in all, I think it is fair to blame maven here.    Rolf    On Fri, 18 May 2012 11:10:50 -0700 (PDT), Tatu Saloranta &lt;span&gt; cowt &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yahoo.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  +1 to this -- I think it is a very bad idea for a major backwards incompatible version to use the same artifact name OR group id for exactly this reason.While there are ways around this -- namely, using OSGi -- the most practical way otherwise is to change artifact name.    I do not think Maven is to blame for this: while Maven can help in detecting the problem -- assuming that major version upgrade represents incompatible changes, which is not given for all projects either -- one will still get into trouble for transitive dependencies. Problem is much more fundamental than package dependency or repository system, and will either bite users, or prevent other libs from upgrading to use JDOM 2. Or most likely, both.    This is a particularly nasty problem for "low level" libraries, projects, which are added as transitive dependencies.    Blaming Maven here is not very productive, it's just a messenger. At the same time, if the version is out, well, shit has hit the fan.    -+ Tatu +-    ________________________________ &lt;span&gt; mj-l &lt;a class="email mklink"&gt; ... &lt;/a&gt; @expertsystems.se &lt;/span&gt; To: Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Sent: Friday, May 18, 2012 4:24 AM Subject: Re: [jdom-interest] V2.x not usable next to V1.x    JDOM 2 should have used an artifactId separate from that of JDOM 1 (just like the package is renamed to allow for parallell versions).    For example                  &lt;div class="quote quote-2"&gt;  ----- Original Message ----- Subject: Re: [jdom-interest] V2.x not usable next to V1.x Date: Fri, 18 May 2012 06:55:24 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;    Hi Gary.    I am not a Maven expert.... and there is not a huge amount of Maven *owner* expertise on this list (we have a number of maven *users*, but not many people who 'publish'). I have learned enough to 'publish' to maven, but I do not even *use* it.    As such, our maven 'support' may be broken.    But.... this is a limitation of maven.... not the way we deploy it.    Can you show us how we should do it differently?    For your information though, have you seen these sorts of questions.... ?   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven" rel="nofollow"&gt; http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven &lt;/a&gt;  &lt;div class="quote quote-2"&gt;   Rolf    On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-3"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.    Gary    _______________________________________________ To control your jdom-interest membership:   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>You never answered any of the 4 questions ;-)    A few months ago I was begging for maven-experienced people to 'do it right'....    There was some help putting together a POM, but by far the biggest challenge is getting all the 'protocols' in place to actually deliver projects to maven-central. And that makes things difficult. Especially difficult because there is no easy way to do a 'sand-box' test-like process, and it is not available for 'anyone' to do.... it took me weeks just to understand, submit, and process the 'paperwork'. Then, once you are on, you have *no* second-chances.... get one little-bitsy-teeny thing wrong, and you're screwed. If I do something simple like have a piece of uncommitted code when I build the JDOM Build, then that is unrecoverable....    So, in essence, based on the information available 'back then', I have done everything *right*, and JDOM 2.x is correctly installed in maven. What's not working is the condition where someone wants to use two different versions of JDOM at one time....    Rolf    Paul Libbrecht appears to have anticipated this problem    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  The maven dox are clear about its adherence to "convention over configuration", which is the very thing I found compelling after my own bout of grumbling over its noncompliance with *my* conventions (src/main/java indeed when src should be enough, sez' I). That said, it provide way to override almost anything, although that's usually painful enough that its best avoided.    Think of it this way. For the problems I work on, JDOM is a very small tree in a very large forest of jars that must work together. I need it to fit in to that forest and "just work" without having to think about your reasons for wanting (or needing) your own set of conventions. Regardless of its (many) flaws, maven projects generally more or less deliver on that promise. Outlier conventions create problems for me and I avoid packages that create problems.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>+1 to this -- I think it is a very bad idea for a major backwards incompatible &lt;br/&gt; version to use the same artifact name OR group id for exactly this reason.While &lt;br/&gt; there are ways around this -- namely, using OSGi -- the most practical way &lt;br/&gt; otherwise is to change artifact name.    I do not think Maven is to blame for this: while Maven can help in detecting the &lt;br/&gt; problem -- assuming that major version upgrade represents incompatible changes, &lt;br/&gt; which is not given for all projects either -- one will still get into trouble &lt;br/&gt; for transitive dependencies. Problem is much more fundamental than package dependency or repository system, &lt;br/&gt; and will either bite users, or prevent other libs from upgrading to use JDOM 2. &lt;br/&gt; Or most likely, both.    This is a particularly nasty problem for "low level" libraries, projects, which &lt;br/&gt; are added as transitive dependencies.    Blaming Maven here is not very productive, it's just a messenger. At the same &lt;br/&gt; time, if the version is out, well, shit has hit the fan.    -+ Tatu +-    ________________________________ &lt;span&gt; mj-l &lt;a class="email mklink"&gt; ... &lt;/a&gt; @expertsystems.se &lt;/span&gt; To: Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Sent: Friday, May 18, 2012 4:24 AM Subject: Re: [jdom-interest] V2.x not usable next to V1.x    JDOM 2 should have used an artifactId separate from that of JDOM 1 (just like &lt;br/&gt; the package is renamed to allow for parallell versions).    For example                  &lt;div class="quote quote-1"&gt;  ----- Original Message ----- Subject: Re: [jdom-interest] V2.x not usable next to V1.x Date: Fri, 18 May 2012 06:55:24 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;    Hi Gary.    I am not a Maven expert.... and there is not a huge amount of Maven *owner* expertise on this list (we have a number of maven *users*, but not many people who 'publish'). I have learned enough to 'publish' to maven, but I do not even *use* it.    As such, our maven 'support' may be broken.    But.... this is a limitation of maven.... not the way we deploy it.    Can you show us how we should do it differently?    For your information though, have you seen these sorts of questions.... ?  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven" rel="nofollow"&gt; http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven &lt;/a&gt;   Rolf    On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-2"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.    Gary    _______________________________________________ To control your jdom-interest membership:   &lt;/div&gt;  http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>The maven dox are clear about its adherence to "convention over configuration", which is the very thing I found compelling after my own bout of grumbling over its noncompliance with *my* conventions (src/main/java indeed when src should be enough, sez' I). That said, it provide way to override almost anything, although that's usually painful enough that its best avoided.    Think of it this way. For the problems I work on, JDOM is a very small tree in a very large forest of jars that must work together. I need it to fit in to that forest and "just work" without having to think about your reasons for wanting (or needing) your own set of conventions. Regardless of its (many) flaws, maven projects generally more or less deliver on that promise. Outlier conventions create problems for me and I avoid packages that create problems.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  So, a general comment, and four questions....    The inability of maven to accommodate the flexibility of 'real life' development in an automated way is not the fault of JDOM. The very fact that I have spent so much time already 'dealing' with maven indicates that it has something fundamentally wrong with its design/model. I get the impression that Maven developers expect the world to conform to them, rather than tolerating the heterogeneous we live in. It is "everyone else's fault" if things don't work the maven way.....    1. you say that the artifact does not need to be the same as the 'base name' of the jar, yet everything i have read suggests it does need to be the same: &lt;a class="exlink mklink" href="http://maven.apache.org/maven-conventions.html" rel="nofollow"&gt; http://maven.apache.org/maven-conventions.html &lt;/a&gt; Further, while I have no record of it, I recall that when I tried to upload maven bundles to sonatype, the jar name has to be of the specific form version is 1.2.3 then it expects abc123-1.2.3.jar, abc123-1.2.3-sources.jar, abc123-1.2.3-javadocs.jar, etc. When I get home I can try something different to double-check, but i am pretty certain.... If maven were actually 'easy' to work with, there should be an easy way for anyone to actually try that.... is there a way?    2. If it is possible to load jdom-2.0.2.jar in to the jdom2 artifact, I will consider it... but what about people who are already pulling 2.0.0 and 2.0.1 from the jdom artifact? How will they know to 'move' if their dependencies are not going to move with the artifact....? If I can keep the jdom-2.0.x.jar, I would also consider deploying to *both* jdom2 and jdom artifacts....    3. How do I 'notify' the 30k people a month using 1.1 that they should upgrade/change their artifact to jdom2?    4. Maven provides no way to 'test' something... (at least not with the simple 'bundle' upload). How do I do a 'dry run'? I have already got the JDOM beta's in the jdom2 artifact because I needed to get some 'practice' in.....    Frankly, I would rather be spending my time building 'fun' things than untangling this mess....    Rolf    &lt;span&gt; gary &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-2"&gt;  Hi Rolf,    Thank you for detailed reply. Let me address several points below. I'll probably ramble on too... :)    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Where were you for this discussion:   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.   &lt;/div&gt;  The problem is not that Maven has to give things names, the issue, IMO, is how does *any* automated build system deal with using multiple versions of the same component.    By 'build system' here, I am not talking about just compiling and jaring at the Ant level, I am talking about continuous integration, automatically dealing with pulling down project dependencies (I use Ant + Ivy at work and Maven at Apache.) and publishing the build results up the food chain (I use Ant + Ivy + Bamboo + Artifactory at work, and Maven + Nexus at Apache.)    At work (and to a lesser extent at Apache), I deal with multiple product lines with multiple branches, each with their own set of large dependency list.    As you can imagine, doing anything build related by hand is not good.    So here I am building a large application server and I want update my code to JDOM2. Several of my 3rd party dependencies from various products (some open source, some not) use JDOM1. They each use different versions of JDOM1, luckily, overriding all dependencies to use 1.1.1 has not been a problem.    In Ivy, I cannot say this and expect it to work:       This works OTOH:       If you want to use both commons-lang 2.6 and 3.1 at the same time, you need to pull down both using a different "name" which corresponds to the Maven "artifact Id"    This example also shows that the "org" was changed but it is irrelevant to this example. What matters is that you can uniquely identify each artifact.   &lt;div class="quote quote-3"&gt;  'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.   &lt;/div&gt;  Great ;) The jar name and project name are your own should not matter.   &lt;div class="quote quote-3"&gt;  This means that the maven artifact id *must* be 'jdom', not 'jdom2'.   &lt;/div&gt;  I do not think so. Naming the jar and the artifact are separate issues.    From the Ivy POV at least, once an artifact is found, Ivy can download it and rename it on the fly to a custom name pattern (with a version in the jar name or not, it's up to the user)   &lt;div class="quote quote-3"&gt;  At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....   &lt;/div&gt;  That's the joy of serving people who build large complex systems ;)   &lt;div class="quote quote-3"&gt;  Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.   &lt;/div&gt;  A jar is a jar, it just need to be uniquely identifiable whether it lives in an FTP directory, a Maven or Ivy repository.   &lt;div class="quote quote-3"&gt;  There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; |32349F|67329F|9D329F|9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months|For+org.jdom:jdom&amp;amp;chds=0,92301&amp;amp;chd=t:92301,6406,3425,716,35&amp;amp;chdl=1.1|1.1.2|1.1.3|2.0.0|2.0.1  &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0 &lt;/a&gt; ,92301&amp;amp;chd=t:92301,6406,3425,716,35&amp;amp;chdl=1.1%7C1.1.2%7C1.1.3%7C2.0.0%7C2.0.1   &lt;div class="quote quote-2"&gt;   &lt;div class="quote quote-3"&gt;  JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....   &lt;/div&gt;  Uh... Who's fault is that?   &lt;div class="quote quote-3"&gt;  So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar   &lt;/div&gt;  You do not have to do that. You can call the jars whatever you want.   &lt;div class="quote quote-3"&gt;  2. maven is the 'secondary' distribution system   &lt;/div&gt;  3. you can ask your 'dependency' code to upgrade to jdom 2.x (they   &lt;/div&gt;  should   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt;  be doing it anyway).   &lt;/div&gt;  This is unrealistic for several reasons. What if a jar using JDOM1 is not longer active? And closed source to boot? There are plenty of scenario where JDOM 1 and 2 need to co-exist.    4. The bell has already been rung on this... I can't un-ring this maven   &lt;div class="quote quote-3"&gt;  problem.   &lt;/div&gt;  This can be addresses in future releases.   &lt;div class="quote quote-3"&gt;  5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them.   &lt;/div&gt;  What about people who build in Grail, Buildr, Groovy and Scala?   &lt;div class="quote quote-3"&gt;  6. This is all a maven problem (by design or implementation, I am not sure)   &lt;/div&gt;  Au contraire, this is not a Maven problem. This is a generic issue as I described above when building large systems automatically with complex dependencies.    7. maven 'users' (including apache commons) are happy to do their own   &lt;div class="quote quote-3"&gt;  thing anyway...   &lt;/div&gt;  True of any user on any build system.   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; |ga|1|a%3A%22org.apache.servicemix.bundles.jdom%22  &lt;a class="exlink mklink" href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22" rel="nofollow"&gt; http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22 &lt;/a&gt;  &lt;div class="quote quote-2"&gt;   &lt;div class="quote quote-3"&gt;  8. maven is a PITA ..... :(   &lt;/div&gt;  True of any build on any build system once it gets large and complex enough.   &lt;div class="quote quote-3"&gt;  As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....   &lt;/div&gt;  I suggest that you publish JDOM2 under the jdom2 artifact id to match the package name. You can call the jar whatever you want.    Thank you for reading this far!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>No, the problem is not like that, it won't affect the stats.    What *could* be possible is that people have not moved to 2.x because they have compile dependencies from components that *require* 1.1, and thus they need 1.1 too....    Remember, they did not move from 1.1 to 1.1.2 and 1.1.3 either.    I think the stats are a fair representation of the 'demand' for JDOM, but that people set up their maven systems 'a long time ago' and they are on 'auto pilot' so they are not aware of the bug fixes, performance gains, etc that are in 1.1.2, 1.1.3, and 2.0.x. Also, I think the 'automated' systems that download from maven are overestimating the number of maven downloads when compared to the www.jdom.org site. I would guess that a lot of the 30k downloads a month are from a few people who have badly configured build environments that just download JDOM multiple times a day..... thus inflating the doanload numbers. My guess would be that the 'big' users of JDOM download the zip file once, and install it in to their 'build' process, and then never touch it again until the next version is out. I know that we do that where I work, and thus we have just 1 donload hit for many many thousands of builds, developers, versions, etc. On the other hand, a poorly configured maven 'shop' will likely have one download per developer, per 'clean' build, per day....    Rolf    &lt;span&gt; joe. &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  If there is a problem with the way jdom2 was published to maven, this might affect your stats?   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>So, a general comment, and four questions....    The inability of maven to accommodate the flexibility of 'real life' development in an automated way is not the fault of JDOM. The very fact that I have spent so much time already 'dealing' with maven indicates that it has something fundamentally wrong with its design/model. I get the impression that Maven developers expect the world to conform to them, rather than tolerating the heterogeneous we live in. It is "everyone else's fault" if things don't work the maven way.....    1. you say that the artifact does not need to be the same as the 'base name' of the jar, yet everything i have read suggests it does need to be the same: &lt;a class="exlink mklink" href="http://maven.apache.org/maven-conventions.html" rel="nofollow"&gt; http://maven.apache.org/maven-conventions.html &lt;/a&gt; Further, while I have no record of it, I recall that when I tried to upload maven bundles to sonatype, the jar name has to be of the specific form version is 1.2.3 then it expects abc123-1.2.3.jar, abc123-1.2.3-sources.jar, abc123-1.2.3-javadocs.jar, etc. When I get home I can try something different to double-check, but i am pretty certain.... If maven were actually 'easy' to work with, there should be an easy way for anyone to actually try that.... is there a way?    2. If it is possible to load jdom-2.0.2.jar in to the jdom2 artifact, I will consider it... but what about people who are already pulling 2.0.0 and 2.0.1 from the jdom artifact? How will they know to 'move' if their dependencies are not going to move with the artifact....? If I can keep the jdom-2.0.x.jar, I would also consider deploying to *both* jdom2 and jdom artifacts....    3. How do I 'notify' the 30k people a month using 1.1 that they should upgrade/change their artifact to jdom2?    4. Maven provides no way to 'test' something... (at least not with the simple 'bundle' upload). How do I do a 'dry run'? I have already got the JDOM beta's in the jdom2 artifact because I needed to get some 'practice' in.....    Frankly, I would rather be spending my time building 'fun' things than untangling this mess....    Rolf    &lt;span&gt; gary &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    Thank you for detailed reply. Let me address several points below. I'll probably ramble on too... :)    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Where were you for this discussion:   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;  &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.   &lt;/div&gt;  The problem is not that Maven has to give things names, the issue, IMO, is how does *any* automated build system deal with using multiple versions of the same component.    By 'build system' here, I am not talking about just compiling and jaring at the Ant level, I am talking about continuous integration, automatically dealing with pulling down project dependencies (I use Ant + Ivy at work and Maven at Apache.) and publishing the build results up the food chain (I use Ant + Ivy + Bamboo + Artifactory at work, and Maven + Nexus at Apache.)    At work (and to a lesser extent at Apache), I deal with multiple product lines with multiple branches, each with their own set of large dependency list.    As you can imagine, doing anything build related by hand is not good.    So here I am building a large application server and I want update my code to JDOM2. Several of my 3rd party dependencies from various products (some open source, some not) use JDOM1. They each use different versions of JDOM1, luckily, overriding all dependencies to use 1.1.1 has not been a problem.    In Ivy, I cannot say this and expect it to work:       This works OTOH:       If you want to use both commons-lang 2.6 and 3.1 at the same time, you need to pull down both using a different "name" which corresponds to the Maven "artifact Id"    This example also shows that the "org" was changed but it is irrelevant to this example. What matters is that you can uniquely identify each artifact.   &lt;div class="quote quote-2"&gt;  'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.   &lt;/div&gt;  Great ;) The jar name and project name are your own should not matter.   &lt;div class="quote quote-2"&gt;  This means that the maven artifact id *must* be 'jdom', not 'jdom2'.   &lt;/div&gt;  I do not think so. Naming the jar and the artifact are separate issues.    From the Ivy POV at least, once an artifact is found, Ivy can download it and rename it on the fly to a custom name pattern (with a version in the jar name or not, it's up to the user)   &lt;div class="quote quote-2"&gt;  At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....   &lt;/div&gt;  That's the joy of serving people who build large complex systems ;)   &lt;div class="quote quote-2"&gt;  Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.   &lt;/div&gt;  A jar is a jar, it just need to be uniquely identifiable whether it lives in an FTP directory, a Maven or Ivy repository.   &lt;div class="quote quote-2"&gt;  There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0 &lt;/a&gt;   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;   JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....   &lt;/div&gt;  Uh... Who's fault is that?   &lt;div class="quote quote-2"&gt;  So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar   &lt;/div&gt;  You do not have to do that. You can call the jars whatever you want.   &lt;div class="quote quote-2"&gt;  2. maven is the 'secondary' distribution system   &lt;/div&gt;  3. you can ask your 'dependency' code to upgrade to jdom 2.x (they   &lt;/div&gt;  should   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  be doing it anyway).   &lt;/div&gt;  This is unrealistic for several reasons. What if a jar using JDOM1 is not longer active? And closed source to boot? There are plenty of scenario where JDOM 1 and 2 need to co-exist.    4. The bell has already been rung on this... I can't un-ring this maven   &lt;div class="quote quote-2"&gt;  problem.   &lt;/div&gt;  This can be addresses in future releases.   &lt;div class="quote quote-2"&gt;  5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them.   &lt;/div&gt;  What about people who build in Grail, Buildr, Groovy and Scala?   &lt;div class="quote quote-2"&gt;  6. This is all a maven problem (by design or implementation, I am not sure)   &lt;/div&gt;  Au contraire, this is not a Maven problem. This is a generic issue as I described above when building large systems automatically with complex dependencies.    7. maven 'users' (including apache commons) are happy to do their own   &lt;div class="quote quote-2"&gt;  thing anyway...   &lt;/div&gt;  True of any user on any build system.   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; &lt;a class="exlink mklink" href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22" rel="nofollow"&gt; http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22 &lt;/a&gt;   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  8. maven is a PITA ..... :(   &lt;/div&gt;  True of any build on any build system once it gets large and complex enough.   &lt;div class="quote quote-2"&gt;  As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....   &lt;/div&gt;  I suggest that you publish JDOM2 under the jdom2 artifact id to match the package name. You can call the jar whatever you want.    Thank you for reading this far!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>If there is a problem with the way jdom2 was published to maven, this might affect your stats?    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;   Where were you for this discussion:   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;  &lt;div class="quote quote-1"&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.    'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.    This means that the maven artifact id *must* be 'jdom', not 'jdom2'.    At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....    Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.    There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; |32349F|67329F|9D329F|9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months|For+org.jdom:jdom&amp;amp;chds=0,92301&amp;amp;chd=t:92301,6406,3425,716,35&amp;amp;chdl=1.1|1.1.2|1.1.3|2.0.0|2.0.1   &lt;div class="quote quote-1"&gt;   JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....    So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar 2. maven is the 'secondary' distribution system 3. you can ask your 'dependency' code to upgrade to jdom 2.x (they should be doing it anyway). 4. The bell has already been rung on this... I can't un-ring this maven problem. 5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them. 6. This is all a maven problem (by design or implementation, I am not sure) 7. maven 'users' (including apache commons) are happy to do their own thing anyway...   &lt;/div&gt;  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; |ga|1|a%3A%22org.apache.servicemix.bundles.jdom%22   &lt;div class="quote quote-1"&gt;  8. maven is a PITA ..... :(    As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>To add fuel to this fire... I stopped using JDOM 1.x altogether when it wasn't available on maven (awhile back) and started again only when JDOM 2.x became available on maven.    The "alternative" distro argument doesn't persuade; its just too much a PITA to adjust to each and every developer's idiosyncratic objections to a well-established model, regardless of its deficiencies. Its far easier to adjust to the idiosyncacies of the many DOM alternatives that ARE available on maven.    My main interest is SIMPLIFYING my life in this overly-complex world, and maven is the only tool that does that for me. I'd go back to W3C DOM if that were the only way to achieve it, as much as I detest working with that.    &lt;span&gt; gary &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt;wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    Thank you for detailed reply. Let me address several points below. I'll probably ramble on too... :)    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Where were you for this discussion:    &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.   &lt;/div&gt;  The problem is not that Maven has to give things names, the issue, IMO, is how does *any* automated build system deal with using multiple versions of the same component.    By 'build system' here, I am not talking about just compiling and jaring at the Ant level, I am talking about continuous integration, automatically dealing with pulling down project dependencies (I use Ant + Ivy at work and Maven at Apache.) and publishing the build results up the food chain (I use Ant + Ivy + Bamboo + Artifactory at work, and Maven + Nexus at Apache.)    At work (and to a lesser extent at Apache), I deal with multiple product lines with multiple branches, each with their own set of large dependency list.    As you can imagine, doing anything build related by hand is not good.    So here I am building a large application server and I want update my code to JDOM2. Several of my 3rd party dependencies from various products (some open source, some not) use JDOM1. They each use different versions of JDOM1, luckily, overriding all dependencies to use 1.1.1 has not been a problem.    In Ivy, I cannot say this and expect it to work:       This works OTOH:       If you want to use both commons-lang 2.6 and 3.1 at the same time, you need to pull down both using a different "name" which corresponds to the Maven "artifact Id"    This example also shows that the "org" was changed but it is irrelevant to this example. What matters is that you can uniquely identify each artifact.   &lt;div class="quote quote-2"&gt;  'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.   &lt;/div&gt;  Great ;) The jar name and project name are your own should not matter.   &lt;div class="quote quote-2"&gt;  This means that the maven artifact id *must* be 'jdom', not 'jdom2'.   &lt;/div&gt;  I do not think so. Naming the jar and the artifact are separate issues.    From the Ivy POV at least, once an artifact is found, Ivy can download it and rename it on the fly to a custom name pattern (with a version in the jar name or not, it's up to the user)   &lt;div class="quote quote-2"&gt;  At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....   &lt;/div&gt;  That's the joy of serving people who build large complex systems ;)   &lt;div class="quote quote-2"&gt;  Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.   &lt;/div&gt;  A jar is a jar, it just need to be uniquely identifiable whether it lives in an FTP directory, a Maven or Ivy repository.   &lt;div class="quote quote-2"&gt;  There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0 &lt;/a&gt;    JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....   &lt;/div&gt;  Uh... Who's fault is that?   &lt;div class="quote quote-2"&gt;  So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar   &lt;/div&gt;  You do not have to do that. You can call the jars whatever you want.   &lt;div class="quote quote-2"&gt;  2. maven is the 'secondary' distribution system   &lt;/div&gt;  3. you can ask your 'dependency' code to upgrade to jdom 2.x (they should   &lt;div class="quote quote-2"&gt;  be doing it anyway).   &lt;/div&gt;  This is unrealistic for several reasons. What if a jar using JDOM1 is not longer active? And closed source to boot? There are plenty of scenario where JDOM 1 and 2 need to co-exist.    4. The bell has already been rung on this... I can't un-ring this maven   &lt;div class="quote quote-2"&gt;  problem.   &lt;/div&gt;  This can be addresses in future releases.   &lt;div class="quote quote-2"&gt;  5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them.   &lt;/div&gt;  What about people who build in Grail, Buildr, Groovy and Scala?   &lt;div class="quote quote-2"&gt;  6. This is all a maven problem (by design or implementation, I am not sure)   &lt;/div&gt;  Au contraire, this is not a Maven problem. This is a generic issue as I described above when building large systems automatically with complex dependencies.    7. maven 'users' (including apache commons) are happy to do their own   &lt;div class="quote quote-2"&gt;  thing anyway...   &lt;/div&gt;  True of any user on any build system.   &lt;div class="quote quote-2"&gt;  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; &lt;a class="exlink mklink" href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22" rel="nofollow"&gt; http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22 &lt;/a&gt; 8. maven is a PITA ..... :(   &lt;/div&gt;  True of any build on any build system once it gets large and complex enough.   &lt;div class="quote quote-2"&gt;  As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....   &lt;/div&gt;  I suggest that you publish JDOM2 under the jdom2 artifact id to match the package name. You can call the jar whatever you want.    Thank you for reading this far!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Hi Rolf,     Thank you for detailed reply. Let me address several points below. I'll probably ramble on too... :)    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Where were you for this discussion:    &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.   &lt;/div&gt;  The problem is not that Maven has to give things names, the issue, IMO, is how does *any* automated build system deal with using multiple versions of the same component.    By 'build system' here, I am not talking about just compiling and jaring at the Ant level, I am talking about continuous integration, automatically dealing with pulling down project dependencies (I use Ant + Ivy at work and Maven at Apache.) and publishing the build results up the food chain (I use Ant + Ivy + Bamboo + Artifactory at work, and Maven + Nexus at Apache.)    At work (and to a lesser extent at Apache), I deal with multiple product lines with multiple branches, each with their own set of large dependency list.    As you can imagine, doing anything build related by hand is not good.    So here I am building a large application server and I want update my code to JDOM2. Several of my 3rd party dependencies from various products (some open source, some not) use JDOM1. They each use different versions of JDOM1, luckily, overriding all dependencies to use 1.1.1 has not been a problem.    In Ivy, I cannot say this and expect it to work:       This works OTOH:       If you want to use both commons-lang 2.6 and 3.1 at the same time, you need to pull down both using a different "name" which corresponds to the Maven "artifact Id"    This example also shows that the "org" was changed but it is irrelevant to this example. What matters is that you can uniquely identify each artifact.   &lt;div class="quote quote-1"&gt;  'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.   &lt;/div&gt;  Great ;) The jar name and project name are your own should not matter.   &lt;div class="quote quote-1"&gt;  This means that the maven artifact id *must* be 'jdom', not 'jdom2'.   &lt;/div&gt;  I do not think so. Naming the jar and the artifact are separate issues.    From the Ivy POV at least, once an artifact is found, Ivy can download it and rename it on the fly to a custom name pattern (with a version in the jar name or not, it's up to the user)   &lt;div class="quote quote-1"&gt;  At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....   &lt;/div&gt;  That's the joy of serving people who build large complex systems ;)   &lt;div class="quote quote-1"&gt;  Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.   &lt;/div&gt;  A jar is a jar, it just need to be uniquely identifiable whether it lives in an FTP directory, a Maven or Ivy repository.   &lt;div class="quote quote-1"&gt;  There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F%7C32349F%7C67329F%7C9D329F%7C9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months%7CFor+org.jdom:jdom&amp;amp;chds=0 &lt;/a&gt;    JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....   &lt;/div&gt;  Uh... Who's fault is that?   &lt;div class="quote quote-1"&gt;  So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar   &lt;/div&gt;  You do not have to do that. You can call the jars whatever you want.   &lt;div class="quote quote-1"&gt;  2. maven is the 'secondary' distribution system   &lt;/div&gt;  3. you can ask your 'dependency' code to upgrade to jdom 2.x (they should   &lt;div class="quote quote-1"&gt;  be doing it anyway).   &lt;/div&gt;  This is unrealistic for several reasons. What if a jar using JDOM1 is not longer active? And closed source to boot? There are plenty of scenario where JDOM 1 and 2 need to co-exist.    4. The bell has already been rung on this... I can't un-ring this maven   &lt;div class="quote quote-1"&gt;  problem.   &lt;/div&gt;  This can be addresses in future releases.   &lt;div class="quote quote-1"&gt;  5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them.   &lt;/div&gt;  What about people who build in Grail, Buildr, Groovy and Scala?   &lt;div class="quote quote-1"&gt;  6. This is all a maven problem (by design or implementation, I am not sure)   &lt;/div&gt;  Au contraire, this is not a Maven problem. This is a generic issue as I described above when building large systems automatically with complex dependencies.    7. maven 'users' (including apache commons) are happy to do their own   &lt;div class="quote quote-1"&gt;  thing anyway...   &lt;/div&gt;  True of any user on any build system.   &lt;div class="quote quote-1"&gt;  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; &lt;a class="exlink mklink" href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22" rel="nofollow"&gt; http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22org.apache.servicemix.bundles.jdom%22 &lt;/a&gt; 8. maven is a PITA ..... :(   &lt;/div&gt;  True of any build on any build system once it gets large and complex enough.   &lt;div class="quote quote-1"&gt;  As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....   &lt;/div&gt;  I suggest that you publish JDOM2 under the jdom2 artifact id to match the package name. You can call the jar whatever you want.    Thank you for reading this far!    Gary   &lt;div class="quote quote-1"&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Where were you for this discussion:  &lt;a class="exlink mklink" href="http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results" rel="nofollow"&gt; http://markmail.org/message/yjojwj26bwrxj5nx#query:+page:1+mid:buwh5fismpdahuoi+state:results &lt;/a&gt;   ;-)    So, the problem is as follows.... Maven imposes naming requirements for artifacts.    'We' decided that this is JDOM 2.0.0, not JDOM2 1.0.0, and also not JDOM2 2.0.0, etc. Thus, the *main* download will be the jar jdom-2.0.0.jar.    This means that the maven artifact id *must* be 'jdom', not 'jdom2'.    At the time I was not aware how hard/impossible it would be to have both jdom 1.x and 2.x sourced from maven....    Maven is the 'secondary' distribution system for JDOM. The primary JDOM source is from www.jdom.org. The jars downloaded from maven should be identical to the ones from jdom.org.    There are about 15k downloads a month from www.jdom.org of 1.x versions of JDOM. There are about 35k downloads a month from maven-central of 1.x versions of JDOM.    There are about 10k downloads a month from www.jdom.org of 2.0.x versions of JDOM There are about 1k downloads a month from maven-central of 2.0.x versions of JDOM.    The maven downloads show an *opposite* distribution of downloads compared to www.jdom.org:    Here are maven's statistics for the three months Feb, Mar, Apr:    version,count,% "1.1","92301","0.8971452713012695" "1.1.2","6406","0.062264904379844666" "1.1.3","3425","0.03329024091362953" "2.0.0","716","0.006959361489862204" "2.0.1","35","3.4019225859083235E-4"    here's the graph....    &lt;a class="exlink mklink" href="http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F" rel="nofollow"&gt; http://chart.apis.google.com/chart?cht=p3&amp;amp;chs=400x400&amp;amp;chp=4.71&amp;amp;chco=326A9F &lt;/a&gt; |32349F|67329F|9D329F|9F326A&amp;amp;chtt=Downloads+From+Last%203%20Months|For+org.jdom:jdom&amp;amp;chds=0,92301&amp;amp;chd=t:92301,6406,3425,716,35&amp;amp;chdl=1.1|1.1.2|1.1.3|2.0.0|2.0.1    JDOM 1.1 (released 2007) was downloaded 92K times in 3 months. 1.1.2 (released last Aug) downloaded 6.5k times in 3 months. 1.1.3 (released in Feb) just 3.5k times in 3 months    Note that Maven does not even have JDOM 1.1.1 (from 2009) .....    So, it shows a distinct 'inertia' in maven users. For all I know they are not even aware that JDOM 2.x has happened.... My guess would be that 90% of maven users do not pay attention to their code....    In a 'short while' I want to be in the position to say: "JDOM 1.x is no longer being maintained". It is not in *my* interests to do it.... it is essentially unchanged since 2007. If people have problems in JDOM 1.x I'm going to want to say "Upgrade to 2.x". I am targeting about December 2012 for that....    What all this rambling boils down to is:    1. I don't want to have to change JDOM's jar file name from jdom-2.0.x.jar to jdom2-x.y.z.jar 2. maven is the 'secondary' distribution system 3. you can ask your 'dependency' code to upgrade to jdom 2.x (they should be doing it anyway). 4. The bell has already been rung on this... I can't un-ring this maven problem. 5. maven users are 'lazy' about keeping in touch with their dependencies, and this will 'prod' them. 6. This is all a maven problem (by design or implementation, I am not sure) 7. maven 'users' (including apache commons) are happy to do their own thing anyway...  &lt;a class="exlink mklink" href="http://search.maven.org/#search" rel="nofollow"&gt; http://search.maven.org/#search &lt;/a&gt; |ga|1|a%3A%22org.apache.servicemix.bundles.jdom%22 8. maven is a PITA ..... :(    As you can tell, maven support 'requirement' has not been a happy process.... in hindsight I probably should have just said no .... On the other hand, now that I have the automated build system working, it is not hard to publish to maven, as long as it conforms to JDOM's standards, I'm OK.    Now that I have established my 'aversion' to the maven model, can you suggest a way out of this predicament that also conforms to the JDOM 'standard'... ? I promise to consider any suggestions....    Rolf    &lt;span&gt; gary &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi All,    For good or bad, I ended learning more than I care about Maven being the release manager for several Apache Commons components.    Our rule in Commons is that when you change a package name, you must change the Maven artifact id.    My suggestion is to do this in your POM:       Depending on your philosophy, you could also re-publish the Maven artifacts for 2.0.1. But this is usually considered bad form because the POM needs to change and you would then have 2 2.0.1 version with different pom.xml in your sources jar.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Hi All,     For good or bad, I ended learning more than I care about Maven being the release manager for several Apache Commons components.    Our rule in Commons is that when you change a package name, you must change the Maven artifact id.    My suggestion is to do this in your POM:       Depending on your philosophy, you could also re-publish the Maven artifacts for 2.0.1. But this is usually considered bad form because the POM needs to change and you would then have 2 2.0.1 version with different pom.xml in your sources jar.    Gary    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Gary.    I am not a Maven expert.... and there is not a huge amount of Maven *owner* expertise on this list (we have a number of maven *users*, but not many people who 'publish'). I have learned enough to 'publish' to maven, but I do not even *use* it.    As such, our maven 'support' may be broken.    But.... this is a limitation of maven.... not the way we deploy it.    Can you show us how we should do it differently?    For your information though, have you seen these sorts of questions.... ?  &lt;a class="exlink mklink" href="http://stackoverflow.com/" rel="nofollow"&gt; http://stackoverflow.com/ &lt;/a&gt; **questions/9308366/copy-two-** &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven" rel="nofollow"&gt; http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>JDOM 2 should have used an artifactId separate from that of JDOM 1 (just like the package is renamed to allow for parallell versions).    For example         &lt;div class="quote quote-1"&gt;  ----- Original Message ----- Subject: Re: [jdom-interest] V2.x not usable next to V1.x Date: Fri, 18 May 2012 06:55:24 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;    Hi Gary.    I am not a Maven expert.... and there is not a huge amount of Maven *owner* expertise on this list (we have a number of maven *users*, but not many people who 'publish'). I have learned enough to 'publish' to maven, but I do not even *use* it.    As such, our maven 'support' may be broken.    But.... this is a limitation of maven.... not the way we deploy it.    Can you show us how we should do it differently?    For your information though, have you seen these sorts of questions.... ?  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven" rel="nofollow"&gt; http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven &lt;/a&gt;   Rolf    On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-2"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] V2.x not usable next to V1.x</header>
    <body>Hi Gary.    I am not a Maven expert.... and there is not a huge amount of Maven *owner* expertise on this list (we have a number of maven *users*, but not many people who 'publish'). I have learned enough to 'publish' to maven, but I do not even *use* it.    As such, our maven 'support' may be broken.    But.... this is a limitation of maven.... not the way we deploy it.    Can you show us how we should do it differently?    For your information though, have you seen these sorts of questions.... ?  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven" rel="nofollow"&gt; http://stackoverflow.com/questions/9308366/copy-two-versions-of-same-jar-using-maven &lt;/a&gt;   Rolf    On 17/05/2012 11:21 PM, Gary Gregory wrote:   &lt;div class="quote quote-1"&gt;  Hello JDOM,    I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.</body>
  </mail>
  <mail>
    <header>[jdom-interest] V2.x not usable next to V1.x</header>
    <body>Hello JDOM,     I cannot use both v2 and v1 in the same Maven or Ivy project because both use the same id in Maven repositories like Maven Central.    I want to use v2 in my app but 3rd party jars I use depends on v1.    Gary</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Editing Attributes</header>
    <body>You can simply change the value of the Address attribute.    XPathExpression&amp;lt;Element&amp;gt; xp = XPathFactory.instance().compile("//contact_properties[@user_name='bashiro']",    Technically you can go direct to the Attribute and do it like:    XPathExpression&amp;lt;Attribute&amp;gt; xp = XPathFactory.instance().compile("//contact_properties/@address[../@user_name='bashiro']",    Rolf    On 13/05/2012 7:08 AM, Bashiro wrote:   &lt;div class="quote quote-1"&gt;  Hello,          Username is unique so its the primary  Key.    If I want to edit address of say bashiro, I search for bashiro and when found,  the address attributes of bashiro is set to the new attributes. My question is; should the whole bashiro be removed and then the new attributes set, or one can simply edit only address ?</body>
  </mail>
  <mail>
    <header>[jdom-interest] Editing Attributes</header>
    <body>Hello,</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Wow!  Thanks, Rolf.  That was fast and furious.  I'll wait for the 2.0.2 since I have a workaround for now by creating my own list to manipulate. And that may even make more sense because there's really no need in my case to update the JDOM itself when I remove Elements as I process them (which clearly has more housekeeping than just being removed from a list). But thanks for the fix since I'll no doubt need it when manipulating an actual JDOM to produce new XML.    On 5/11/2012 8:51 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi David.    The issue is a bug in the remove(...) method. When this method is called it does not update the correct 'modcount' tracking value.    As a consequence, any 'FilterList' values you may have (getChildren generates a Filterlist), do not re-synchronize themselves with the main 'live' list, and produce broken values, including nulls... but may include non-null, but still inappropriate values....    I have found &amp;amp; fixed this issue. If you want you can download the fixed jar from github at    &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue81.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue81.zip &lt;/a&gt;   This is a 'hotfix' download.... and it will be 'rolled up' in to JDOM 2.0.2 which will be released before month-end. You can do a drop-in replacement of your JDOM jar with the hotfix one.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Hi David.    The issue is a bug in the remove(...) method. When this method is called it does not update the correct 'modcount' tracking value.    As a consequence, any 'FilterList' values you may have (getChildren generates a Filterlist), do not re-synchronize themselves with the main 'live' list, and produce broken values, including nulls... but may include non-null, but still inappropriate values....    I have found &amp;amp; fixed this issue. If you want you can download the fixed jar from github at    &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue81.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue81.zip &lt;/a&gt;   This is a 'hotfix' download.... and it will be 'rolled up' in to JDOM 2.0.2 which will be released before month-end. You can do a drop-in replacement of your JDOM jar with the hotfix one.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Right, I believe I have reproduced it....    Hmmm... still working it.          @SuppressWarnings("javadoc")       @Test                /******  THROWS NULL POINTER ******/          Rolf    On 11/05/2012 10:17 PM, David Wall wrote:   &lt;div class="quote quote-1"&gt;  Okay,    Attached is the XML I was parsing. In particular, I noted the null pointer on the elements DropDown and DropDownVersion. There should be a one-to-one correspondence between these two elements, with the DropDownVersion containing a dropDownId that links it to the DropDown element.    I have also attached the source code file, but it's not a nice test case. I have a few areas with "JDOM:" comments that are geared for you.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Please send the code.... put a comment in it where you think the failure is..... Under no condition should JDOM return a null value...    Rolf    On 11/05/2012 9:45 PM, David Wall wrote:   &lt;div class="quote quote-1"&gt;  Thanks, Rolf. No, it's definitely not a threading issue. If you saw my second posting, it all works as expected if I create my own LinkedList&amp;lt;Element&amp;gt; from the list returned by getChildren().    If you think it's still a possible issue, I can attached the actual source code and the sample XML data I was parsing. I'm not familiar with JDOM's internals, but if I remove one Element, does that cause a shift for all subsequent elements? I ask this because I am actually creating two lists, one is the main object, and the second is an associated "version" object (the main object can have multiple versions associated with it). In the XML, they are ordered like OBJ, OBJVERSION, OBJ, OBJVERSION, OBJ, OBJVERSION.    When I created to the two lists (one of OBJ and the other of OBJVERSION), I noted that as soon as I deleted the OBJ from the first list, the second list already showed a 'null' element at the end of its list. It made me think that the elements are shifting in the live lists from JDOM and thus I'm no longer working on the originally retrieved lists.    So, if that's all it is and my usage scenario was bogus before, I'm good since I've changed to create my own lists now. But if you think it could still be an issue, I'm happy to send the code and XML to you (it's open source code anyway).</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Thanks, Rolf. No, it's definitely not a threading issue.  If you saw my second posting, it all works as expected if I create my own LinkedList&amp;lt;Element&amp;gt; from the list returned by getChildren().    If you think it's still a possible issue, I can attached the actual source code and the sample XML data I was parsing.  I'm not familiar with JDOM's internals, but if I remove one Element, does that cause a shift for all subsequent elements?  I ask this because I am actually creating two lists, one is the main object, and the second is an associated "version" object (the main object can have multiple versions associated with it).  In the XML, they are ordered like OBJ, OBJVERSION, OBJ, OBJVERSION, OBJ, OBJVERSION.    When I created to the two lists (one of OBJ and the other of OBJVERSION), I noted that as soon as I deleted the OBJ from the first list, the second list already showed a 'null' element at the end of its list.  It made me think that the elements are shifting in the live lists from JDOM and thus I'm no longer working on the originally retrieved lists.    So, if that's all it is and my usage scenario was bogus before, I'm good since I've changed to create my own lists now.  But if you think it could still be an issue, I'm happy to send the code and XML to you (it's open source code anyway).    Thanks, David    On 5/11/2012 6:14 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi David.    This problem you describe is very concerning, and should not, in 'supported' usage ever happen....    I am wracking my brains to figure out what it could be, but, the only think I can think is that you are accessing the JDOM objects from different threads.... JDOM is *not* thread safe.    If this is happening in a single-threaded mechanism, would it be possible to put together a failing 'test case', any code that shows the problem?    I have to admit that I thought he iteration/remove/add/etc. type code is very well tested, and I would be *very* suprised if there is a problem like this.... in fact, I know that there are test cases that cover this basic condition that you describe... and they never fail....    so, if you can confirm this is all happening in one thread.... and preferably if you can put together an example of the problem, I would look in to it immediately....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>Hi David.    This problem you describe is very concerning, and should not, in 'supported' usage ever happen....    I am wracking my brains to figure out what it could be, but, the only think I can think is that you are accessing the JDOM objects from different threads.... JDOM is *not* thread safe.    If this is happening in a single-threaded mechanism, would it be possible to put together a failing 'test case', any code that shows the problem?    I have to admit that I thought he iteration/remove/add/etc. type code is very well tested, and I would be *very* suprised if there is a problem like this.... in fact, I know that there are test cases that cover this basic condition that you describe... and they never fail....    so, if you can confirm this is all happening in one thread.... and preferably if you can put together an example of the problem, I would look in to it immediately....    Rolf    On 11/05/2012 8:42 PM, David Wall wrote:   &lt;div class="quote quote-1"&gt;  I believe I've run into a problem that I don't think I had with JDOM 1.1.3 before I upgraded to 2.0.1.    I create a list of elements of a selected element using:    List&amp;lt;?&amp;gt; documentVersionElements =    I see that I have 6 elements as expected in my list. None are null.    I am basically then trying to find a matching related element id in that list using something like:    ListIterator&amp;lt;?&amp;gt; iter = documentVersionElements EsfUUID evParentId = new    Then, assuming I find it (found != null), I process it as expected. But I then want to remove the found element from the element list so it cannot be found again, so I use this:       Most of the time, this seems to work as expected, and the documentVersionElements list is then shorter by 1.  But there are times when a list of 6 elements remains 6 elements after the remove (and remove() returns false), with 4 of them now null (not removed, but actually a null element), so in when I return to the listIterator() above and get my next() element, the element is null.    It's as if my Element objects are not unique in the list in terms of equals/hashCode as my elements should never be nulled out.    I am not sure why an element I find by iterating cannot then be removed. How could it fail to remove? Why would it change other list elements to NULL instead?  Is this not a valid usage pattern?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>By the way, when I changed the code to create my own "non-live" lists, the problem goes away and it works as expected:    List&amp;lt;Element&amp;gt; documentVersionElements = new    But the elements I'm removing aren't nested in the XML/JDOM, so removing one shouldn't cause anything else to change even with a "live" view of the JDOM.  I suppose when I remove an Element, perhaps it moves the List element order for everything after it and so my live lists are then messed up?    Anyway, it seems that the Element's hashCode/equals works as expected in a regular LinkedList of Elements.</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2 list of elements, remove nulls out entries and fails to remove?</header>
    <body>I believe I've run into a problem that I don't think I had with JDOM 1.1.3 before I upgraded to 2.0.1.    I create a list of elements of a selected element using:    List&amp;lt;?&amp;gt; documentVersionElements =    I see that I have 6 elements as expected in my list. None are null.    I am basically then trying to find a matching related element id in that list using something like:    ListIterator&amp;lt;?&amp;gt; iter = documentVersionElements EsfUUID evParentId = new    Then, assuming I find it (found != null), I process it as expected.  But I then want to remove the found element from the element list so it cannot be found again, so I use this:       Most of the time, this seems to work as expected, and the documentVersionElements list is then shorter by 1.  But there are times when a list of 6 elements remains 6 elements after the remove (and remove() returns false), with 4 of them now null (not removed, but actually a null element), so in when I return to the listIterator() above and get my next() element, the element is null.    It's as if my Element objects are not unique in the list in terms of equals/hashCode as my elements should never be nulled out.    I am not sure why an element I find by iterating cannot then be removed. How could it fail to remove? Why would it change other list elements to NULL instead?  Is this not a valid usage pattern?    Thanks, David</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>On 11/05/2012 11:09, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  Perhaps?         &lt;/div&gt;  That's an option. But you appear to be representing "null" in the same way as an empty map; and you have chosen to map the JSON key "color" to the element name "color", which raises the question how you will map JSON keys that are not legal element names.    My point is that these problems can be solved in many different ways, which is why there are many different mappings of JSON to XML. I don't think there is any reason why JSON should work with only one of these mappings; the conversion of JSON to XML and the representation of XML in Java are two completely orthogonal decisions that do not need to be bundled together.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Perhaps?      &lt;div class="quote quote-1"&gt;    &lt;/div&gt;     &lt;div class="quote quote-1"&gt;    &lt;/div&gt;   &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  OK, so what will the JDOM model look like if this is the JSON input:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>On 11/05/2012 01:42, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  Coincidentally just discovered this. Maybe it will help.  &lt;a class="exlink mklink" href="http://wiki.open311.org/index.php?title=JSON_and_XML_Conversion" rel="nofollow"&gt; http://wiki.open311.org/index.php?title=JSON_and_XML_Conversion &lt;/a&gt;  &lt;/div&gt;  It's a useful survey of half a dozen different attempts at XML to JSON mapping. I'm sure I could find another half a dozen if I had an hour to spare.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>On 11/05/2012 01:05, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  Maybe you're seeing something I'm missing, but my reason for proposing this is to support JSON syntax (subsetted, minus namespaces and attributes) within the SAME (JDOM) data model. I see them as providing different syntax for the *same* semantics,   &lt;/div&gt;  OK, so what will the JDOM model look like if this is the JSON input:</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Hi all.    Just added the items I have seen so far to this list (did I miss some?):    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues?direction=desc&amp;amp;milestone=3&amp;amp;page=1&amp;amp;sort=created&amp;amp;state=open" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues?direction=desc&amp;amp;milestone=3&amp;amp;page=1&amp;amp;sort=created&amp;amp;state=open &lt;/a&gt;   At the moment these issues are placeholders.... they are no indication that the items *will* be done, just an indication that they will be *considered*!    I think it makes sense to look for 'champions' for each one, with a procedure as follows:    1. motivate the feature - describe the intended feature, and answer the questions: "is it really useful?" and "does it 'belong' in JDOM?". 2. put together a plan for the feature - what are the dependencies, goals. 3. partitipate and keep tabs on the development... keep it on track. 4. 'sign off' on the results - does it work as intended.... ?    The reason I suggest this approach is:    1. I am not familiar with all the technologies out there, so I cannot adequately motivate/design/implement/validate these items. 2. I intend to tackle the Resolver (pet project) or Saxon integration (XPath 2.0 support is a 'headline' feature), and I am not particularly good at multitasking... so 'my day job' and 1 other thing is all I can do... 3. I don't want a huge time delay on 2.1 - I am thinking 6 months or so at most... and it is amazing how fast that time will go, and with me doing 1 thing at a time ... well... it won't all happen if it is only me doing it.... 4. 'Community', 'Knowledge Transfer' and 'Opportunity' - I have never wanted to be the only person working on JDOM.... it just turned out that way - I think the 'clean up' and 'testing' for JDOM 2.x was not very attractive work :) This is a good moment for people to step up and 'own' a chunk of the project.    So, any volunteers?    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Coincidentally just discovered this. Maybe it will help.  &lt;a class="exlink mklink" href="http://wiki.open311.org/index.php?title=JSON_and_XML_Conversion" rel="nofollow"&gt; http://wiki.open311.org/index.php?title=JSON_and_XML_Conversion &lt;/a&gt;   &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Brad.    Benjamin was responding to a different suggestion to move some JvaBeans code from the contrib area to 'core'.    Confusing wish-list.    Probably a good time to break out the different proposals....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Hi Brad.    Benjamin was responding to a different suggestion to move some JvaBeans code from the contrib area to 'core'.    Confusing wish-list.    Probably a good time to break out the different proposals....    Rolf    On 10/05/2012 8:08 PM, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  I didn't propose an XML2Bean converter. Jackson and others already do that. The proposal was to support JSON as a syntax for building the same JDOM tree that it does now from XML.    &lt;span&gt; benj &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmx.net &lt;/span&gt;  &lt;span&gt; benj &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmx.net &lt;/span&gt; &amp;gt;&amp;gt; wrote:    Hi Rolf,    at the moment I'm not sure if it is a good idea to have yet another XML2Bean mapper at all.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>I didn't propose an XML2Bean converter. Jackson and others already do that. The proposal was to support JSON as a syntax for building the same JDOM tree that it does now from XML.    &lt;span&gt; benj &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmx.net &lt;/span&gt; &amp;gt;wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    at the moment I'm not sure if it is a good idea to have yet another XML2Bean mapper at all.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Maybe you're seeing something I'm missing, but my reason for proposing this is to support JSON syntax (subsetted, minus namespaces and attributes) within the SAME (JDOM) data model. I see them as providing different syntax for the *same* semantics, in exactly the sense that the Java code my compilers generate for XACML are just another syntax with exactly the same semantics as in the original XML/XACML source. The same would/should be true of a JSON XACML source document.    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  But JSON and XML are not just two different syntaxes. They are fundamentally different data models. It's not at all clear why someone would want to use something as complex as the XML data model to hold something as simple as JSON.    Michael Kay Saxonica    On 10/05/2012 19:22, Brad Cox wrote:    The best reason for doing it in JDOM I know of is for the two external syntaxes to share EXACTLY the same DOM tree with flawless conversion between them (subject to the JDOM as XML subset notion). If that could be arranged with a separate tool that would do too.    FWIW: The JDOM parser I settled on is Jackson. There are a bunch of others.    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  There's been a lot of work on JSON-to-XML and XML-to-JSON transformations. There is no single answer that works well in all cases. There is a tension between being lossless and producing something that is usable. An XML-to-JSON transformation that can handle mixed content may produce indigestible output for simple data-oriented XML.    I don't think there is any good architectural reason to regard XML-JSON transformation as being part of the same component in the architecture as an XML tree model. Just because it needs doing doesn't mean it needs doing in JDOM. To me it's best kept separate.    Michael Kay Saxonica    On 10/05/2012 16:43, Rolf Lear wrote:   &lt;div class="quote quote-3"&gt;  So, searching the interweb, I see some discussion about JSON parsers... I don't see a SAX specific one, but there appear to be a number of StAX-like ones.... and we have StAX support directly now... ;-)    Loading JSON in to JDOM is probably a lot simpler than the opposite though....    I don't see how anything but a simple XML document could be output as a JSON 'output'.... the challenge would be how to deal with the 'unusual' XML-like concepts, rather than the easy stuff?    Like, if your XML has a namespace, then what?    Rolf    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-4"&gt;  Correct me if I'm wrong, but all that JDOM would need for that to work would be a JSON SAX parser and a JSON Outputter.  Those could even be packaged in a companion jar file for those that want the JDOM JSON   &lt;/div&gt;  support.   &lt;div class="quote quote-4"&gt;  (*Chris*)    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt;   &lt;/div&gt;  wrote:   &lt;div class="quote quote-4"&gt;  This is based on experience using both, not a deep analysis. More with   &lt;div class="quote quote-5"&gt;  XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of   &lt;/div&gt;  at   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-4"&gt;  the moment. Lack of attributes not a problem for XACML; it hardly uses   &lt;div class="quote quote-5"&gt;  them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:    I would *love* to hear how you expect JDOM (XML-based) and JSON to   &lt;div class="quote quote-6"&gt;   &lt;/div&gt;  'hang   &lt;/div&gt; &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-4"&gt;  out' in the same place .... ;-)   &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>For me, I think it comes down to convenience.  There are lots of times where you want to have a Struts Action (or something similar) that can consume either a JSON or XML AJAX request, process the request and generate either an XML or JSON response.  Being able to use common logic in the middle would be a nice feature. (*Chris*)    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  But JSON and XML are not just two different syntaxes. They are fundamentally different data models. It's not at all clear why someone would want to use something as complex as the XML data model to hold something as simple as JSON.    Michael Kay Saxonica    On 10/05/2012 19:22, Brad Cox wrote:    The best reason for doing it in JDOM I know of is for the two external syntaxes to share EXACTLY the same DOM tree with flawless conversion between them (subject to the JDOM as XML subset notion). If that could be arranged with a separate tool that would do too.    FWIW: The JDOM parser I settled on is Jackson. There are a bunch of others.    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  There's been a lot of work on JSON-to-XML and XML-to-JSON transformations. There is no single answer that works well in all cases. There is a tension between being lossless and producing something that is usable. An XML-to-JSON transformation that can handle mixed content may produce indigestible output for simple data-oriented XML.    I don't think there is any good architectural reason to regard XML-JSON transformation as being part of the same component in the architecture as an XML tree model. Just because it needs doing doesn't mean it needs doing in JDOM. To me it's best kept separate.    Michael Kay Saxonica    On 10/05/2012 16:43, Rolf Lear wrote:   &lt;div class="quote quote-3"&gt;  So, searching the interweb, I see some discussion about JSON parsers... I don't see a SAX specific one, but there appear to be a number of StAX-like ones.... and we have StAX support directly now... ;-)    Loading JSON in to JDOM is probably a lot simpler than the opposite though....    I don't see how anything but a simple XML document could be output as a JSON 'output'.... the challenge would be how to deal with the 'unusual' XML-like concepts, rather than the easy stuff?    Like, if your XML has a namespace, then what?    Rolf    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-4"&gt;  Correct me if I'm wrong, but all that JDOM would need for that to work would be a JSON SAX parser and a JSON Outputter.  Those could even be packaged in a companion jar file for those that want the JDOM JSON   &lt;/div&gt;  support.   &lt;div class="quote quote-4"&gt;  (*Chris*)    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt;   &lt;/div&gt;  wrote:   &lt;div class="quote quote-4"&gt;  This is based on experience using both, not a deep analysis. More with   &lt;div class="quote quote-5"&gt;  XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of   &lt;/div&gt;  at   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-4"&gt;  the moment. Lack of attributes not a problem for XACML; it hardly uses   &lt;div class="quote quote-5"&gt;  them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:    I would *love* to hear how you expect JDOM (XML-based) and JSON to   &lt;div class="quote quote-6"&gt;   &lt;/div&gt;  'hang   &lt;/div&gt; &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-4"&gt;  out' in the same place .... ;-)   &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>But JSON and XML are not just two different syntaxes. They are fundamentally different data models. It's not at all clear why someone would want to use something as complex as the XML data model to hold something as simple as JSON.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Hi Rolf,     at the moment I'm not sure if it is a good idea to have yet another XML2Bean mapper at all. Maybe it is a better solution to keep an eye on "Real" XML centric stuff and let other frameworks specialized for such an issue do that job. That might be a similar task than with saxon. Where to keep the code?    Benjamin    On 10.05.2012 02:58, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Saxon, I forgot.    Yes, I agree. I have had one stab at creating an interface with Saxon for the XPath layer. I got bogged down in the API details, but it seemed feasible... I think.    I think there are two levels that need to be integrated, the first is to create a JDOM 'Node Handler' for Saxon, and the second is to 'wrap' the Saxon XPath handling in the JDOM layer.    This should definitely be on the ToDo...    The JavaBean contrib code is 'old', and unfamiliar to me. There are basically two parts, exposing JDOM parsing as a bean, and creating a 'persistence' layer for other beans. Are you interested in one or the other, or both?    Do you have p    On 09/05/2012 12:38 PM, Benjamin Graf wrote:   &lt;div class="quote quote-2"&gt;  Hi Rolf,    as I mentioned in one of my posts before I'd like a tight saxon integration for proper XPath 2.0 handling to enhance those capabilities. Maybe there is also some effort possible for the XML 2 bean mapper actually being in the contrib part of JDOM. Since Java is a bean focused language this is in my opinion a feature that worth it.    Best regards Benjamin    On 09.05.2012 15:46, Rolf Lear wrote:   &lt;div class="quote quote-3"&gt;  Hi all.   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>The best reason for doing it in JDOM I know of is for the two external syntaxes to share EXACTLY the same DOM tree with flawless conversion between them (subject to the JDOM as XML subset notion). If that could be arranged with a separate tool that would do too.    FWIW: The JDOM parser I settled on is Jackson. There are a bunch of others.    &lt;span&gt; mi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @saxonica.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  There's been a lot of work on JSON-to-XML and XML-to-JSON transformations. There is no single answer that works well in all cases. There is a tension between being lossless and producing something that is usable. An XML-to-JSON transformation that can handle mixed content may produce indigestible output for simple data-oriented XML.    I don't think there is any good architectural reason to regard XML-JSON transformation as being part of the same component in the architecture as an XML tree model. Just because it needs doing doesn't mean it needs doing in JDOM. To me it's best kept separate.    Michael Kay Saxonica    On 10/05/2012 16:43, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  So, searching the interweb, I see some discussion about JSON parsers... I don't see a SAX specific one, but there appear to be a number of StAX-like ones.... and we have StAX support directly now... ;-)    Loading JSON in to JDOM is probably a lot simpler than the opposite though....    I don't see how anything but a simple XML document could be output as a JSON 'output'.... the challenge would be how to deal with the 'unusual' XML-like concepts, rather than the easy stuff?    Like, if your XML has a namespace, then what?    Rolf    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-3"&gt;  Correct me if I'm wrong, but all that JDOM would need for that to work would be a JSON SAX parser and a JSON Outputter.  Those could even be packaged in a companion jar file for those that want the JDOM JSON   &lt;/div&gt;  support.   &lt;div class="quote quote-3"&gt;  (*Chris*)    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt;   &lt;/div&gt;  wrote:   &lt;div class="quote quote-3"&gt;  This is based on experience using both, not a deep analysis. More with   &lt;div class="quote quote-4"&gt;  XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of   &lt;/div&gt;  at   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-3"&gt;  the moment. Lack of attributes not a problem for XACML; it hardly uses   &lt;div class="quote quote-4"&gt;  them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:    I would *love* to hear how you expect JDOM (XML-based) and JSON to   &lt;div class="quote quote-5"&gt;   &lt;/div&gt;  'hang   &lt;/div&gt; &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-3"&gt;  out' in the same place .... ;-)   &lt;div class="quote quote-4"&gt; &lt;div class="quote quote-5"&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>There's been a lot of work on JSON-to-XML and XML-to-JSON transformations. There is no single answer that works well in all cases. There is a tension between being lossless and producing something that is usable. An XML-to-JSON transformation that can handle mixed content may produce indigestible output for simple data-oriented XML.    I don't think there is any good architectural reason to regard XML-JSON transformation as being part of the same component in the architecture as an XML tree model. Just because it needs doing doesn't mean it needs doing in JDOM. To me it's best kept separate.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>I would want an exception, preferably a unique one - JDOMSchemaNotFoundException?    On 2012-05-10 17:39, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Interesting option..... and I can see some value, but what is the correct response to such a situation? An exception? An empty input stream?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>I'd probably tackle that with a "strict" switch.  If strict=true then you throw an exception when unsupported content is recognized.  If strict=false then you silently ignore it (or maybe trace/debug level log it). (*Chris*)    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  So, searching the interweb, I see some discussion about JSON parsers... I don't see a SAX specific one, but there appear to be a number of StAX-like ones.... and we have StAX support directly now... ;-)    Loading JSON in to JDOM is probably a lot simpler than the opposite though....    I don't see how anything but a simple XML document could be output as a JSON 'output'.... the challenge would be how to deal with the 'unusual' XML-like concepts, rather than the easy stuff?    Like, if your XML has a namespace, then what?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>So, searching the interweb, I see some discussion about JSON parsers... I don't see a SAX specific one, but there appear to be a number of StAX-like ones.... and we have StAX support directly now... ;-)    Loading JSON in to JDOM is probably a lot simpler than the opposite though....    I don't see how anything but a simple XML document could be output as a JSON 'output'.... the challenge would be how to deal with the 'unusual' XML-like concepts, rather than the easy stuff?    Like, if your XML has a namespace, then what?    Rolf    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Correct me if I'm wrong, but all that JDOM would need for that to work would be a JSON SAX parser and a JSON Outputter.  Those could even be packaged in a companion jar file for those that want the JDOM JSON support. (*Chris*)    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt; wrote:   &lt;div class="quote quote-2"&gt;  This is based on experience using both, not a deep analysis. More with XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of at the moment. Lack of attributes not a problem for XACML; it hardly uses them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  I would *love* to hear how you expect JDOM (XML-based) and JSON to 'hang out' in the same place .... ;-)   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Interesting option..... and I can see some value, but what is the correct response to such a situation? An exception? An empty input stream?    Rolf    &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  I would love a simple resolver, built into JDOM.    Just some kind of simple API that I can call to say "Never, ever, touch the network".    I just hate it when people phone me because they tried to load some other XML file with my application and it stalls for 10 seconds while it   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-1"&gt;  fetches some random DTD from the network.   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Correct me if I'm wrong, but all that JDOM would need for that to work would be a JSON SAX parser and a JSON Outputter.  Those could even be packaged in a companion jar file for those that want the JDOM JSON support. (*Chris*)    &lt;span&gt; bc &lt;a class="email mklink"&gt; ... &lt;/a&gt; @virtualschool.edu &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  This is based on experience using both, not a deep analysis. More with XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of at the moment. Lack of attributes not a problem for XACML; it hardly uses them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  I would *love* to hear how you expect JDOM (XML-based) and JSON to 'hang out' in the same place .... ;-)   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>I would love a simple resolver, built into JDOM.    Just some kind of simple API that I can call to say "Never, ever, touch the network".    I just hate it when people phone me because they tried to load some other XML file with my application and it stalls for 10 seconds while it fetches some random DTD from the network.   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>This is based on experience using both, not a deep analysis. More with XML than JSON to date. This work was in the context of building XACML compilers that use the W3C DOM tree as their expression tree. And inspired by recent W3C mailing list  discussions on standardizing a JSON syntax for XACML.    They seem to be  viewing JSON as I do, as a useful subset of XML, with lack of namespaces and attributes the main differences I can think of at the moment. Lack of attributes not a problem for XACML; it hardly uses them, just element values.    The notion is to add a JSON parser in front that builds the same XML (J)DOM tree you build now, plus a output path that converts the tree to JSON on demand. The proposed extension is appealing because it would allow the same XACML compiler to accept standard XACML and/or standard JSON, and to trivially convert between the representations.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  I would *love* to hear how you expect JDOM (XML-based) and JSON to 'hang out' in the same place .... ;-)   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>The resolver is on the cards.... decisions need to be made whether it is specific enough to JDOM to be part of the JDOM project.... I am not objective enough to make that decision... ;-) Also, to be complete it requires items that are not really relevant to JDOM, like a mechanism to import/export/refresh the cache, etc.... The resolver can be built independently and merged later? The post I put on w3c.org and the git project have seen very little activity.... nothing, in fact. It *already* works....    I would *love* to hear how you expect JDOM (XML-based) and JSON to 'hang out' in the same place .... ;-) That's like getting VI and Emacs people to agree .... (odd how JDOM and JSON are just two typo's apart....)    The DOM performance test is an interesting one.... something I could consider. Performance tests are very unreliable though, and nothing I could do would lay anything to rest, but it would be interesting to have a look-see, even if it is just to get an idea.... Based on the performance work I have done already it would appear that, for Hamlet at least, SAX+JDOM is faster than just DOM. Based on  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/performance.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/performance.html &lt;/a&gt; it would seem that the time taken to SAX+JDOM the hamlet file is about 4.75ms on my laptop, and the time to do DOM+JDOM is about 7.1ms with about 2.5ms of that being JDOM time.... (implying 4.6ms is DOM time) So, I would say it is currently neck-and-neck between SAX+JDOM and DOM...    Rolf    On 09/05/2012 5:26 PM, Brad Cox wrote:   &lt;div class="quote quote-1"&gt;  Some personal wishes (since you asked)    * Do the resolver!! * One-stop API for parsing XML or JSON (perhaps MongoDB BSON?) * Lay to rest the lingering ambiguity as to whether JDOM (compared to W3C DOM) has a performance cost. Performance measurements, space and/or time.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt; wrote:   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Saxon, I forgot.    Yes, I agree. I have had one stab at creating an interface with Saxon for the XPath layer. I got bogged down in the API details, but it seemed feasible... I think.    I think there are two levels that need to be integrated, the first is to create a JDOM 'Node Handler' for Saxon, and the second is to 'wrap' the Saxon XPath handling in the JDOM layer.    This should definitely be on the ToDo...    The JavaBean contrib code is 'old', and unfamiliar to me. There are basically two parts, exposing JDOM parsing as a bean, and creating a 'persistence' layer for other beans. Are you interested in one or the other, or both?    Do you have p    On 09/05/2012 12:38 PM, Benjamin Graf wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    as I mentioned in one of my posts before I'd like a tight saxon integration for proper XPath 2.0 handling to enhance those capabilities. Maybe there is also some effort possible for the XML 2 bean mapper actually being in the contrib part of JDOM. Since Java is a bean focused language this is in my opinion a feature that worth it.    Best regards Benjamin    On 09.05.2012 15:46, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  Hi all.   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Hi Garey.    BaseX is new to me. I have just had a little poke around but I am a bit lost as to where you think the integration would 'fit', and what purpose it would solve.... can you elaborate a bit?    Thanks    Rolf    On 09/05/2012 11:31 AM, Garey Mills wrote:   &lt;div class="quote quote-1"&gt;  Rolf -    I'd like to see a persistence layer integrated with BaseX.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Some personal wishes (since you asked)    - Do the resolver!! - One-stop API for parsing XML or JSON (perhaps MongoDB BSON?) - Lay to rest the lingering ambiguity as to whether JDOM (compared to W3C DOM) has a performance cost. Performance measurements, space and/or time.    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    So 2.0.1 has settled in nicely, with no apparent issues. I have also taken some 'JDOM down-time' to just get some of my life in order.... and to avoid some burn-out. I'm now at a cross-roads of sorts....    My personal goal when I got involved with JDOM 2.x was to 'make JDOM current again', and I believe it is now (again) the 'best in class' in-memory XML model for Java.    So, what is the 'cross-roads'? JDOM 2.x is now just an up to date 1.x version, with a more consistent code base, and which implements the modern Java concepts. But, should JDOM now settle in to a maintenance-only mode again until the next major development cycle in another 5 years? Or should JDOM again 'pioneer' in some new directions that make XML processing easier.    I know I have my eyes on the 'Resolver' aspect of XML parsing, and I am going to start playing with that some more, but maybe there are other interesting things JDOM could be doing.    So, this is a call for any 'wish-list' items that you want to have available in JDOM.    Is there anything else JDOM can do for you?    I think it would be reasonable to consider a JDOM 2.1 'branch' which extends existing JDOM functionality in the next 6 months or so, if there is a feature that would be nice to have, and people with an interest in building it....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Hi Rolf,     as I mentioned in one of my posts before I'd like a tight saxon integration for proper XPath 2.0 handling to enhance those capabilities. Maybe there is also some effort possible for the XML 2 bean mapper actually being in the contrib part of JDOM. Since Java is a bean focused language this is in my opinion a feature that worth it.    Best regards Benjamin    On 09.05.2012 15:46, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    So 2.0.1 has settled in nicely, with no apparent issues. I have also taken some 'JDOM down-time' to just get some of my life in order.... and to avoid some burn-out. I'm now at a cross-roads of sorts....    My personal goal when I got involved with JDOM 2.x was to 'make JDOM current again', and I believe it is now (again) the 'best in class' in-memory XML model for Java.    So, what is the 'cross-roads'? JDOM 2.x is now just an up to date 1.x version, with a more consistent code base, and which implements the modern Java concepts. But, should JDOM now settle in to a maintenance-only mode again until the next major development cycle in another 5 years? Or should JDOM again 'pioneer' in some new directions that make XML processing easier.    I know I have my eyes on the 'Resolver' aspect of XML parsing, and I am going to start playing with that some more, but maybe there are other interesting things JDOM could be doing.    So, this is a call for any 'wish-list' items that you want to have available in JDOM.    Is there anything else JDOM can do for you?    I think it would be reasonable to consider a JDOM 2.1 'branch' which extends existing JDOM functionality in the next 6 months or so, if there is a feature that would be nice to have, and people with an interest in building it....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Wish-list</header>
    <body>Rolf -    I'd like to see a persistence layer integrated with BaseX.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Wish-list</header>
    <body>Hi all.    So 2.0.1 has settled in nicely, with no apparent issues. I have also taken some 'JDOM down-time' to just get some of my life in order.... and to avoid some burn-out. I'm now at a cross-roads of sorts....    My personal goal when I got involved with JDOM 2.x was to 'make JDOM current again', and I believe it is now (again) the 'best in class' in-memory XML model for Java.    So, what is the 'cross-roads'? JDOM 2.x is now just an up to date 1.x version, with a more consistent code base, and which implements the modern Java concepts. But, should JDOM now settle in to a maintenance-only mode again until the next major development cycle in another 5 years? Or should JDOM again 'pioneer' in some new directions that make XML processing easier.    I know I have my eyes on the 'Resolver' aspect of XML parsing, and I am going to start playing with that some more, but maybe there are other interesting things JDOM could be doing.    So, this is a call for any 'wish-list' items that you want to have available in JDOM.    Is there anything else JDOM can do for you?    I think it would be reasonable to consider a JDOM 2.1 'branch' which extends existing JDOM functionality in the next 6 months or so, if there is a feature that would be nice to have, and people with an interest in building it....    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.1 released !</header>
    <body>Hi all.    JDOM 2.0.1 is now available from www.jdom.org as well as (imminently) on maven-central.    New in JDOM 2.0.1 is 'support' for Android. There are some limitations to the JDOM functionality on Android as a result of reduced XML processing support on the Android platform. If you know of any Android-compatible XML parser (SAX) that can successfully perform XSD/DTD validation please let me know! See the full statement of support here: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt;   Additionally, JDOM 2.0.1 fixes issue #72 related to 'Compact' XML Output.    If you are new to JDOM or new to JDOM 2.x, here are some useful starting points....    For details on all the new features available in JDOM 2.0.0 please see the wiki page: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Features" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Features &lt;/a&gt;   For a 'Primer' on getting started with JDOM, some basic concepts, and examples on how to accomplish the most common tasks in JDOM, see:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer &lt;/a&gt;   For insights on what issues to expect when changing from JDOM 1.x to 2.x have a look at the 'Migration Guide' here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues &lt;/a&gt;   The JavaDoc is available in the release, as well as at:  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/index.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/index.html &lt;/a&gt;   Like previous snapshot releases, the JUnit and Cobertura test-coverage reports are available at:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt;   As always, if you have any comments, suggestions, concerns, please speak up!    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Scheduled release of 2.0.1 April 28</header>
    <body>Hi all.    Based on the responses to the '2.0.0 usage' mail, I get the impression that: - 2.0.0 is being used 'seriously', and any other major bugs would have been noticed. - there is no rush/panic to get a 2.0.1 version - it would be useful to have expectations....    As a consequence, I think it is fair to use a release schedule for 2.0.1 that is similar to what I did with 1.1.3... that is:    - if there is a bug I release an immediate 'hotfix', and schedule a future 'point-release' - the 'point-release' will contain the bug fix, as well as any other issues that may crop up in the interim. - the point-release date will be scheduled for somewhere between 2 and 4 weeks of the bug discovery.    Thus, I am going to schedule a release date for 2.0.1, and it will contain the fix for #72 as well as any other issues that may come up before then....    Since #72 was found a couple of weeks ago, it makes sense to release 2.0.1 this weekend - the 28th/29th April...    Currently scheduled for that release: - Fix #72 - Statement of support for Android.    If anyone runs in to any more issues, they will be assessed, and that may impact the release schedule, but that is unlikely.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Hi all.    I think I am ready to produce a statement on the 'Status of JDOM on Android'...    The full wiki page is here:    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt;   Here is a summary...    JDOM is fully functional on Android with the following 2 exceptions:    1. Android has neither a StAX API nor an implementation.    As a result, all JDOM input and output classes that source/sink StAX streams will fail. This includes all classes with the word 'StAX' in the classname. Using these JDOM classes will cause a 'FATAL' application error and your JDOM app will 'crash'.    2. JDOM requires third-party support to implement XML Parsing and the default parser on Android has limited features, and thus JDOM functionality is limited too.    As a result, using the default XML parser you will not be able to do: - DTD validation (even though the DocType is parsed and used to add default attributes, entity references, etc.) - XMLSchema validation (even though the XSD Schema is parsed and used to add default attributes, etc.) - suppress the expansion of Entity References - &amp;amp;entity; type references are always expanded. - receive 'internal subset' values from the DocType if there are any.    It should be noted that it is possible to install Xerces parser with your Android app, but this does not add significant value because neither the DocType nor Schema validation is possible with Xerces because of various interdependencies within Xerces that make validation impossible.    Additionally, the JAXP process in Android is somewhat broken, and as far as I can tell it is not possible to install Xerces as the 'default' parser, but only as a create-each-instance-by-name SAX2 parser.    Thus, in conclusion, a number of internal issues have been resolved in JDOM to make it compatible with Android. JDOM has dependencies though on third part functionality (SAX/DOM/StAX) and these dependencies have limitations on Android. As a result JDOM has similar limitations.    Of significance, the 'core' functionality of parsing, manipulating, and outputting XML though JDOM is all fully functional.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Out of interest, I have been struggling with these items still, and I am still looking for assistance (hopefully from some experienced Android developers).    I have untangled the mess of the ClassLoader.getResource() issues, but I am still struggling with XMLSchema Validation on Android. As far as I can tell it is not yet possible (not with existing tools anyway).    I have updated the wiki pages:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt; &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2---Android-with-Xerces" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2---Android-with-Xerces &lt;/a&gt;   I have also asked a StackOverflow question:  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/10274555/xmlschema-validation-on-android" rel="nofollow"&gt; http://stackoverflow.com/questions/10274555/xmlschema-validation-on-android &lt;/a&gt;   I am hoping to release 2.0.1 very soon, and I would love to have full support for Android as part of 2.0.1!    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Hi Mike.    Could be for a few reasons..... but, I think there are three types of issues that I have encountered: - Android 'paradigms' and 'nuances' that impact actual core JDOM Operation, but that I have been able to adapt to / workaround by changing JDOM code - and the JDOM code now produces the 'correct' results. - Android 'issues' that have impacted core JDOM functionality, but I have not yet been able to work around, or I do not expect to be able to work around. - Android issues related to *testing* the JDOM core that I have worked around.    While I have not been consistent in my approach, I only think there is a 'significant' problem if it falls in to the second category - issues that affect JDOM functionality that are unrelated to the actual testing process.    As such, the issues I have had with URLs/Files/Assets/Resources are not actually impacting JDOM functionality.... just my ability to test it.    For the record though, Android *does* have a file-system that is accessible by regular Android apps. The issue is that I have found it very hard to actually get my test data loaded in to that system. Once it is there though, it all works as expected.    If you are interested, in regular JDOM testing, these XML and XML support files are embedded in the JDOM-junit jar, and accessed (typically as a URL) using ClassLoader.getSystemResource().    In order to access them in Android through, I am: - harvesting the test data from the jar. - loading them in to the android 'assets' file. - when the JUnit tests start in Android the assets are copied from the assets location to the 'cache' Android FileSystem directory. - when tests request URL's the URL for the file in the 'cache' android folder is returned. - If a test requests just an InputStream, a FileInputStream is returned instead.    So, bottom line is that, while the FileSystem/ClassLoader problems have been a real issue, it has been a testing issue only, not a functionality issue.    So, I should only be reporting/documenting issues of the second type: Functionality that is normally available in JDOM that does not work the same way (or at all) when used on Android.    Maybe I should add some comments to the page though about some of the issues I have resolved, rather than just the issues I have yet-to-resolve...    Rolf    &lt;span&gt; mik &lt;a class="email mklink"&gt; ... &lt;/a&gt; @mitre.org &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf, As always, your notes have value far beyond just the jdom list. I would therefore like to ask the following question. Why does the lack of support for an ordinary java file system no longer appear on you Android list of issues?    Thanks for answering this partially unrelated question.    Mike Brenner   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On Behalf Of Rolf Lear Sent: Wednesday, April 18, 2012 9:32 PM To: jdom Subject: Re: [jdom-interest] JDOM and Android    Hi all.    Just reporting some progress on the Android testing.    I have put together a document here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt;   I believe I have narrowed down the testing issues a lot. Here is the test summary:    [exec] FAILURES!!! [exec] Tests run: 1629,  Failures: 0,  Errors: 55    The Regular JDOM stream has 1800 tests (of which 33 are ignored). The difference to 1629 tests is a result of skipping the StAX tests and some   &lt;/div&gt;   &lt;div class="quote quote-2"&gt;  illegal UniCode tests.    The remaining 55 failing tests fail for one of the following reasons: - Android cannot process XMLSchema validation. - Android does not give the SAXHandler the 'internal subset' part of a DocType declaration. - Some of the JDOM unit tests use the JUnit4 concept of 'assume'. I have   &lt;/div&gt;   &lt;div class="quote quote-2"&gt;  not yet coded the JUnit3 wrappers to accommodate these failing assumptions. - Android's implementation of java.util.List has slightly different handling for ConcurrentModificationException.    Bottom line is: with some pending fixes, JDOM 2.x is functional on Android. The only issues I expect to be significant are: - XMLSchema validation    I am working on: - testing with the Xerces parser to resolve DTD issues - using Xerces's custom XSDSchema Schema for XSD validation - handling JUnit 'assumptions'    Onc complete this should resolve the issues to close to zero.    Rolf    On 17/04/2012 11:58 PM, Rolf Lear wrote:   &lt;div class="quote quote-3"&gt;  Hi all.    So, using the 'Asset' mechanism works, even though it is a fantastic pain in the posterior.    No, here are the major issues:    Android does not support XML Schema validation ==============================================    This i the most significant issue because it causes XMLReaders enumeration to fail:    The documentation for ... SchemaFactory.newInstance(XMLConstants.W2C_XML_SCHEMA_NS_URI) ... is ... To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0    But, Android does not..... thus the Enum fails, thus nothing can be parsed... ;-)    I have temporarily 'fixed' it by making only the XSD-based test fail, instead of failing *everything* that is parsed....    Android does not supply StAX bundles. =====================================    Fixed by removing StAX tests.    For the moment though, it would seem a preliminary statement is:    with some fixes, JDOM 2.0.1 will have full functionality except: DTD - Internal-subset: SAX Parser does not supply it to JDOM XSD Validation is not possible (there are work-arounds...) StAX support not available.    Rolf    On 17/04/2012 1:15 AM, Joe Bowbeer wrote:   &lt;div class="quote quote-4"&gt;  The other approach is to copy the assets to the file system when the apk is first started and then read the resources from the file system at runtime.    The file system URLs are of the form /data/data/&amp;lt;package-id&amp;gt;/files/    See   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://developer.android.com/reference/android/content/Context.html#getFilesDir" rel="nofollow"&gt; http://developer.android.com/reference/android/content/Context.html#getFilesDir &lt;/a&gt; ()   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   --Joe    On Mon, Apr 16, 2012 at 9:51 PM, Rolf Lear wrote:    I have been down that road, and it does not work....    Because the file URL's are still not readable.... here's a test trace... Note how the failure is buried in a 'caused by' where the important lines are:    Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/__multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(__IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;__(FileInputStream.java:78) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  libcore.net.url.__FileURLConnection.connect(__FileURLConnection.java:82)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;  at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  libcore.net.url.__FileURLConnection.__getInputStream(__FileURLConnection.java:181)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at java.net.URL.openStream(URL.__java:462) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:195)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   ... 15 more    org.jdom2.JDOMException: Unable to read Schema URL file:///android_asset/__xsdcomplex/multi_main.xsd at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:197)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.input.sax.__XMLReaderXSDFactory.&amp;lt;init&amp;gt;(__XMLReaderXSDFactory.java:272)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.test.cases.input.__sax.TestXMLReaderXSDFactory.__testXMLReaderXSDFactoryFileArr__ay(TestXMLReaderXSDFactory.__java:80)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.test.cases.input.__sax.TestXMLReaderXSDFactoryTT.__testXMLReaderXSDFactoryFileArr__ay(TestXMLReaderXSDFactoryTT.__java:28)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at java.lang.reflect.Method.__invokeNative(Native Method) at android.test.__AndroidTestRunner.runTest(__AndroidTestRunner.java:169) at android.test.__AndroidTestRunner.runTest(__AndroidTestRunner.java:154) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  android.test.__InstrumentationTestRunner.__onStart(__InstrumentationTestRunner.__java:545)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  android.app.Instrumentation$__InstrumentationThread.run(__Instrumentation.java:1551)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/__multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(__IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;__(FileInputStream.java:78) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  libcore.net.url.__FileURLConnection.connect(__FileURLConnection.java:82)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;  at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  libcore.net.url.__FileURLConnection.__getInputStream(__FileURLConnection.java:181)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   at java.net.URL.openStream(URL.__java:462) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:195)   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   ... 15 more Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory) at libcore.io.Posix.open(Native Method) at libcore.io.BlockGuardOs.open(__BlockGuardOs.java:110) at libcore.io.IoBridge.open(__IoBridge.java:390) ... 20 more    On 17/04/2012 12:00 AM, Joe Bowbeer wrote:    You'll need to put the data in assets   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/__questions/4820816/how-to-get-__uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/__questions/4820816/how-to-get-__uri-from-an-asset-file &lt;/a&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file &lt;/a&gt;   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/__questions/4789325/android-__path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/__questions/4789325/android-__path-to-asset-txt-file &lt;/a&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file &lt;/a&gt;   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   and use getResources().getAssets().__open()    Or you could put the data in res/raw and use getResources().__openRawResource()    .. but res/raw does not support a nested file structure.    Or maybe you could do something crazy with a custom class loader:   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://android-developers.__blogspot.com/2011/07/custom-__class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.__blogspot.com/2011/07/custom-__class-loading-in-dalvik.html &lt;/a&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html &lt;/a&gt;   &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   --Joe    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; wrote:    Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource(____"path/to/file.xml") to load    resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(____...) is returning null on Android.    I think it is related to  &lt;a class="exlink mklink" href="http://code.google.com/p/____android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/____android/issues/detail?id=10076 &lt;/a&gt;  &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;    &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;  &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;    But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Hi Rolf,    As always, your notes have value far beyond just the jdom list. I would therefore like to ask the following question. Why does the lack of support for an ordinary java file system no longer appear on you Android list of issues?    Thanks for answering this partially unrelated question.    Mike Brenner   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On &lt;br/&gt; Behalf Of Rolf Lear Sent: Wednesday, April 18, 2012 9:32 PM To: jdom Subject: Re: [jdom-interest] JDOM and Android    Hi all.    Just reporting some progress on the Android testing.    I have put together a document here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt;   I believe I have narrowed down the testing issues a lot. Here is the test summary:    [exec] FAILURES!!! [exec] Tests run: 1629,  Failures: 0,  Errors: 55    The Regular JDOM stream has 1800 tests (of which 33 are ignored). The difference to 1629 tests is a result of skipping the StAX tests and some illegal UniCode tests.    The remaining 55 failing tests fail for one of the following reasons: - Android cannot process XMLSchema validation. - Android does not give the SAXHandler the 'internal subset' part of a DocType declaration. - Some of the JDOM unit tests use the JUnit4 concept of 'assume'. I have not yet coded the JUnit3 wrappers to accommodate these failing assumptions. - Android's implementation of java.util.List has slightly different handling for ConcurrentModificationException.    Bottom line is: with some pending fixes, JDOM 2.x is functional on Android. The only issues I expect to be significant are: - XMLSchema validation    I am working on: - testing with the Xerces parser to resolve DTD issues - using Xerces's custom XSDSchema Schema for XSD validation - handling JUnit 'assumptions'    Onc complete this should resolve the issues to close to zero.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Many thanks for sharing this information. I've done some experiments with compiling Saxon for Android, and it's nice that someone has cleared a trail through the jungle.    I've so far got as far as compiling the code, by:    * removing a number of packages and classes, essentially those that provide interfaces to other libraries such as .NET code, DOM4J, XOM, and JDOM, StAX, XQJ    * commenting out a few methods where there's a dependency on one of the above.    This isn't an impossible loss of functionality, though it would be nice to put some of this back in, e.g. it's a shame to lose some of Saxon's diagnostic tracing output just because there's no XMLStreamWriter.    Of course a key aim will be to maintain single source. I suspect that will be easier if the build is all done using scripts / Ant, rather than in the IDE, which will make it much easier to manage things like conditional exclusion of selected methods. If only Java had a decent conditional compilation framework. Perhaps something can be done with annotations, I don't know.    Actually running the code will no doubt reveal a few more problems, but the next challenge is to tackle the test environment, which as with JDOM, will probably be a bigger challenge than the code itself. I was already thinking in the direction of two projects, one for production code and one for test code, before I read this blog post.    Since no one has been clamouring for Saxon on Android it's not my highest priority, but there does seem to be a lot of development activity on Android and the XML support on the platform seems to be very impoverished, so one feels there is an opportunity here.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Hi all.    Just reporting some progress on the Android testing.    I have put together a document here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-and-Android &lt;/a&gt;   I believe I have narrowed down the testing issues a lot. Here is the test summary:    [exec] FAILURES!!! [exec] Tests run: 1629,  Failures: 0,  Errors: 55    The Regular JDOM stream has 1800 tests (of which 33 are ignored). The difference to 1629 tests is a result of skipping the StAX tests and some illegal UniCode tests.    The remaining 55 failing tests fail for one of the following reasons: - Android cannot process XMLSchema validation. - Android does not give the SAXHandler the 'internal subset' part of a DocType declaration. - Some of the JDOM unit tests use the JUnit4 concept of 'assume'. I have not yet coded the JUnit3 wrappers to accommodate these failing assumptions. - Android's implementation of java.util.List has slightly different handling for ConcurrentModificationException.    Bottom line is: with some pending fixes, JDOM 2.x is functional on Android. The only issues I expect to be significant are: - XMLSchema validation    I am working on: - testing with the Xerces parser to resolve DTD issues - using Xerces's custom XSDSchema Schema for XSD validation - handling JUnit 'assumptions'    Onc complete this should resolve the issues to close to zero.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>Hi all.    So, using the 'Asset' mechanism works, even though it is a fantastic pain in the posterior.    No, here are the major issues:    Android does not support XML Schema validation ==============================================    This i the most significant issue because it causes XMLReaders enumeration to fail:    The documentation for ... SchemaFactory.newInstance(XMLConstants.W2C_XML_SCHEMA_NS_URI) ... is ... To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0    But, Android does not..... thus the Enum fails, thus nothing can be parsed... ;-)    I have temporarily 'fixed' it by making only the XSD-based test fail, instead of failing *everything* that is parsed....    Android does not supply StAX bundles. =====================================    Fixed by removing StAX tests.    For the moment though, it would seem a preliminary statement is:    with some fixes, JDOM 2.0.1 will have full functionality except: DTD - Internal-subset: SAX Parser does not supply it to JDOM XSD Validation is not possible (there are work-arounds...) StAX support not available.    Rolf    On 17/04/2012 1:15 AM, Joe Bowbeer wrote:   &lt;div class="quote quote-1"&gt;  The other approach is to copy the assets to the file system when the apk is first started and then read the resources from the file system at runtime.    The file system URLs are of the form /data/data/&amp;lt;package-id&amp;gt;/files/    See  &lt;a class="exlink mklink" href="http://developer.android.com/reference/android/content/Context.html#getFilesDir" rel="nofollow"&gt; http://developer.android.com/reference/android/content/Context.html#getFilesDir &lt;/a&gt; ()    --Joe    On Mon, Apr 16, 2012 at 9:51 PM, Rolf Lear wrote:    I have been down that road, and it does not work....    Because the file URL's are still not readable.... here's a test trace... Note how the failure is buried in a 'caused by' where the important lines are:    Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/__multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(__IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;__(FileInputStream.java:78) at libcore.net.url.__FileURLConnection.connect(__FileURLConnection.java:82) at libcore.net.url.__FileURLConnection.__getInputStream(__FileURLConnection.java:181) at java.net.URL.openStream(URL.__java:462) at org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:195) ... 15 more    org.jdom2.JDOMException: Unable to read Schema URL file:///android_asset/__xsdcomplex/multi_main.xsd at org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:197) at org.jdom2.input.sax.__XMLReaderXSDFactory.&amp;lt;init&amp;gt;(__XMLReaderXSDFactory.java:272) at org.jdom2.test.cases.input.__sax.TestXMLReaderXSDFactory.__testXMLReaderXSDFactoryFileArr__ay(TestXMLReaderXSDFactory.__java:80) at org.jdom2.test.cases.input.__sax.TestXMLReaderXSDFactoryTT.__testXMLReaderXSDFactoryFileArr__ay(TestXMLReaderXSDFactoryTT.__java:28) at java.lang.reflect.Method.__invokeNative(Native Method) at android.test.__AndroidTestRunner.runTest(__AndroidTestRunner.java:169) at android.test.__AndroidTestRunner.runTest(__AndroidTestRunner.java:154) at android.test.__InstrumentationTestRunner.__onStart(__InstrumentationTestRunner.__java:545) at android.app.Instrumentation$__InstrumentationThread.run(__Instrumentation.java:1551) Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/__multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(__IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;__(FileInputStream.java:78) at libcore.net.url.__FileURLConnection.connect(__FileURLConnection.java:82) at libcore.net.url.__FileURLConnection.__getInputStream(__FileURLConnection.java:181) at java.net.URL.openStream(URL.__java:462) at org.jdom2.input.sax.__XMLReaderXSDFactory.__getSchemaFromURL(__XMLReaderXSDFactory.java:195) ... 15 more Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory) at libcore.io.Posix.open(Native Method) at libcore.io.BlockGuardOs.open(__BlockGuardOs.java:110) at libcore.io.IoBridge.open(__IoBridge.java:390) ... 20 more    On 17/04/2012 12:00 AM, Joe Bowbeer wrote:    You'll need to put the data in assets    &lt;a class="exlink mklink" href="http://stackoverflow.com/__questions/4820816/how-to-get-__uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/__questions/4820816/how-to-get-__uri-from-an-asset-file &lt;/a&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file &lt;/a&gt;    &lt;a class="exlink mklink" href="http://stackoverflow.com/__questions/4789325/android-__path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/__questions/4789325/android-__path-to-asset-txt-file &lt;/a&gt;  &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file &lt;/a&gt;    and use getResources().getAssets().__open()    Or you could put the data in res/raw and use getResources().__openRawResource()    .. but res/raw does not support a nested file structure.    Or maybe you could do something crazy with a custom class loader:    &lt;a class="exlink mklink" href="http://android-developers.__blogspot.com/2011/07/custom-__class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.__blogspot.com/2011/07/custom-__class-loading-in-dalvik.html &lt;/a&gt;  &lt;a class="exlink mklink" href="http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html &lt;/a&gt;    --Joe    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt;&amp;gt; wrote:    Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource(____"path/to/file.xml") to load    resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(____...)  is returning null on Android.    I think it is related to  &lt;a class="exlink mklink" href="http://code.google.com/p/____android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/____android/issues/detail?id=10076 &lt;/a&gt;  &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;    &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;  &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;    But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.    Rolf   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>The other approach is to copy the assets to the file system when the apk is first started and then read the resources from the file system at runtime.    The file system URLs are of the form /data/data/&amp;lt;package-id&amp;gt;/files/    See  &lt;a class="exlink mklink" href="http://developer.android.com/reference/android/content/Context.html#getFilesDir" rel="nofollow"&gt; http://developer.android.com/reference/android/content/Context.html#getFilesDir &lt;/a&gt; ()    --Joe    On Mon, Apr 16, 2012 at 9:51 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  I have been down that road, and it does not work....    Because the file URL's are still not readable.... here's a test trace... Note how the failure is buried in a 'caused by' where the important lines are:    Caused by: java.io.FileNotFoundException: &lt;br/&gt; /android_asset/xsdcomplex/**multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(**IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;**(FileInputStream.java:78) at libcore.net.url.**FileURLConnection.connect(** FileURLConnection.java:82) at libcore.net.url.**FileURLConnection.**getInputStream(** FileURLConnection.java:181) at java.net.URL.openStream(URL.**java:462) at org.jdom2.input.sax.**XMLReaderXSDFactory.**getSchemaFromURL(** XMLReaderXSDFactory.java:195) ... 15 more    org.jdom2.JDOMException: Unable to read Schema URL file:///android_asset/* *xsdcomplex/multi_main.xsd at org.jdom2.input.sax.**XMLReaderXSDFactory.**getSchemaFromURL(** XMLReaderXSDFactory.java:197) at org.jdom2.input.sax.**XMLReaderXSDFactory.&amp;lt;init&amp;gt;(** XMLReaderXSDFactory.java:272) at org.jdom2.test.cases.input.**sax.TestXMLReaderXSDFactory.** testXMLReaderXSDFactoryFileArr**ay(TestXMLReaderXSDFactory.**java:80) at org.jdom2.test.cases.input.**sax.TestXMLReaderXSDFactoryTT.** testXMLReaderXSDFactoryFileArr**ay(TestXMLReaderXSDFactoryTT.**java:28) at java.lang.reflect.Method.**invokeNative(Native Method) at android.test.**AndroidTestRunner.runTest(**AndroidTestRunner.java:169) at android.test.**AndroidTestRunner.runTest(**AndroidTestRunner.java:154) at android.test.**InstrumentationTestRunner.**onStart(** InstrumentationTestRunner.**java:545) at android.app.Instrumentation$**InstrumentationThread.run(** Instrumentation.java:1551) Caused by: java.io.FileNotFoundException: &lt;br/&gt; /android_asset/xsdcomplex/**multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(**IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;**(FileInputStream.java:78) at libcore.net.url.**FileURLConnection.connect(** FileURLConnection.java:82) at libcore.net.url.**FileURLConnection.**getInputStream(** FileURLConnection.java:181) at java.net.URL.openStream(URL.**java:462) at org.jdom2.input.sax.**XMLReaderXSDFactory.**getSchemaFromURL(** XMLReaderXSDFactory.java:195) ... 15 more Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory) at libcore.io.Posix.open(Native Method) at libcore.io.BlockGuardOs.open(**BlockGuardOs.java:110) at libcore.io.IoBridge.open(**IoBridge.java:390) ... 20 more    On 17/04/2012 12:00 AM, Joe Bowbeer wrote:   &lt;div class="quote quote-2"&gt;  You'll need to put the data in assets    &lt;a class="exlink mklink" href="http://stackoverflow.com/" rel="nofollow"&gt; http://stackoverflow.com/ &lt;/a&gt; **questions/4820816/how-to-get-** &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file &lt;/a&gt;    &lt;a class="exlink mklink" href="http://stackoverflow.com/" rel="nofollow"&gt; http://stackoverflow.com/ &lt;/a&gt; **questions/4789325/android-** &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file &lt;/a&gt;    and use getResources().getAssets().**open()    Or you could put the data in res/raw and use getResources().**openRawResource()    .. but res/raw does not support a nested file structure.    Or maybe you could do something crazy with a custom class loader:    &lt;a class="exlink mklink" href="http://android-developers." rel="nofollow"&gt; http://android-developers. &lt;/a&gt; **blogspot.com/2011/07/custom-** &lt;a class="exlink mklink" href="http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html &lt;/a&gt;    --Joe    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt; wrote:    Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource(**__"path/to/file.xml") to load    resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(**__...)  is returning null on Android.    I think it is related to  &lt;a class="exlink mklink" href="http://code.google.com/p/__" rel="nofollow"&gt; http://code.google.com/p/__ &lt;/a&gt; &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;    &lt;a class="exlink mklink" href="http://code.google.com/p/" rel="nofollow"&gt; http://code.google.com/p/ &lt;/a&gt; &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;    But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.    Rolf   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>I have been down that road, and it does not work....    Because the file URL's are still not readable.... here's a test trace... Note how the failure is buried in a 'caused by' where the important lines are:    Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78) at libcore.net.url.FileURLConnection.connect(FileURLConnection.java:82) at libcore.net.url.FileURLConnection.getInputStream(FileURLConnection.java:181) at java.net.URL.openStream(URL.java:462) at org.jdom2.input.sax.XMLReaderXSDFactory.getSchemaFromURL(XMLReaderXSDFactory.java:195) ... 15 more    org.jdom2.JDOMException: Unable to read Schema URL file:///android_asset/xsdcomplex/multi_main.xsd at org.jdom2.input.sax.XMLReaderXSDFactory.getSchemaFromURL(XMLReaderXSDFactory.java:197) at org.jdom2.input.sax.XMLReaderXSDFactory.&amp;lt;init&amp;gt;(XMLReaderXSDFactory.java:272) at org.jdom2.test.cases.input.sax.TestXMLReaderXSDFactory.testXMLReaderXSDFactoryFileArray(TestXMLReaderXSDFactory.java:80) at org.jdom2.test.cases.input.sax.TestXMLReaderXSDFactoryTT.testXMLReaderXSDFactoryFileArray(TestXMLReaderXSDFactoryTT.java:28) at java.lang.reflect.Method.invokeNative(Native Method) at android.test.AndroidTestRunner.runTest(AndroidTestRunner.java:169) at android.test.AndroidTestRunner.runTest(AndroidTestRunner.java:154) at android.test.InstrumentationTestRunner.onStart(InstrumentationTestRunner.java:545) at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1551) Caused by: java.io.FileNotFoundException: /android_asset/xsdcomplex/multi_main.xsd: open failed: ENOENT (No such file or directory) at libcore.io.IoBridge.open(IoBridge.java:406) at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78) at libcore.net.url.FileURLConnection.connect(FileURLConnection.java:82) at libcore.net.url.FileURLConnection.getInputStream(FileURLConnection.java:181) at java.net.URL.openStream(URL.java:462) at org.jdom2.input.sax.XMLReaderXSDFactory.getSchemaFromURL(XMLReaderXSDFactory.java:195) ... 15 more Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory) at libcore.io.Posix.open(Native Method) at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110) at libcore.io.IoBridge.open(IoBridge.java:390) ... 20 more    On 17/04/2012 12:00 AM, Joe Bowbeer wrote:   &lt;div class="quote quote-1"&gt;  You'll need to put the data in assets    &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file &lt;/a&gt;   &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file &lt;/a&gt;   and use getResources().getAssets().open()    Or you could put the data in res/raw and use getResources().openRawResource()    .. but res/raw does not support a nested file structure.    Or maybe you could do something crazy with a custom class loader:    &lt;a class="exlink mklink" href="http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html &lt;/a&gt;   --Joe    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt; wrote:    Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource(__"path/to/file.xml") to load resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(__...)  is returning null on Android.    I think it is related to  &lt;a class="exlink mklink" href="http://code.google.com/p/__android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/__android/issues/detail?id=10076 &lt;/a&gt;  &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;    But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.    Rolf   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM and Android</header>
    <body>You'll need to put the data in assets    &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4820816/how-to-get-uri-from-an-asset-file &lt;/a&gt;   &lt;a class="exlink mklink" href="http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file" rel="nofollow"&gt; http://stackoverflow.com/questions/4789325/android-path-to-asset-txt-file &lt;/a&gt;   and use getResources().getAssets().open()    Or you could put the data in res/raw and use getResources().openRawResource()    .. but res/raw does not support a nested file structure.    Or maybe you could do something crazy with a custom class loader:    &lt;a class="exlink mklink" href="http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html" rel="nofollow"&gt; http://android-developers.blogspot.com/2011/07/custom-class-loading-in-dalvik.html &lt;/a&gt;   --Joe    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource(**"path/to/file.xml") to load resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(**...)  is returning null on Android.    I think it is related to &lt;a class="exlink mklink" href="http://code.google.com/p/" rel="nofollow"&gt; http://code.google.com/p/ &lt;/a&gt; ** &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;    But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM and Android</header>
    <body>Hi all.    I am having some limited success with the Android testing. I have run in to an issue through which could really use some input from experienced Android developers.    Are there any on JDOM-interest with some time to spare?    My issue right now is that the JUnit tests are mostly passing, but a number of them rely on using ClassLoader.getSystemResource("path/to/file.xml") to load resources as a URL.    It is improtant to keep it as a URL because many of these tests rely on internal DTD's and XSD's, which, in turn mean that when they are processed the input file's URL will be used as a base for a relative location of the DTD/XSD.    In other words, I need to keep access to these files as a URL....    But, ClassLoader.getSystemResource(...)  is returning null on Android.    I think it is related to  &lt;a class="exlink mklink" href="http://code.google.com/p/android/issues/detail?id=10076" rel="nofollow"&gt; http://code.google.com/p/android/issues/detail?id=10076 &lt;/a&gt;   But, I can't find a good way to work around the issue....    So, If there's some experienced Android developer who can shed some light in to this particular dark place, I would appreciate it.    For the record, I have a full test-suite available for any Android developers who happen to use eclipse. It fully compiled, loads, and I am running a 'Test' Project on a 4.0.3 emulator.    I can, in theory, help you bootstrap the environment in your eclipse pretty easily... if needed.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>Will try it when I do another XML project. Everything's JSON right now.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>Le 12 avr. 2012 à 20:21, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  - Going to try it when there's time.   &lt;/div&gt;  (and major development involving the JDOM usage)    Projects:    - &lt;a class="exlink mklink" href="http://sail-m.de/smala/" rel="nofollow"&gt; http://sail-m.de/smala/ &lt;/a&gt;  - &lt;a class="exlink mklink" href="http://www.curriki.org/" rel="nofollow"&gt; http://www.curriki.org/ &lt;/a&gt;  - &lt;a class="exlink mklink" href="http://www.activemath.org/" rel="nofollow"&gt; http://www.activemath.org/ &lt;/a&gt;   paul</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>On 13/04/2012 11:52, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi Michael    I understand the concerns you had with the API stability.    Out of interest though, when I was working with Jaxen, it became apparent that the 'model' of putting JDOM support directly in to Jaxen is 'broken', it should be (and now is) the other way around. JDOM 2.x now 'owns' the interface to Jaxen, it 'Owns' the implementation of the Jaxen 'Navigator'.    This solves a number of problems, not the least of which is that the compile-time dependencies are circular otherwise...    Is there not some way you can help build the 'glue' logic in to JDOM rather than in to Saxon? I started trying to do that a few months ago, but got my head all messed up in the API, and NodeInfo classes, etc.   &lt;/div&gt;  Basically there needs to be an adapter module that bridges the Saxon NodeInfo interface to the JDOM Node implementation. There are a number of such modules issued with Saxon, but they use a plug-in architecture - Saxon has no intrinsic knowledge of these modules, and anyone can write a new one. The module itself needs to know about both Saxon and JDOM interfaces, but neither Saxon nor JDOM needs to have static knowledge of the module. So there are no circular dependencies. Which product the module is then distributed with becomes a purely tactical matter, with obvious implications in terms of who gets the bug reports, and so on. One factor here is that historically the NodeInfo interface has not been 100% stable; we will sometimes add a method, or add an argument to an existing method, which means that existing implementations of the interface need to be tweaked.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x additional features</header>
    <body>Currently the resolver is just a 'simple' file system cache, with some 'smart' logic in Java to allow that cache to be accessed concurrently by multiple threads, and multiple JVM's. It uses File-locking to accomplish this.    The 'specification' for the cache file structure is 'easy'. There is no reason why you can't zip up the cache, move it, add to it, etc.    Note that the Resolver project I have proposed fills a gap between two different existing concepts: the current 'get it when I need it' Resolver we normally use; and the existing concept of a web catalog, which is a static pre-loaded, unmodifiable.    If all you want to do is pre-cache existing, known DTD's and Schemas you may want to just use existing web-catalog concepts.    Have a look at the 'motivation' page for 'my' ideas of why a different Resolver is needed:  &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver/wiki/Motivation-and-Requirements" rel="nofollow"&gt; https://github.com/rolfl/Resolver/wiki/Motivation-and-Requirements &lt;/a&gt;   Currently the resolver technically works. I have tested it 'extensively' in a multi-threaded and multi-JVM test suite.    Now that JDOM 2.0.0 is out, I can put some more thought in to how best to 'package' the Resolver. It technically does not even need to be a part of JDOM...    But, I do think JDOM would be better if it provided an easy way to integrate multiple resolvers for XML Parsing... giving it the ability to 'use a web catalog for *this*', 'use a direct web access for *that*', and 'use the cache for *that*'.    In the long run I think it would be really nice if you could do something like:          But, that is a change for a later version of JDOM... It will need some more input (maybe from people like you ... ;-)    Rolf    On 13/04/2012 10:30 AM, Chris Pratt wrote:   &lt;div class="quote quote-1"&gt;  Does the resolver have the ability to preload DTDs/Schemas? I know there have been several times it would have been nice to be able to pre-cache documents I know I'm going to need, rather than waiting until the first request. (*Chris*)    &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt;  &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt; &amp;gt;&amp;gt; wrote:    OOOh, I'd love a nice resolver solution. I live in sunny South Africa, with lovely beaches, and incredibly high latency internet connections, so reducing resolver calls helps a lot :-)    On 2012-04-12 20:46, Rolf Lear wrote:    'On the side' I have started the 'Resolver' project. This is hosted on github: &lt;a class="exlink mklink" href="https://github.com/rolfl/__Resolver" rel="nofollow"&gt; https://github.com/rolfl/__Resolver &lt;/a&gt;  &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt; &amp;gt; This project comes directly from the JDOM work because I did much of my JDOM work on the train, without an internet connection, and I needed to 'resolve' XSD and other resources from the web. If the Resolver project gets some interest, I am sure it would make some sense to at least consider moving it in to JDOM.   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/__disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/__disclaimer.html &lt;/a&gt;  &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;   &lt;/div&gt;  _________________________________________________ To control your jdom-interest membership: http://www.jdom.org/mailman/__options/jdom-interest/ &lt;span&gt; __yo &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;  &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x additional features</header>
    <body>Does the resolver have the ability to preload DTDs/Schemas? I know there have been several times it would have been nice to be able to pre-cache documents I know I'm going to need, rather than waiting until the first request. (*Chris*) &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  OOOh, I'd love a nice resolver solution. I live in sunny South Africa, with lovely beaches, and incredibly high latency internet connections, so reducing resolver calls helps a lot :-)    On 2012-04-12 20:46, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  'On the side' I have started the 'Resolver' project. This is hosted on github: &lt;br/&gt; &lt;a class="exlink mklink" href="https://github.com/rolfl/" rel="nofollow"&gt; https://github.com/rolfl/ &lt;/a&gt; &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt; &amp;gt;This &lt;br/&gt; project comes directly from the JDOM work because I did much of my JDOM work on the train, without an internet connection, and I needed to 'resolve' XSD and other resources from the web. If the Resolver project gets some interest, I am sure it would make some sense to at least consider moving it in to JDOM.   &lt;/div&gt; &lt;div class="footer legalese"&gt;  Disclaimer: &lt;br/&gt; &lt;a class="exlink mklink" href="http://www.peralex.com/" rel="nofollow"&gt; http://www.peralex.com/ &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: Re:  2.0.0 usage</header>
    <body>Hi,     Yes, using it, no problems    Regards, Benjamin    On 12.04.2012 20:21, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    I know it is soon, but I am trying to budget time and resources for 2.0.1.    Already there is a bug identified in 2.0.0, and it needs to be resolved.... but, how long should I wait to see if there are other bugs?    Thus I would like as much feedback as possible whether you are using JDOM 2.x or not. Think of it as a 'poll', and all I need (for now) are simple things like: - Yes, using it, no problems - Yes, using it, some problems, but will keep going. - Tried it, had problems, gave up. - Going to try it when there's time. - Going to try it when it is more 'stable'. - I would try it if it had feature XYZ. - Not planning on trying it - happy with JDOM 1.x    If you feel like creating your own answer, or expanding on your reply, or anything, please do.    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>Hi Michael    I understand the concerns you had with the API stability.    Out of interest though, when I was working with Jaxen, it became apparent that the 'model' of putting JDOM support directly in to Jaxen is 'broken', it should be (and now is) the other way around. JDOM 2.x now 'owns' the interface to Jaxen, it 'Owns' the implementation of the Jaxen 'Navigator'.    This solves a number of problems, not the least of which is that the compile-time dependencies are circular otherwise...    Is there not some way you can help build the 'glue' logic in to JDOM rather than in to Saxon? I started trying to do that a few months ago, but got my head all messed up in the API, and NodeInfo classes, etc.    From a JDOM perspective it does not make much sense to be embedded inside Saxon, but it makes sense to have Saxon available as an XPath 'engine' using the JDOM XPath API. I know that from a Saxon perspective there are different objectives....    Anyway, I am going to (at some point soon-ish) work on putting together a Soxon-based implementation of JDOM XPath API, and it would be great if I could work from some existing base, rather than reinvent it all...    Rolf    On 12/04/2012 3:24 PM, Michael Kay wrote:   &lt;div class="quote quote-1"&gt;  We were going to include JDOM 2.0 support in Saxon 9.4, tested it and it was fine, but then we realised the API wasn't stable enough and pulled it before release. It will no doubt go back in for 9.5.    Having said that, we don't actually "use" JDOM, except to run tests.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Element comparison in XML document</header>
    <body>Hello Grzegorz,     Thank you.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Element comparison in XML document</header>
    <body>Hello,     The method "contains" you use checks if the particular Java Element object exists in element list. It obviously doesn't.    Use XPath with properly initialized namespaces and query    //hasPart[text()='A1_4_001']    or similar.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>Started to use it, no problems yet.    I would not be very hasty in releasing the first bug fix to a brand-new major version. It would suggest that it is already well tested. Staying at 2.0.0 suggests correctly - it is new, try it, but be sure something will not work optimal.    Regards, GK    &lt;span&gt; oliv &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jalios.com &lt;/span&gt; &amp;gt;:   &lt;div class="quote quote-1"&gt;  Hi Rolf,    Regarding usage, 2 custom answers for me : - Tried it when it was in beta, had no apparent problems (which indicates we have a "basic usage" of the library). - Going to try it *more* when there's time.    Regarding next release date : I am shared between "release often" and "release when there is a major bug or enough small bug discovered". What we usually do for our software is provide more frequent release in the beginning of a new major version, even if the bug is not really major or critical, and then slow down. It marks our implication in the new release and I think it gives more confidence to the user that we provide rapid fixes (though the opposite could be said as user might perceive this frequent release as a proof of buggy release...)</body>
  </mail>
  <mail>
    <header>[jdom-interest] Element comparison in XML document</header>
    <body>Is there an easier way of checking if an element exists in an XML file? I tried to use the List function 'contains' to do my comparison, but it seems to fail; checked the Element class for appropriate methods, but nothing there. The closest I came to finding something similar on markmail.org is an old article [1] that isn't quite helpful. The only workaround I can think of at the moment is a recursive walk-through to check the textual content of each element, but something tells me there has to be a built-in mechanism for doing this.    Code snippet    Element hasPartNode = new Element("hasPart", Namespace.getNamespace("dcterms", " &lt;a class="exlink mklink" href="http://purl.org/dc/terms/" rel="nofollow"&gt; http://purl.org/dc/terms/ &lt;/a&gt;    // This prints false System.out.println(rootNode.getChildren("hasPart", Namespace.getNamespace("dcterms", " &lt;a class="exlink mklink" href="http://purl.org/dc/terms/" rel="nofollow"&gt; http://purl.org/dc/terms/ &lt;/a&gt;    Input XML document    &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; " xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/terms/" rel="nofollow"&gt; http://purl.org/dc/terms/ &lt;/a&gt;    [1] &lt;a class="exlink mklink" href="http://markmail.org/message/s7le3js7r5vub7oy" rel="nofollow"&gt; http://markmail.org/message/s7le3js7r5vub7oy &lt;/a&gt;   -- Phiri</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>Hi Rolf,     Regarding usage, 2 custom answers for me : - Tried it when it was in beta, had no apparent problems (which indicates we have a "basic usage" of the library). - Going to try it *more* when there's time.    Regarding next release date : I am shared between "release often" and "release when there is a major bug or enough small bug discovered". What we usually do for our software is provide more frequent release in the beginning of a new major version, even if the bug is not really major or critical, and then slow down. It marks our implication in the new release and I think it gives more confidence to the user that we provide rapid fixes (though the opposite could be said as user might perceive this frequent release as a proof of buggy release...)    Olivier    On 12/04/2012 20:21, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    I know it is soon, but I am trying to budget time and resources for 2.0.1.    Already there is a bug identified in 2.0.0, and it needs to be resolved.... but, how long should I wait to see if there are other bugs?    Thus I would like as much feedback as possible whether you are using JDOM 2.x or not. Think of it as a 'poll', and all I need (for now) are simple things like: - Yes, using it, no problems - Yes, using it, some problems, but will keep going. - Tried it, had problems, gave up. - Going to try it when there's time. - Going to try it when it is more 'stable'. - I would try it if it had feature XYZ. - Not planning on trying it - happy with JDOM 1.x    If you feel like creating your own answer, or expanding on your reply, or anything, please do.    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x additional features</header>
    <body>OOOh, I'd love a nice resolver solution. I live in sunny South Africa, with lovely beaches, and incredibly high latency internet connections, so reducing resolver calls helps a lot :-)    On 2012-04-12 20:46, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  'On the side' I have started the 'Resolver' project. This is hosted on github: &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt; This project comes directly from the JDOM work because I did much of my JDOM work on the train, without an internet connection, and I needed to 'resolve' XSD and other resources from the web. If the Resolver project gets some interest, I am sure it would make some sense to at least consider moving it in to JDOM.   &lt;/div&gt; &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x additional features</header>
    <body>Hi Rolf,     well, for business reasons the most interesting features are Android support for mobile apps and "full" Saxon support for enterprise applications.    Have you ever look on Apache ServiceMix? They package jdom as an OSGi bundle for years. ( &lt;a class="exlink mklink" href="https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-1.1.2" rel="nofollow"&gt; https://github.com/apache/servicemix4-bundles/tree/trunk/jdom-1.1.2 &lt;/a&gt; )    The idea with the resolver sounds cool, but at the moment I see no much use cases for usage with jdom in "normal" environments. Together with mobile support (Android) in unstable network environments I think it should make sense. Probably something for the contrib subproject?    Best regards Benjamin    On 12.04.2012 20:46, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi again everyone.    I am scheduling some additional features to put in the 'roadmap' for JDOM. I am already working on some, but I want to get some feedback and suggestions too.    'On the side' I have started the 'Resolver' project. This is hosted on github: &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt; This project comes directly from the JDOM work because I did much of my JDOM work on the train, without an internet connection, and I needed to 'resolve' XSD and other resources from the web. If the Resolver project gets some interest, I am sure it would make some sense to at least consider moving it in to JDOM.    I have been playing with a new Android tablet, and messing with the Android dev kit. I think it would be useful to come up with at minimum a 'statement' indicating Android support. If JDOM operates on Android it would be good to indicate what works, what's needed to make it work, what does not work, etc. Something similar to the Java5 page for JDOM:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Using-Java5" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Using-Java5 &lt;/a&gt;   Other items that I am not yet working on are:    XPath 2.0 support Saxon 'native' integration - integrate with Saxon at a lower level and perhaps make it possible (by just including a saxon jar) to use Saxon for both XSLT and XPath. OSGi - investigate it, and find out whether JDOM could be a part of that model.    Finally, there are a whole bunch of things I am not aware of that should be happening.... What should JDOM 2.x be doing for you?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] 2.0.0 usage</header>
    <body>We were going to include JDOM 2.0 support in Saxon 9.4, tested it and it was fine, but then we realised the API wasn't stable enough and pulled it before release. It will no doubt go back in for 9.5.    Having said that, we don't actually "use" JDOM, except to run tests.</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.x additional features</header>
    <body>Hi again everyone.    I am scheduling some additional features to put in the 'roadmap' for JDOM. I am already working on some, but I want to get some feedback and suggestions too.    'On the side' I have started the 'Resolver' project. This is hosted on github: &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt; This project comes directly from the JDOM work because I did much of my JDOM work on the train, without an internet connection, and I needed to 'resolve' XSD and other resources from the web. If the Resolver project gets some interest, I am sure it would make some sense to at least consider moving it in to JDOM.    I have been playing with a new Android tablet, and messing with the Android dev kit. I think it would be useful to come up with at minimum a 'statement' indicating Android support. If JDOM operates on Android it would be good to indicate what works, what's needed to make it work, what does not work, etc. Something similar to the Java5 page for JDOM:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Using-Java5" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Using-Java5 &lt;/a&gt;   Other items that I am not yet working on are:    XPath 2.0 support Saxon 'native' integration - integrate with Saxon at a lower level and perhaps make it possible (by just including a saxon jar) to use Saxon for both XSLT and XPath. OSGi - investigate it, and find out whether JDOM could be a part of that model.    Finally, there are a whole bunch of things I am not aware of that should be happening.... What should JDOM 2.x be doing for you?    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Volunteers Wanted....</header>
    <body>Hi all    I have been trying to 'analyze' how issue #72 slipped through, and I have decided it stems from 4 factors:    1. not many people use 'compact' format output 2. When I wrote the JUnit tests I was focussed on the fine details, and the multiple-component circumstances that cause the failure are not tested in a 'compact' form 3. When I do process data at a 'high level' with complext XML content with multi-type child content, I am not using the compact format, but more typically the 'raw' format. 4. Programmers are not good at testing their own code.    As a result of the above, I am looking for some volunteers to spend a few hours and really try to get a 'grip' on JDOM2, to plug it in to their existing systems, and to provide as much feedback as they can. Everything down to typo's in the comments!    Oh, by the way, paulk-asert, if you're on the list, thanks for reviewing the wiki pages ;-)    If I could get a few people to give some objective feedback it would make a big difference for how much confidence we could put on a JDOM 2.0.1 release....    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] 2.0.0 usage</header>
    <body>Hi all.    I know it is soon, but I am trying to budget time and resources for 2.0.1.    Already there is a bug identified in 2.0.0, and it needs to be resolved.... but, how long should I wait to see if there are other bugs?    Thus I would like as much feedback as possible whether you are using JDOM 2.x or not. Think of it as a 'poll', and all I need (for now) are simple things like: - Yes, using it, no problems - Yes, using it, some problems, but will keep going. - Tried it, had problems, gave up. - Going to try it when there's time. - Going to try it when it is more 'stable'. - I would try it if it had feature XYZ. - Not planning on trying it - happy with JDOM 1.x    If you feel like creating your own answer, or expanding on your reply, or anything, please do.    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Using namespace prefixes for sub-elements</header>
    <body>Hello Rolf,     Thank you very much.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Using namespace prefixes for sub-elements</header>
    <body>Hi Phiri.    'declare' the namespaces at the root level:    &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/apidocs/org/jdom2/Element.html#addNamespaceDeclaration" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/apidocs/org/jdom2/Element.html#addNamespaceDeclaration &lt;/a&gt; (org.jdom2.Namespace)       Rolf    On Thu, 12 Apr 2012 13:13:38 +0200, Lighton Phiri &lt;span&gt; ligh &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello,    I've been going through the JavaDoc documentation and cannot seem to find anything that will help me create a document with fully qualified namespaces defined in the root element. I do not want to have to explicitly define the fully qualified namespace for each subsequent subelement that I define, but rather just use the namespace prefixes.    Code    // namespaces Namespace dc = Namespace.getNamespace("dc", " &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; Namespace dcterms = Namespace.getNamespace("dcterms", " &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    // title element    // hasPart element    // root element    Output    xmlns:dc=" &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt; xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    Desired output    &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; " xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    -- Phiri</body>
  </mail>
  <mail>
    <header>[jdom-interest] [SOLVED] Re: Using namespace prefixes for sub-elements</header>
    <body>Hello,     Spoke too soon --using the 'addNamespaceDeclaration(Namespace arg0)' method to the root element does exactly what I want.    // root element    -- Phiri</body>
  </mail>
  <mail>
    <header>[jdom-interest] Using namespace prefixes for sub-elements</header>
    <body>Hello,     I've been going through the JavaDoc documentation and cannot seem to find anything that will help me create a document with fully qualified namespaces defined in the root element. I do not want to have to explicitly define the fully qualified namespace for each subsequent subelement that I define, but rather just use the namespace prefixes.    Code    // namespaces Namespace dc = Namespace.getNamespace("dc", " &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; Namespace dcterms = Namespace.getNamespace("dcterms", " &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    // title element    // hasPart element    // root element    Output    &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt; xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    Desired output    &lt;a class="exlink mklink" href="http://purl.org/dc/elements/1.1/" rel="nofollow"&gt; http://purl.org/dc/elements/1.1/ &lt;/a&gt; " xmlns:dcterms=" &lt;a class="exlink mklink" href="http://purl.org/dc/dcterms/" rel="nofollow"&gt; http://purl.org/dc/dcterms/ &lt;/a&gt;    -- Phiri</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>You're welcome... and thanks for the comprehensive 'issue' that you put together with the whole test-case. It helps a lot.    Rolf    On 11/04/2012 7:25 AM, Lighton Phiri wrote:   &lt;div class="quote quote-1"&gt;  Hello,    Thanks a lot for the hotfix.    --Phiri    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:   &lt;div class="quote quote-2"&gt;  Hi Phiri.    I found (and fixed) the issue. Also added a test case for it.    Now the question is how to deal with it....    For the moment I have uploaded a 'hotfix' to github:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip &lt;/a&gt;   I have to think about this some more though. This happens to be a 'big' bug, but should I wait a few days.... or should I push it out in a rush?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>Hello,     Thanks a lot for the hotfix.    --Phiri    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Phiri.    I found (and fixed) the issue. Also added a test case for it.    Now the question is how to deal with it....    For the moment I have uploaded a 'hotfix' to github:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip &lt;/a&gt;   I have to think about this some more though. This happens to be a 'big' bug, but should I wait a few days.... or should I push it out in a rush?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>Hi Phiri.    I found (and fixed) the issue. Also added a test case for it.    Now the question is how to deal with it....    For the moment I have uploaded a 'hotfix' to github:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom-2.x-issue72.zip &lt;/a&gt;   I have to think about this some more though. This happens to be a 'big' bug, but should I wait a few days.... or should I push it out in a rush?    Rolf    On 11/04/2012 6:38 AM, Lighton Phiri wrote:   &lt;div class="quote quote-1"&gt;  Hello Rolf,    Noted. Thank you very much.    --Phiri    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;  wrote:   &lt;div class="quote quote-2"&gt;  Hi Lighton.    Hmmm.... it's a bug. So many things going through my head right now.... like how can that be?    But, I am stepping through the code, and yes, it's a bug.    I am (was) certain I had test cases that cover this condition.... but obviously I don't.    I am working on it with 'top priority'.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>Hello Rolf,     Noted. Thank you very much.    --Phiri    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Lighton.    Hmmm.... it's a bug. So many things going through my head right now.... like how can that be?    But, I am stepping through the code, and yes, it's a bug.    I am (was) certain I had test cases that cover this condition.... but obviously I don't.    I am working on it with 'top priority'.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>Hi Lighton.    Hmmm.... it's a bug. So many things going through my head right now.... like how can that be?    But, I am stepping through the code, and yes, it's a bug.    I am (was) certain I had test cases that cover this condition.... but obviously I don't.    I am working on it with 'top priority'.    Rolf    On 11/04/2012 5:40 AM, Lighton Phiri wrote:   &lt;div class="quote quote-1"&gt;     // jdom2 imports          XMLOutputter XMLOutput = new      &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] XMLOutputter(Format.getCompactFormat)</header>
    <body>Hello,     I recently started playing around with JDOM (I am working with ) and was trying to test XMLOutputter. For some strange reason, when I attempt to write to an XML file using XMLOutputter(Format.getCompactFormat), the code below only writes the first sub-element of the root node. Substituting getCompactFormat with the other formats (getPrettyFormat and getRawFormat) results in desired output.    Could there be something I might be missing?    Input File       Output       Code       // jdom2 imports                      XMLOutputter XMLOutput = new</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>Thanks a lot.  Everything works perfectly now. I will start using vers 2.0 today.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>Hi Bashiro.    Chris is right, doing a remove() changes the size(), so you are skipping items....    Iteration is your friend, but there is no need to go backwards... are you using JDOM 2.0.0?       Otherwise:       Rolf    On 09/04/2012 3:39 PM, Bashiro wrote:   &lt;div class="quote quote-1"&gt;  Thanks a lot for the reply. And thanks to both Rolf and Chris! I really appreciate this.    What I am doing is; I am searching for  an "ID" in "contacts" to delete.          This only works when the ID  in question is at [0]. I can view the contacts in a &lt;br/&gt; table too. If the contact is in a second row or a different row than first row it does not &lt;br/&gt; work.    if &lt;br/&gt; (next.getAttribute("contacts").getValue().equals(ID)&amp;amp;&amp;amp;next.getAttribute("name").getValue().equals(name)) &lt;br/&gt; do.....    Thanks for any help.    Have a nice day!    bashiro</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>You might try iterating backwards through the list.  I would assume that removing a child might change the indexing of the rest of the children, if your start at lists.size() - 1 and work your way toward 0, then the rest of the indexes won't change. (*Chris*)    &lt;span&gt; bash &lt;a class="email mklink"&gt; ... &lt;/a&gt; @myway.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Thanks a lot for the reply. And thanks to both Rolf and Chris! I really appreciate this.    What I am doing is; I am searching for  an "ID" in "contacts" to delete.          This only works when the ID  in question is at [0]. I can view the contacts in a table too. If the contact is in a second row or a different row than first row it does not work.    if (next.getAttribute("contacts").getValue().equals(ID)&amp;amp;&amp;amp;next.getAttribute("name").getValue().equals(name)) do.....    Thanks for any help.    Have a nice day!    bashiro</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>Thanks a lot for the reply. And thanks to both Rolf and Chris! I really appreciate this.    What I am doing is; I am searching for  an "ID" in "contacts" to delete.          This only works when the ID  in question is at [0]. I can view the contacts in a &lt;br/&gt; table too. If the contact is in a second row or a different row than first row it does not &lt;br/&gt; work.    if &lt;br/&gt; (next.getAttribute("contacts").getValue().equals(ID)&amp;amp;&amp;amp;next.getAttribute("name").getValue().equals(name)) &lt;br/&gt; do.....    Thanks for any help.    Have a nice day!</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>Hi Brashiro.    I think (at least I hope) you are mistaken.    You should be able to remove an Element in a number of ways....    Assuming that you have a Element emt which is item 3 in the 'parent' ContentList, you should be able to do any one of:       Rolf    &lt;span&gt; bash &lt;a class="email mklink"&gt; ... &lt;/a&gt; @myway.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello Folks! First of all thanks to the jDom team for version 2.0! Congrats to us all...    My question is; I am trying to remove an element in jDom. It only removes the element if the element is located at [0].  Is there a good code or a good book to help me with that ?    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Removing Elements</header>
    <body>If I'm not mistaken, you have to call .detach() on the element to detach it from it's parent before it can be removed. (*Chris*)    &lt;span&gt; bash &lt;a class="email mklink"&gt; ... &lt;/a&gt; @myway.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello Folks! First of all thanks to the jDom team for version 2.0! Congrats to us all...    My question is; I am trying to remove an element in jDom. It only removes the element if the element is located at [0].  Is there a good code or a good book to help me with that ?    Thanks</body>
  </mail>
  <mail>
    <header>[jdom-interest] Removing Elements</header>
    <body>Hello Folks! First of all thanks to the jDom team for version 2.0! Congrats to us all...    My question is; I am trying to remove an element in jDom. It only removes the &lt;br/&gt; element if the element is located at [0].  Is there a good code or a good book to help me &lt;br/&gt; with that ?    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Hi Gisella.    I pushed through a change for 2.0.0.... Issue: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/71" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/71 &lt;/a&gt;  Commit:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/587efe408670d112f6e1af7094373e20f5a8d0aa" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/587efe408670d112f6e1af7094373e20f5a8d0aa &lt;/a&gt;   In JDOM 2 I have more flexibility with changing the API, and this one makes it all somewhat more consistent....    So, the fix is already in for 2.0.0, and released.    I don't expect this to be changed in 1.1.4. It is possible it could break existing behaviour for other people....    Rolf    &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  thank you, Rolf. I had patched our code using JDOM 1.1.3, to check for null.    A solution for the NPE in  JDOM 1.1.3/2.x could be:    As in Element.java:       then:    public Attribute getAttribute(final String name, final Namespace ns) return (Attribute) attributes.get(name, (ns == null)?    Thanks.   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 7:09 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ; Jason Hunter Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)    Hi again Gisella.    I think your examples are great, in the sense that they perfectly illustrate the inconsistencies. On the other hand, they do not help solve the problem of which one is right or wrong. It does make me want to make sure that new Element(String, null) throws NPE though!    Currently the Attribute handling is 'consistent'... get, remove, set all   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-2"&gt;  throw NPE for null Namespace.    I can't think of a nice way to put it, but the easiest thing to do would   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-2"&gt;  be to change your code to use a conditional: emt.setAttribute(String, String,    That's for 1.1.3 at least.    I still think that maybe I could change the logic on JDOM 2.0.0...    For all the get/set/remove Attribute I can maybe put the if-logic in.    Yes, I have played with it, and it's a reasonable thing to do for 2.0.0.   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="quote quote-2"&gt;  It is also consistent with 'new Attribute(String, String, null).    On the whole, I would agree with you, it should not throw NPE, and get and remove should not throw NPE either.    I just changed to code to 'work', and, surprisingly, all the tests pass.    That's the wonders of wvwn with 100% code coverage you still miss some things.    Maybe that will inspire you to try JDOM 2.0.0 ;-)    Rolf    On 06/04/2012 8:28 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-3"&gt;  I see the inconsistencies I would say that when removing the nullpointerexception is OK. But when creating, you can see for example new Element(string name) new Element (String name, null) both set the value of Namespace to NO_NAMESPACE. And Element.setAttribute(final String name, final String value) does not throw a NPE but Element.setAttribute(final String name, final String value, null) does.   &lt;div class="quote quote-4"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 4:39 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)    Hi Gisella    Yes, I can see now where the change is. It happened between JDOM 1.0 and 1.1, back in 2006 ...   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139 &lt;/a&gt;  &lt;div class="quote quote-3"&gt; &lt;div class="quote quote-4"&gt;   In fact, this issue has been reported before:  &lt;a class="exlink mklink" href="http://markmail.org/message/atybnwqqvlxk7ut4" rel="nofollow"&gt; http://markmail.org/message/atybnwqqvlxk7ut4 &lt;/a&gt; and there was never any follow-up...    So, I can see the problem, and it still exists in JDOM 2.x.    But, I can't see an easy fix.    I am of the opinion that null input values deserve a NullPointerException unless documented that nulls are allowed... but I also recognize that compatibility is important, and JDOM has some consistency in it when treating null Namespace values as Namespace.NO_NAMESPACE.    So, I am going to think about it for a moment.... but, I would not expect a fix in the short term for JDOM 1.x. Even in the best circumstances it would take a month or so to get a 1.1.4 out...    For JDOM 2.x, it is also very late in the game.... too late, in fact.    In order to fix it properly I would have to decide on a strategy for dealing with null Namespace input. A quick 'poll' of the JDOM 2.x code suggests:    Change null to NO_NAMESPACE:    ---------------------------- Element Constructor. Element.setNamespace(Namespace)    Treats null as 'wildcard':    -------------------------- Element.getChild(String,Namespace) Element.getChildren(String,Namespace) Element.getChildText*(String,Namespace) Element.removeChild(String,Namespace) Element.removeChildren(String,Namespace)    Just ignores it.    ---------------- Element.removeNamespaceDeclaration(Namespace)    Throws NPE:    ----------- Element.addNamespaceDeclaration(Namespace) Element.getAttribute(String,Namespace) Element.setAttribute(String,String,Namespace)    I think, having looked at the 'poll' results, when it comes to Attributes, the NPE is the 'right' thing.    Given that getAttribute(String,Namespace) throws NPE (and removeAttribute), and they have 'always' thrown NPE, I think it is logical that setAttribute(String,String,Namespace) throws NPE too.    Bottom line is that I am not convinced that it is a bug in 1.1.3. Perhaps it was a bug in 1.0 to allow the null.    So, this all comes around to the 'push-back' option. How difficult is it for you to do the null-check yourself before you call setAttribute()?    That is the obvious workaround, and it is the 'right thing'....    Rolf    On 06/04/2012 5:53 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-5"&gt;  the stack trace belongs to JDOM 1.1.3   &lt;div class="quote quote-6"&gt;  -----Original Message----- From: Saavedra Gisella Sent: Friday, April 06, 2012 2:49 PM To: 'Rolf Lear' Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: RE: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)    Rolf,    I believe you might be looking at the wrong method:    This is JDOM 1.0  (ns is passed as null)    public Element setAttribute(String name, String value, Namespace    Inside this code, the constructor new Attribute(name, value, ns) calls:       Here setNamespace(namespace) calls:    // Verify the attribute isn't trying to be in a default namespace // Attributes can't be in a default namespace throw new IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the " +    where namespace being null is set to NO_NAMESPACE.    Stack trace (JODM 1.1.3):    java.lang.NullPointerException at org.jdom.AttributeList.indexOf(AttributeList.java:378) at org.jdom.AttributeList.get(AttributeList.java:366) at org.jdom.Element.getAttribute(Element.java:1004) at org.jdom.Element.setAttribute(Element.java:1178) at   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  com.navis.argo.business.snx.AbstractXmlExporter.setAttribute(AbstractXmlExporter.java:40)   &lt;div class="quote quote-4"&gt; &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;div class="footer noise"&gt;  --------------   &lt;/div&gt; &lt;div class="quote quote-7"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 2:40 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)    Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;  &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="quote quote-7"&gt;   Here's the attributes.get(String,Namespace) method:   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;  &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="quote quote-7"&gt;   And that calls the indexOf(String,Namespace) method:   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;  &lt;div class="quote quote-5"&gt; &lt;div class="quote quote-6"&gt; &lt;div class="quote quote-7"&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>thank you, Rolf. I had patched our code using JDOM 1.1.3, to check for null.    A solution for the NPE in  JDOM 1.1.3/2.x could be:    As in Element.java:       then:    return (Attribute) attributes.get(name, (ns == null)? &lt;br/&gt;    Thanks.   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 7:09 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ; Jason Hunter Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi again Gisella.    I think your examples are great, in the sense that they perfectly illustrate the inconsistencies. On the other hand, they do not help solve the problem of which one is right or wrong. It does make me want to make sure that new Element(String, null) throws NPE though!    Currently the Attribute handling is 'consistent'... get, remove, set all throw NPE for null Namespace.    I can't think of a nice way to put it, but the easiest thing to do would be to change your code to use a conditional: emt.setAttribute(String, String,    That's for 1.1.3 at least.    I still think that maybe I could change the logic on JDOM 2.0.0...    For all the get/set/remove Attribute I can maybe put the if-logic in.    Yes, I have played with it, and it's a reasonable thing to do for 2.0.0. It is also consistent with 'new Attribute(String, String, null).    On the whole, I would agree with you, it should not throw NPE, and get and remove should not throw NPE either.    I just changed to code to 'work', and, surprisingly, all the tests pass.    That's the wonders of wvwn with 100% code coverage you still miss some things.    Maybe that will inspire you to try JDOM 2.0.0 ;-)</body>
  </mail>
  <mail>
    <header>[jdom-announce] JDOM 2.0.0 is released</header>
    <body>Hi all!    JDOM 2.0.0 is out and available at &lt;a class="exlink mklink" href="http://jdom.org/downloads/index.html" rel="nofollow"&gt; http://jdom.org/downloads/index.html &lt;/a&gt;  It is also available on maven-central (or will be soon) as GroupID org.jdom, ArtifactID jdom, and Version 2.0.0.    For details on all the new features available in JDOM 2.0.0 please see the wiki page: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Features" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Features &lt;/a&gt;   For a 'Primer' on getting started with JDOM, some basic concepts, and examples on how to accomplish the most common tasks in JDOM, see:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer &lt;/a&gt;   For insights on what issues to expect when changing from JDOM 1.x to 2.x have a look at the 'Migration Guide' here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues &lt;/a&gt;   The JavaDoc is available in the release, as well as at:  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/index.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/index.html &lt;/a&gt;   Like previous snapshot releases, the JUnit and Cobertura test-coverage reports are available at:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt;   As always, if you have any comments, suggestions, concerns, please speak up!    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.0.0 is released</header>
    <body>Hi all!    JDOM 2.0.0 is out and available at &lt;a class="exlink mklink" href="http://jdom.org/downloads/index.html" rel="nofollow"&gt; http://jdom.org/downloads/index.html &lt;/a&gt;  It is also available on maven-central (or will be soon) as GroupID org.jdom, ArtifactID jdom, and Version 2.0.0.    For details on all the new features available in JDOM 2.0.0 please see the wiki page: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Features" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Features &lt;/a&gt;   For a 'Primer' on getting started with JDOM, some basic concepts, and examples on how to accomplish the most common tasks in JDOM, see:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-A-Primer &lt;/a&gt;   For insights on what issues to expect when changing from JDOM 1.x to 2.x have a look at the 'Migration Guide' here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Migration-Issues &lt;/a&gt;   The JavaDoc is available in the release, as well as at:  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/index.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/index.html &lt;/a&gt;   Like previous snapshot releases, the JUnit and Cobertura test-coverage reports are available at:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt;   As always, if you have any comments, suggestions, concerns, please speak up!    Happy Coding    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/news</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @17:09:07 PDT Author:    Update of /home/cvs/jdom-site/news In directory servlets:/tmp/cvs-serv18730    Modified Files: index.html Log Message: Tweaking launch date to be today. =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.33	Mon Apr  9 00:09:07 2012 Repository revision:	1.33	/home/cvs/jdom-site/news/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.17)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/downloads</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @17:05:41 PDT Author:    Update of /home/cvs/jdom-site/downloads In directory servlets:/tmp/cvs-serv18606    Modified Files: docs.html Log Message: Simplifying docs page. =================================================================== File: docs.html        	Status: Up-to-date    Working revision:	1.17	Mon Apr  9 00:05:41 2012 Repository revision:	1.17	/home/cvs/jdom-site/downloads/docs.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.12)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/source/archive</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:57:42 PDT Author:    Update of /home/cvs/jdom-site/dist/source/archive In directory servlets:/tmp/cvs-serv18161/source/archive    Added Files: jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: jdom-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:15 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.3.zip   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:28 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:30 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-contrib-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:32 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-contrib-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:34 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-test-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-test-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/source</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:57:42 PDT Author:    Update of /home/cvs/jdom-site/dist/source In directory servlets:/tmp/cvs-serv18161/source    Modified Files: HEADER.txt Removed Files: jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: HEADER.txt       	Status: Up-to-date    Working revision:	1.7	Sun Apr  8 23:57:03 2012 Repository revision:	1.7	/home/cvs/jdom-site/dist/source/HEADER.txt,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file jdom-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.3.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-contrib-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-contrib-1.1.3.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-test-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-test-1.1.3.zip,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:57:39 PDT Author:    Update of /home/cvs/jdom-site/dist/binary In directory servlets:/tmp/cvs-serv18161/binary    Modified Files: HEADER.txt Removed Files: jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: HEADER.txt       	Status: Up-to-date    Working revision:	1.7	Sun Apr  8 23:55:29 2012 Repository revision:	1.7	/home/cvs/jdom-site/dist/binary/HEADER.txt,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file jdom-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-1.1.3.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-contrib-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-contrib-1.1.3.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.3.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.3.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-test-1.1.3.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.3.zip		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.3.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-test-1.1.3.zip,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary/archive</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:57:39 PDT Author:    Update of /home/cvs/jdom-site/dist/binary/archive In directory servlets:/tmp/cvs-serv18161/binary/archive    Added Files: jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: jdom-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:56:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.3.zip   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:56:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:56:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-contrib-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:56:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-contrib-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-test-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:57:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-test-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:52:09 PDT Author:    Update of /home/cvs/jdom-site In directory servlets:/tmp/cvs-serv17911    Modified Files: index.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.42	Sun Apr  8 23:52:09 2012 Repository revision:	1.42	/home/cvs/jdom-site/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.24)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/index-files</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:52:02 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/index-files In directory servlets:/tmp/cvs-serv17821/index-files    Modified Files: index-1.html index-10.html index-11.html index-12.html index-13.html index-14.html index-15.html index-16.html index-17.html index-18.html index-19.html index-2.html index-20.html index-21.html index-3.html index-4.html index-5.html index-6.html index-7.html index-8.html index-9.html Added Files: index-22.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: index-22.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:52:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-22.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-1.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:51:59 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-1.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-10.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:51:59 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-10.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-11.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-11.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-12.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-12.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-13.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-13.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-14.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-14.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-15.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-15.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-16.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-16.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-17.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-17.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-18.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-18.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-19.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-19.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-2.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-2.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-20.html    	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:00 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-20.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-21.html    	Status: Up-to-date    Working revision:	1.11	Sun Apr  8 23:52:00 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-21.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: index-3.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-3.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-4.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-4.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-5.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-5.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-6.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-6.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-7.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-7.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-8.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-8.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-9.html     	Status: Up-to-date    Working revision:	1.13	Sun Apr  8 23:52:01 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-9.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:52:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs In directory servlets:/tmp/cvs-serv17821    Modified Files: allclasses-frame.html allclasses-noframe.html constant-values.html deprecated-list.html help-doc.html index.html overview-frame.html overview-summary.html overview-tree.html package-list serialized-form.html stylesheet.css Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: allclasses-frame.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/allclasses-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: allclasses-noframe.html	Status: Up-to-date    Working revision:	1.10	Sun Apr  8 23:51:59 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/allclasses-noframe.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: constant-values.html	Status: Up-to-date    Working revision:	1.10	Sun Apr  8 23:51:59 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/constant-values.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: deprecated-list.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/deprecated-list.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: help-doc.html    	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14	/home/cvs/jdom-site/docs/apidocs/help-doc.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14	/home/cvs/jdom-site/docs/apidocs/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-frame.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-summary.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-tree.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-list     	Status: Up-to-date    Working revision:	1.7	Sun Apr  8 23:51:59 2012 Repository revision:	1.7	/home/cvs/jdom-site/docs/apidocs/package-list,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: serialized-form.html	Status: Up-to-date    Working revision:	1.14	Sun Apr  8 23:51:59 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/serialized-form.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: stylesheet.css   	Status: Up-to-date    Working revision:	1.7	Sun Apr  8 23:51:59 2012 Repository revision:	1.7	/home/cvs/jdom-site/docs/apidocs/stylesheet.css,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:53 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2 In directory servlets:/tmp/cvs-serv17759    Added Files: Attribute.html AttributeType.html CDATA.html Comment.html Content.CType.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMConstants.html JDOMException.html JDOMFactory.html Namespace.html NamespaceAware.html Parent.html ProcessingInstruction.html SlimJDOMFactory.html Text.html UncheckedJDOMFactory.html Verifier.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: Attribute.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Attribute.html,v    Existing Tags: No Tags Exist    =================================================================== File: AttributeType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/AttributeType.html,v    Existing Tags: No Tags Exist    =================================================================== File: CDATA.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/CDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: Comment.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Comment.html,v    Existing Tags: No Tags Exist    =================================================================== File: Content.CType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Content.CType.html,v    Existing Tags: No Tags Exist    =================================================================== File: Content.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: DataConversionException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/DataConversionException.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: DocType.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/DocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: Document.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Document.html,v    Existing Tags: No Tags Exist    =================================================================== File: Element.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Element.html,v    Existing Tags: No Tags Exist    =================================================================== File: EntityRef.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/EntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalAddException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/IllegalAddException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalDataException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/IllegalDataException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalNameException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/IllegalNameException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalTargetException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/IllegalTargetException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMConstants.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/JDOMConstants.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/JDOMException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMFactory.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Namespace.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Namespace.html,v    Existing Tags: No Tags Exist    =================================================================== File: NamespaceAware.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/NamespaceAware.html,v    Existing Tags: No Tags Exist    =================================================================== File: Parent.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: ProcessingInstruction.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/ProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: SlimJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/SlimJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Text.html        	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Text.html,v    Existing Tags: No Tags Exist    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Verifier.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/Verifier.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use In directory servlets:/tmp/cvs-serv17583/jaxen/class-use    Added Files: JDOMXPath.html JaxenXPathFactory.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: JDOMXPath.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use/JDOMXPath.html,v    Existing Tags: No Tags Exist    =================================================================== File: JaxenXPathFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use/JaxenXPathFactory.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/util</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util In directory servlets:/tmp/cvs-serv17583/util    Added Files: AbstractXPathCompiled.html XPathDiagnosticImpl.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractXPathCompiled.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/AbstractXPathCompiled.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathDiagnosticImpl.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/XPathDiagnosticImpl.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use In directory servlets:/tmp/cvs-serv17583/util/class-use    Added Files: AbstractXPathCompiled.html XPathDiagnosticImpl.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractXPathCompiled.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use/AbstractXPathCompiled.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathDiagnosticImpl.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use/XPathDiagnosticImpl.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use In directory servlets:/tmp/cvs-serv17583/class-use    Added Files: XPath.html XPathBuilder.html XPathDiagnostic.html XPathExpression.html XPathFactory.html XPathHelper.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: XPath.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPath.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPathBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathDiagnostic.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPathDiagnostic.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathExpression.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPathExpression.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPathFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathHelper.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use/XPathHelper.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/jaxen</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen In directory servlets:/tmp/cvs-serv17583/jaxen    Added Files: JDOMXPath.html JaxenXPathFactory.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: JDOMXPath.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/JDOMXPath.html,v    Existing Tags: No Tags Exist    =================================================================== File: JaxenXPathFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/JaxenXPathFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath In directory servlets:/tmp/cvs-serv17583    Added Files: XPath.html XPathBuilder.html XPathDiagnostic.html XPathExpression.html XPathFactory.html XPathHelper.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: XPath.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:44 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPath.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:44 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPathBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathDiagnostic.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:44 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPathDiagnostic.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathExpression.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:44 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPathExpression.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPathFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XPathHelper.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/XPathHelper.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:37 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use In directory servlets:/tmp/cvs-serv17545/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/util/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:22 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/class-use In directory servlets:/tmp/cvs-serv17479/class-use    Added Files: IteratorIterable.html NamespaceStack.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: IteratorIterable.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/class-use/IteratorIterable.html,v    Existing Tags: No Tags Exist    =================================================================== File: NamespaceStack.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/class-use/NamespaceStack.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/util</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:22 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/util In directory servlets:/tmp/cvs-serv17479    Added Files: IteratorIterable.html NamespaceStack.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: IteratorIterable.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/IteratorIterable.html,v    Existing Tags: No Tags Exist    =================================================================== File: NamespaceStack.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/NamespaceStack.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:51:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/util/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:51:12 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/class-use In directory servlets:/tmp/cvs-serv17437/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/util/class-use added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/transform/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:41 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use In directory servlets:/tmp/cvs-serv17358/class-use    Added Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: JDOMResult.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use/JDOMResult.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMSource.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use/JDOMSource.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformer.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use/XSLTransformer.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/transform</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:41 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform In directory servlets:/tmp/cvs-serv17358    Added Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: JDOMResult.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/JDOMResult.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMSource.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/JDOMSource.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformer.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/XSLTransformer.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:41 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/transform/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:33 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use In directory servlets:/tmp/cvs-serv17318/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/support</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:11 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support In directory servlets:/tmp/cvs-serv17120/support    Added Files: AbstractDOMOutputProcessor.html AbstractFormattedWalker.MultiText.html AbstractFormattedWalker.Trim.html AbstractFormattedWalker.html AbstractOutputProcessor.html AbstractSAXOutputProcessor.html AbstractStAXEventProcessor.html AbstractStAXStreamProcessor.html AbstractXMLOutputProcessor.html DOMOutputProcessor.html FormatStack.html SAXOutputProcessor.html SAXTarget.SAXLocator.html SAXTarget.html StAXEventProcessor.html StAXStreamProcessor.html Walker.html WalkerNORMALIZE.html WalkerPRESERVE.html WalkerTRIM.html WalkerTRIM_FULL_WHITE.html XMLOutputProcessor.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractDOMOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractDOMOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.MultiText.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractFormattedWalker.MultiText.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.Trim.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractFormattedWalker.Trim.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractFormattedWalker.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractSAXOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractSAXOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractStAXEventProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractStAXEventProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractStAXStreamProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractStAXStreamProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractXMLOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/AbstractXMLOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:09 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/DOMOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: FormatStack.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/FormatStack.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/SAXOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXTarget.SAXLocator.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/SAXTarget.SAXLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXTarget.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/SAXTarget.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/StAXEventProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/StAXStreamProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: Walker.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/Walker.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerNORMALIZE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/WalkerNORMALIZE.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerPRESERVE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/WalkerPRESERVE.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerTRIM.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/WalkerTRIM.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerTRIM_FULL_WHITE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/WalkerTRIM_FULL_WHITE.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/XMLOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/support/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:12 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use In directory servlets:/tmp/cvs-serv17120/support/class-use    Added Files: AbstractDOMOutputProcessor.html AbstractFormattedWalker.MultiText.html AbstractFormattedWalker.Trim.html AbstractFormattedWalker.html AbstractOutputProcessor.html AbstractSAXOutputProcessor.html AbstractStAXEventProcessor.html AbstractStAXStreamProcessor.html AbstractXMLOutputProcessor.html DOMOutputProcessor.html FormatStack.html SAXOutputProcessor.html SAXTarget.SAXLocator.html SAXTarget.html StAXEventProcessor.html StAXStreamProcessor.html Walker.html WalkerNORMALIZE.html WalkerPRESERVE.html WalkerTRIM.html WalkerTRIM_FULL_WHITE.html XMLOutputProcessor.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractDOMOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractDOMOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.MultiText.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractFormattedWalker.MultiText.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.Trim.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractFormattedWalker.Trim.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractFormattedWalker.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:10 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractFormattedWalker.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractSAXOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractSAXOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractStAXEventProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractStAXEventProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractStAXStreamProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractStAXStreamProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: AbstractXMLOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/AbstractXMLOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/DOMOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: FormatStack.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/FormatStack.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/SAXOutputProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXTarget.SAXLocator.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/SAXTarget.SAXLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXTarget.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/SAXTarget.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/StAXEventProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/StAXStreamProcessor.html,v    Existing Tags: No Tags Exist    =================================================================== File: Walker.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/Walker.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerNORMALIZE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/WalkerNORMALIZE.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerPRESERVE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/WalkerPRESERVE.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerTRIM.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/WalkerTRIM.html,v    Existing Tags: No Tags Exist    =================================================================== File: WalkerTRIM_FULL_WHITE.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/WalkerTRIM_FULL_WHITE.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputProcessor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use/XMLOutputProcessor.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:11 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use In directory servlets:/tmp/cvs-serv17120/class-use    Added Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html LineSeparator.html SAXOutputter.html StAXEventOutputter.html StAXStreamOutputter.html XMLOutputter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DOMOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/DOMOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: EscapeStrategy.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMLocator.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/JDOMLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: LineSeparator.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/LineSeparator.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/SAXOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/StAXEventOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/StAXStreamOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use/XMLOutputter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:11 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output In directory servlets:/tmp/cvs-serv17120    Added Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html LineSeparator.html SAXOutputter.html StAXEventOutputter.html StAXStreamOutputter.html XMLOutputter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DOMOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/DOMOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: EscapeStrategy.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMLocator.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/JDOMLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: LineSeparator.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/LineSeparator.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/SAXOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/StAXEventOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/StAXStreamOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/XMLOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:50:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:50:00 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use In directory servlets:/tmp/cvs-serv17082/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/located/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:49:37 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use In directory servlets:/tmp/cvs-serv17002/class-use    Added Files: Located.html LocatedCDATA.html LocatedComment.html LocatedDocType.html LocatedElement.html LocatedEntityRef.html LocatedJDOMFactory.html LocatedProcessingInstruction.html LocatedText.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: Located.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/Located.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedCDATA.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedCDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedComment.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedComment.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedDocType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedDocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedElement.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedElement.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedEntityRef.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedEntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedProcessingInstruction.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedText.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use/LocatedText.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/located</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:49:37 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/located In directory servlets:/tmp/cvs-serv17002    Added Files: Located.html LocatedCDATA.html LocatedComment.html LocatedDocType.html LocatedElement.html LocatedEntityRef.html LocatedJDOMFactory.html LocatedProcessingInstruction.html LocatedText.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: Located.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:36 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/Located.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedCDATA.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:36 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedCDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedComment.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedComment.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedDocType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedDocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedElement.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedElement.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedEntityRef.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedEntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedProcessingInstruction.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: LocatedText.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/LocatedText.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:37 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/located/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:49:24 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use In directory servlets:/tmp/cvs-serv16943/located/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/located/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/internal/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:49:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/class-use In directory servlets:/tmp/cvs-serv16874/class-use    Added Files: ArrayCopy.html ReflectionConstructor.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: ArrayCopy.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/class-use/ArrayCopy.html,v    Existing Tags: No Tags Exist    =================================================================== File: ReflectionConstructor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/class-use/ReflectionConstructor.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/internal</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:49:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal In directory servlets:/tmp/cvs-serv16874    Added Files: ArrayCopy.html ReflectionConstructor.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: ArrayCopy.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/ArrayCopy.html,v    Existing Tags: No Tags Exist    =================================================================== File: ReflectionConstructor.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/ReflectionConstructor.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:49:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/internal/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:48:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/class-use In directory servlets:/tmp/cvs-serv16834/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/xpath</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:17 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath In directory servlets:/tmp/cvs-serv16321/xpath    Removed Files: XPath.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file XPath.html		Status: Up-to-date    Working revision:	No entry for XPath.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/Attic/XPath.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/xpath/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:17 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/class-use In directory servlets:/tmp/cvs-serv16321/xpath/class-use    Removed Files: XPath.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file XPath.html		Status: Up-to-date    Working revision:	No entry for XPath.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/class-use/Attic/XPath.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/output/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:16 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use In directory servlets:/tmp/cvs-serv16321/output/class-use    Removed Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file DOMOutputter.html		Status: Up-to-date    Working revision:	No entry for DOMOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/DOMOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EscapeStrategy.html		Status: Up-to-date    Working revision:	No entry for EscapeStrategy.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.TextMode.html		Status: Up-to-date    Working revision:	No entry for Format.TextMode.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.html		Status: Up-to-date    Working revision:	No entry for Format.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMLocator.html		Status: Up-to-date    Working revision:	No entry for JDOMLocator.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/JDOMLocator.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXOutputter.html		Status: Up-to-date    Working revision:	No entry for SAXOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/SAXOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XMLOutputter.NamespaceStack.html		Status: Up-to-date    Working revision:	No entry for XMLOutputter.NamespaceStack.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/XMLOutputter.NamespaceStack.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XMLOutputter.html		Status: Up-to-date    Working revision:	No entry for XMLOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Attic/XMLOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/output</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:16 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/output In directory servlets:/tmp/cvs-serv16321/output    Removed Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file DOMOutputter.html		Status: Up-to-date    Working revision:	No entry for DOMOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/DOMOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EscapeStrategy.html		Status: Up-to-date    Working revision:	No entry for EscapeStrategy.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.TextMode.html		Status: Up-to-date    Working revision:	No entry for Format.TextMode.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.html		Status: Up-to-date    Working revision:	No entry for Format.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMLocator.html		Status: Up-to-date    Working revision:	No entry for JDOMLocator.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/JDOMLocator.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXOutputter.html		Status: Up-to-date    Working revision:	No entry for SAXOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/SAXOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XMLOutputter.NamespaceStack.html		Status: Up-to-date    Working revision:	No entry for XMLOutputter.NamespaceStack.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/XMLOutputter.NamespaceStack.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XMLOutputter.html		Status: Up-to-date    Working revision:	No entry for XMLOutputter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/XMLOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/input/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:16 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use In directory servlets:/tmp/cvs-serv16321/input/class-use    Removed Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file BuilderErrorHandler.html		Status: Up-to-date    Working revision:	No entry for BuilderErrorHandler.html Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/Attic/BuilderErrorHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: no file DOMBuilder.html		Status: Up-to-date    Working revision:	No entry for DOMBuilder.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/Attic/DOMBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMParseException.html		Status: Up-to-date    Working revision:	No entry for JDOMParseException.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/Attic/JDOMParseException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXBuilder.html		Status: Up-to-date    Working revision:	No entry for SAXBuilder.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/Attic/SAXBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file SAXHandler.html		Status: Up-to-date    Working revision:	No entry for SAXHandler.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/Attic/SAXHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/transform/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:16 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use In directory servlets:/tmp/cvs-serv16321/transform/class-use    Removed Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file JDOMResult.html		Status: Up-to-date    Working revision:	No entry for JDOMResult.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/Attic/JDOMResult.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file JDOMSource.html		Status: Up-to-date    Working revision:	No entry for JDOMSource.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/Attic/JDOMSource.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XSLTransformException.html		Status: Up-to-date    Working revision:	No entry for XSLTransformException.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/Attic/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XSLTransformer.html		Status: Up-to-date    Working revision:	No entry for XSLTransformer.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/Attic/XSLTransformer.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/transform</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:16 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/transform In directory servlets:/tmp/cvs-serv16321/transform    Removed Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file JDOMResult.html		Status: Up-to-date    Working revision:	No entry for JDOMResult.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/JDOMResult.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file JDOMSource.html		Status: Up-to-date    Working revision:	No entry for JDOMSource.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/JDOMSource.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XSLTransformException.html		Status: Up-to-date    Working revision:	No entry for XSLTransformException.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XSLTransformer.html		Status: Up-to-date    Working revision:	No entry for XSLTransformer.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/XSLTransformer.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/input</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:15 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/input In directory servlets:/tmp/cvs-serv16321/input    Removed Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file BuilderErrorHandler.html		Status: Up-to-date    Working revision:	No entry for BuilderErrorHandler.html Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/BuilderErrorHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: no file DOMBuilder.html		Status: Up-to-date    Working revision:	No entry for DOMBuilder.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/DOMBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMParseException.html		Status: Up-to-date    Working revision:	No entry for JDOMParseException.html Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/JDOMParseException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXBuilder.html		Status: Up-to-date    Working revision:	No entry for SAXBuilder.html Repository revision:	1.15 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/SAXBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.7)    =================================================================== File: no file SAXHandler.html		Status: Up-to-date    Working revision:	No entry for SAXHandler.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/SAXHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/filter/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:15 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use In directory servlets:/tmp/cvs-serv16321/filter/class-use    Removed Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file AbstractFilter.html		Status: Up-to-date    Working revision:	No entry for AbstractFilter.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/Attic/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ContentFilter.html		Status: Up-to-date    Working revision:	No entry for ContentFilter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/Attic/ContentFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file ElementFilter.html		Status: Up-to-date    Working revision:	No entry for ElementFilter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/Attic/ElementFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file Filter.html		Status: Up-to-date    Working revision:	No entry for Filter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/Attic/Filter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:15 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use In directory servlets:/tmp/cvs-serv16321/class-use    Removed Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file Attribute.html		Status: Up-to-date    Working revision:	No entry for Attribute.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Attribute.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file CDATA.html		Status: Up-to-date    Working revision:	No entry for CDATA.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/CDATA.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Comment.html		Status: Up-to-date    Working revision:	No entry for Comment.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Comment.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Content.html		Status: Up-to-date    Working revision:	No entry for Content.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DataConversionException.html		Status: Up-to-date    Working revision:	No entry for DataConversionException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/DataConversionException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file DefaultJDOMFactory.html		Status: Up-to-date    Working revision:	No entry for DefaultJDOMFactory.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DocType.html		Status: Up-to-date    Working revision:	No entry for DocType.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/DocType.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Document.html		Status: Up-to-date    Working revision:	No entry for Document.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Document.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Element.html		Status: Up-to-date    Working revision:	No entry for Element.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Element.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EntityRef.html		Status: Up-to-date    Working revision:	No entry for EntityRef.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/EntityRef.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file IllegalAddException.html		Status: Up-to-date    Working revision:	No entry for IllegalAddException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/IllegalAddException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalDataException.html		Status: Up-to-date    Working revision:	No entry for IllegalDataException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/IllegalDataException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalNameException.html		Status: Up-to-date    Working revision:	No entry for IllegalNameException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/IllegalNameException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalTargetException.html		Status: Up-to-date    Working revision:	No entry for IllegalTargetException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/IllegalTargetException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMException.html		Status: Up-to-date    Working revision:	No entry for JDOMException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/JDOMException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMFactory.html		Status: Up-to-date    Working revision:	No entry for JDOMFactory.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Namespace.html		Status: Up-to-date    Working revision:	No entry for Namespace.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Namespace.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Parent.html		Status: Up-to-date    Working revision:	No entry for Parent.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ProcessingInstruction.html		Status: Up-to-date    Working revision:	No entry for ProcessingInstruction.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/ProcessingInstruction.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Text.html		Status: Up-to-date    Working revision:	No entry for Text.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Text.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file UncheckedJDOMFactory.html		Status: Up-to-date    Working revision:	No entry for UncheckedJDOMFactory.html Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Verifier.html		Status: Up-to-date    Working revision:	No entry for Verifier.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attic/Verifier.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/filter</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:15 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/filter In directory servlets:/tmp/cvs-serv16321/filter    Removed Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file AbstractFilter.html		Status: Up-to-date    Working revision:	No entry for AbstractFilter.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ContentFilter.html		Status: Up-to-date    Working revision:	No entry for ContentFilter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/ContentFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file ElementFilter.html		Status: Up-to-date    Working revision:	No entry for ElementFilter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/ElementFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file Filter.html		Status: Up-to-date    Working revision:	No entry for Filter.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/Filter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:14 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom In directory servlets:/tmp/cvs-serv16321    Removed Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file Attribute.html		Status: Up-to-date    Working revision:	No entry for Attribute.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Attribute.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file CDATA.html		Status: Up-to-date    Working revision:	No entry for CDATA.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/CDATA.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Comment.html		Status: Up-to-date    Working revision:	No entry for Comment.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Comment.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Content.html		Status: Up-to-date    Working revision:	No entry for Content.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DataConversionException.html		Status: Up-to-date    Working revision:	No entry for DataConversionException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/DataConversionException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file DefaultJDOMFactory.html		Status: Up-to-date    Working revision:	No entry for DefaultJDOMFactory.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DocType.html		Status: Up-to-date    Working revision:	No entry for DocType.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/DocType.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Document.html		Status: Up-to-date    Working revision:	No entry for Document.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Document.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Element.html		Status: Up-to-date    Working revision:	No entry for Element.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Element.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EntityRef.html		Status: Up-to-date    Working revision:	No entry for EntityRef.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/EntityRef.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file IllegalAddException.html		Status: Up-to-date    Working revision:	No entry for IllegalAddException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/IllegalAddException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalDataException.html		Status: Up-to-date    Working revision:	No entry for IllegalDataException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/IllegalDataException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalNameException.html		Status: Up-to-date    Working revision:	No entry for IllegalNameException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/IllegalNameException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalTargetException.html		Status: Up-to-date    Working revision:	No entry for IllegalTargetException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/IllegalTargetException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMException.html		Status: Up-to-date    Working revision:	No entry for JDOMException.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/JDOMException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMFactory.html		Status: Up-to-date    Working revision:	No entry for JDOMFactory.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Namespace.html		Status: Up-to-date    Working revision:	No entry for Namespace.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Namespace.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Parent.html		Status: Up-to-date    Working revision:	No entry for Parent.html Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ProcessingInstruction.html		Status: Up-to-date    Working revision:	No entry for ProcessingInstruction.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/ProcessingInstruction.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Text.html		Status: Up-to-date    Working revision:	No entry for Text.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Text.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file UncheckedJDOMFactory.html		Status: Up-to-date    Working revision:	No entry for UncheckedJDOMFactory.html Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Verifier.html		Status: Up-to-date    Working revision:	No entry for Verifier.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/Verifier.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/adapters</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:14 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters In directory servlets:/tmp/cvs-serv16321/adapters    Removed Files: CrimsonDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file CrimsonDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for CrimsonDOMAdapter.html Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/CrimsonDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: no file DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JAXPDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for JAXPDOMAdapter.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/JAXPDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file OracleV1DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for OracleV1DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/OracleV1DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file OracleV2DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for OracleV2DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/OracleV2DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XML4JDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for XML4JDOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/XML4JDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XercesDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for XercesDOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/XercesDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-frame.html		Status: Up-to-date    Working revision:	No entry for package-frame.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-summary.html		Status: Up-to-date    Working revision:	No entry for package-summary.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-tree.html		Status: Up-to-date    Working revision:	No entry for package-tree.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file package-use.html		Status: Up-to-date    Working revision:	No entry for package-use.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/Attic/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/adapters/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:47:14 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use In directory servlets:/tmp/cvs-serv16321/adapters/class-use    Removed Files: DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: no file DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JAXPDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for JAXPDOMAdapter.html Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/JAXPDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file OracleV1DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for OracleV1DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/OracleV1DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file OracleV2DOMAdapter.html		Status: Up-to-date    Working revision:	No entry for OracleV2DOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/OracleV2DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XML4JDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for XML4JDOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/XML4JDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XercesDOMAdapter.html		Status: Up-to-date    Working revision:	No entry for XercesDOMAdapter.html Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/Attic/XercesDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/stax</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax In directory servlets:/tmp/cvs-serv15778/stax    Added Files: DTDParser.html DefaultStAXFilter.html StAXFilter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DTDParser.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/DTDParser.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultStAXFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/DefaultStAXFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXFilter.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/StAXFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use In directory servlets:/tmp/cvs-serv15778/class-use    Added Files: DOMBuilder.html JDOMParseException.html SAXBuilder.html StAXEventBuilder.html StAXStreamBuilder.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DOMBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use/DOMBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMParseException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use/JDOMParseException.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use/SAXBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use/StAXEventBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/class-use/StAXStreamBuilder.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/stax/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use In directory servlets:/tmp/cvs-serv15778/stax/class-use    Added Files: DTDParser.html DefaultStAXFilter.html StAXFilter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DTDParser.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use/DTDParser.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultStAXFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use/DefaultStAXFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXFilter.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:21 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use/StAXFilter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/sax</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax In directory servlets:/tmp/cvs-serv15778/sax    Added Files: BuilderErrorHandler.html DefaultSAXHandlerFactory.html SAXBuilderEngine.html SAXEngine.html SAXHandler.html SAXHandlerFactory.html XMLReaderJDOMFactory.html XMLReaderSAX2Factory.html XMLReaderSchemaFactory.html XMLReaderXSDFactory.html XMLReaders.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: BuilderErrorHandler.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/BuilderErrorHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultSAXHandlerFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/DefaultSAXHandlerFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXBuilderEngine.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/SAXBuilderEngine.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXEngine.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/SAXEngine.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXHandler.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/SAXHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXHandlerFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/SAXHandlerFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/XMLReaderJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderSAX2Factory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/XMLReaderSAX2Factory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderSchemaFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/XMLReaderSchemaFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderXSDFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/XMLReaderXSDFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaders.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/XMLReaders.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/sax/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use In directory servlets:/tmp/cvs-serv15778/sax/class-use    Added Files: BuilderErrorHandler.html DefaultSAXHandlerFactory.html SAXBuilderEngine.html SAXEngine.html SAXHandler.html SAXHandlerFactory.html XMLReaderJDOMFactory.html XMLReaderSAX2Factory.html XMLReaderSchemaFactory.html XMLReaderXSDFactory.html XMLReaders.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: BuilderErrorHandler.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/BuilderErrorHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultSAXHandlerFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/DefaultSAXHandlerFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXBuilderEngine.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/SAXBuilderEngine.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXEngine.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/SAXEngine.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXHandler.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/SAXHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXHandlerFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/SAXHandlerFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/XMLReaderJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderSAX2Factory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/XMLReaderSAX2Factory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderSchemaFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/XMLReaderSchemaFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaderXSDFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/XMLReaderXSDFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLReaders.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:20 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use/XMLReaders.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:21 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input In directory servlets:/tmp/cvs-serv15778    Added Files: DOMBuilder.html JDOMParseException.html SAXBuilder.html StAXEventBuilder.html StAXStreamBuilder.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: DOMBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/DOMBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMParseException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/JDOMParseException.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/SAXBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXEventBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/StAXEventBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: StAXStreamBuilder.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/StAXStreamBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/filter/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:08 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use In directory servlets:/tmp/cvs-serv15702/class-use    Added Files: AbstractFilter.html AttributeFilter.html ContentFilter.html ElementFilter.html Filter.html Filters.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: AttributeFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/AttributeFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ContentFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/ContentFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ElementFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/ElementFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: Filter.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/Filter.html,v    Existing Tags: No Tags Exist    =================================================================== File: Filters.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:08 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use/Filters.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/filter</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:08 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter In directory servlets:/tmp/cvs-serv15702    Added Files: AbstractFilter.html AttributeFilter.html ContentFilter.html ElementFilter.html Filter.html Filters.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: AttributeFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/AttributeFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ContentFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/ContentFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ElementFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/ElementFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: Filter.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/Filter.html,v    Existing Tags: No Tags Exist    =================================================================== File: Filters.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/Filters.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:07 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:45:04 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use In directory servlets:/tmp/cvs-serv15646    Added Files: Attribute.html AttributeType.html CDATA.html Comment.html Content.CType.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMConstants.html JDOMException.html JDOMFactory.html Namespace.html NamespaceAware.html Parent.html ProcessingInstruction.html SlimJDOMFactory.html Text.html UncheckedJDOMFactory.html Verifier.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: Attribute.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Attribute.html,v    Existing Tags: No Tags Exist    =================================================================== File: AttributeType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/AttributeType.html,v    Existing Tags: No Tags Exist    =================================================================== File: CDATA.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/CDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: Comment.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Comment.html,v    Existing Tags: No Tags Exist    =================================================================== File: Content.CType.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Content.CType.html,v    Existing Tags: No Tags Exist    =================================================================== File: Content.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:02 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: DataConversionException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/DataConversionException.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: DocType.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/DocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: Document.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Document.html,v    Existing Tags: No Tags Exist    =================================================================== File: Element.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Element.html,v    Existing Tags: No Tags Exist    =================================================================== File: EntityRef.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/EntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalAddException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/IllegalAddException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalDataException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/IllegalDataException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalNameException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/IllegalNameException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalTargetException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/IllegalTargetException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMConstants.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:03 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/JDOMConstants.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/JDOMException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMFactory.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Namespace.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Namespace.html,v    Existing Tags: No Tags Exist    =================================================================== File: NamespaceAware.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/NamespaceAware.html,v    Existing Tags: No Tags Exist    =================================================================== File: Parent.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: ProcessingInstruction.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/ProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: SlimJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/SlimJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Text.html        	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Text.html,v    Existing Tags: No Tags Exist    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Verifier.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:45:04 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use/Verifier.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/adapters</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:44:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters In directory servlets:/tmp/cvs-serv15583    Added Files: AbstractDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/AbstractDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMAdapter.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: JAXPDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/JAXPDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/adapters/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:44:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use In directory servlets:/tmp/cvs-serv15583/class-use    Added Files: AbstractDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: AbstractDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use/AbstractDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMAdapter.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use/DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: JAXPDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:44:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use/JAXPDOMAdapter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/news</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:43:48 PDT Author:    Update of /home/cvs/jdom-site/news In directory servlets:/tmp/cvs-serv15519    Modified Files: index.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.32	Sun Apr  8 23:43:48 2012 Repository revision:	1.32	/home/cvs/jdom-site/news/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.17)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/downloads</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:43:35 PDT Author:    Update of /home/cvs/jdom-site/downloads In directory servlets:/tmp/cvs-serv15482    Modified Files: index.html source.html Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.20	Sun Apr  8 23:43:35 2012 Repository revision:	1.20	/home/cvs/jdom-site/downloads/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.10)    =================================================================== File: source.html      	Status: Up-to-date    Working revision:	1.24	Sun Apr  8 23:43:35 2012 Repository revision:	1.24	/home/cvs/jdom-site/downloads/source.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.13)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:43:29 PDT Author:    Update of /home/cvs/jdom-site/dist/binary In directory servlets:/tmp/cvs-serv15432/binary    Added Files: jdom-2.0.0.zip Log Message: Pushing the JDOM 2.0.0 site into CVS =================================================================== File: jdom-2.0.0.zip   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 23:43:29 2012 Repository revision:	1.1	/home/cvs/jdom-site/dist/binary/jdom-2.0.0.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:18:04 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use In directory servlets:/tmp/cvs-serv14363/util/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:18:04 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use In directory servlets:/tmp/cvs-serv14363/jaxen/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/util</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util In directory servlets:/tmp/cvs-serv14288/util    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/util added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath/jaxen</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen In directory servlets:/tmp/cvs-serv14288/jaxen    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath/jaxen added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/support/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:42 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use In directory servlets:/tmp/cvs-serv14230/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support/class-use &lt;br/&gt; added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output/support</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:36 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support In directory servlets:/tmp/cvs-serv14189/support    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/output/support added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/sax/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:14 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use In directory servlets:/tmp/cvs-serv14126/sax/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/stax/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:17:00 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use In directory servlets:/tmp/cvs-serv14081/stax/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/stax</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:16:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax In directory servlets:/tmp/cvs-serv14020/stax    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/stax added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input/sax</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:16:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax In directory servlets:/tmp/cvs-serv14020/sax    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/input/sax added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/adapters/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use In directory servlets:/tmp/cvs-serv12077/adapters/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/filter/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:52 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use In directory servlets:/tmp/cvs-serv12077/filter/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/located</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/located In directory servlets:/tmp/cvs-serv11809/located    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/located added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/output</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/output In directory servlets:/tmp/cvs-serv11809/output    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/output added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/transform</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform In directory servlets:/tmp/cvs-serv11809/transform    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/transform added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/xpath</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath In directory servlets:/tmp/cvs-serv11809/xpath    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/xpath added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/util</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:46 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/util In directory servlets:/tmp/cvs-serv11809/util    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/util added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use In directory servlets:/tmp/cvs-serv11809/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/class-use added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/internal</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal In directory servlets:/tmp/cvs-serv11809/internal    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/internal added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/filter</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter In directory servlets:/tmp/cvs-serv11809/filter    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/filter added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/input</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/input In directory servlets:/tmp/cvs-serv11809/input    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/input added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2/adapters</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:45 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters In directory servlets:/tmp/cvs-serv11809/adapters    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2/adapters added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom2</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @16:03:23 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom2 In directory servlets:/tmp/cvs-serv11765/jdom2    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/org/jdom2 added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/resources</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:02 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/resources In directory servlets:/tmp/cvs-serv8731/resources    Added Files: inherit.gif Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: inherit.gif      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/resources/inherit.gif,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/xpath/class-use    Added Files: XPath.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: XPath.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use/XPath.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/transform</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform In directory servlets:/tmp/cvs-serv8731/org/jdom/transform    Added Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file JDOMResult.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/JDOMResult.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMSource.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/JDOMSource.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XSLTransformException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XSLTransformer.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/XSLTransformer.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/output</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output In directory servlets:/tmp/cvs-serv8731/org/jdom/output    Added Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file DOMOutputter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/DOMOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file EscapeStrategy.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMLocator.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/JDOMLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file SAXOutputter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/SAXOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputter.NamespaceStack.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/XMLOutputter.NamespaceStack.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XMLOutputter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/XMLOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/output/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/output/class-use    Added Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: DOMOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/DOMOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: EscapeStrategy.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMLocator.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/JDOMLocator.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/SAXOutputter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputter.NamespaceStack.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/XMLOutputter.NamespaceStack.html,v    Existing Tags: No Tags Exist    =================================================================== File: XMLOutputter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use/XMLOutputter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/input/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/input/class-use    Added Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: BuilderErrorHandler.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use/BuilderErrorHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use/DOMBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMParseException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use/JDOMParseException.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXBuilder.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use/SAXBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: SAXHandler.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use/SAXHandler.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/transform/class-use    Added Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: JDOMResult.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use/JDOMResult.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMSource.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use/JDOMSource.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformer.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use/XSLTransformer.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/xpath</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:01 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath In directory servlets:/tmp/cvs-serv8731/org/jdom/xpath    Added Files: XPath.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file XPath.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:01 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/XPath.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:58 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/class-use    Added Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: Attribute.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Attribute.html,v    Existing Tags: No Tags Exist    =================================================================== File: CDATA.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/CDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: Comment.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Comment.html,v    Existing Tags: No Tags Exist    =================================================================== File: Content.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: DataConversionException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/DataConversionException.html,v    Existing Tags: No Tags Exist    =================================================================== File: DefaultJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: DocType.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/DocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: Document.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Document.html,v    Existing Tags: No Tags Exist    =================================================================== File: Element.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Element.html,v    Existing Tags: No Tags Exist    =================================================================== File: EntityRef.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/EntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalAddException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/IllegalAddException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalDataException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/IllegalDataException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalNameException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/IllegalNameException.html,v    Existing Tags: No Tags Exist    =================================================================== File: IllegalTargetException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/IllegalTargetException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMException.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/JDOMException.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMFactory.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Namespace.html   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Namespace.html,v    Existing Tags: No Tags Exist    =================================================================== File: Parent.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: ProcessingInstruction.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/ProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: Text.html        	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Text.html,v    Existing Tags: No Tags Exist    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Verifier.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use/Verifier.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/input</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:00 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input In directory servlets:/tmp/cvs-serv8731/org/jdom/input    Added Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file BuilderErrorHandler.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/BuilderErrorHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DOMBuilder.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/DOMBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMParseException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/JDOMParseException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file SAXBuilder.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/SAXBuilder.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file SAXHandler.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/SAXHandler.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:57 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/filter</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:00 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter In directory servlets:/tmp/cvs-serv8731/org/jdom/filter    Added Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file AbstractFilter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ContentFilter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/ContentFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ElementFilter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/ElementFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Filter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:48:00 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/Filter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:48:00 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/filter/class-use    Added Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: AbstractFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ContentFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use/ContentFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ElementFilter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use/ElementFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: Filter.html      	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use/Filter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom In directory servlets:/tmp/cvs-serv8731/org/jdom    Added Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file Attribute.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Attribute.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file CDATA.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/CDATA.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Comment.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Comment.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Content.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DataConversionException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/DataConversionException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DefaultJDOMFactory.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DocType.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/DocType.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Document.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Document.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Element.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Element.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file EntityRef.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/EntityRef.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file IllegalAddException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/IllegalAddException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file IllegalDataException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/IllegalDataException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file IllegalNameException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/IllegalNameException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file IllegalTargetException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/IllegalTargetException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMException.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/JDOMException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMFactory.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Namespace.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Namespace.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Parent.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ProcessingInstruction.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/ProcessingInstruction.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Text.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Text.html,v    Existing Tags: No Tags Exist    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:54 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Verifier.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/Verifier.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:54 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:54 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:54 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:54 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1 In directory servlets:/tmp/cvs-serv8731    Added Files: allclasses-frame.html allclasses-noframe.html constant-values.html deprecated-list.html help-doc.html index.html overview-frame.html overview-summary.html overview-tree.html package-list packages.html serialized-form.html stylesheet.css Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: allclasses-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/allclasses-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: allclasses-noframe.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/allclasses-noframe.html,v    Existing Tags: No Tags Exist    =================================================================== File: constant-values.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/constant-values.html,v    Existing Tags: No Tags Exist    =================================================================== File: deprecated-list.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/deprecated-list.html,v    Existing Tags: No Tags Exist    =================================================================== File: help-doc.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1	/home/cvs/jdom-site/docs/apidocs/1.1/help-doc.html,v    Existing Tags: No Tags Exist    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1	/home/cvs/jdom-site/docs/apidocs/1.1/index.html,v    Existing Tags: No Tags Exist    =================================================================== File: overview-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/overview-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: overview-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/overview-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: overview-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/overview-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-list     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1	/home/cvs/jdom-site/docs/apidocs/1.1/package-list,v    Existing Tags: No Tags Exist    =================================================================== File: packages.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1	/home/cvs/jdom-site/docs/apidocs/1.1/packages.html,v    Existing Tags: No Tags Exist    =================================================================== File: serialized-form.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/serialized-form.html,v    Existing Tags: No Tags Exist    =================================================================== File: stylesheet.css   	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/stylesheet.css,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/adapters</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters In directory servlets:/tmp/cvs-serv8731/org/jdom/adapters    Added Files: AbstractDOMAdapter.html CrimsonDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: no file AbstractDOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/AbstractDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file CrimsonDOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/CrimsonDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JAXPDOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/JAXPDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file OracleV1DOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/OracleV1DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file OracleV2DOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/OracleV2DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XML4JDOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/XML4JDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XercesDOMAdapter.html		Status: Needs Checkout    Working revision:	1.1	Sun Apr  8 22:47:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/XercesDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/package-frame.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/package-summary.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/package-tree.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/package-use.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/index-files</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/index-files In directory servlets:/tmp/cvs-serv8731/index-files    Added Files: index-1.html index-10.html index-11.html index-12.html index-13.html index-14.html index-15.html index-16.html index-17.html index-18.html index-19.html index-2.html index-20.html index-21.html index-3.html index-4.html index-5.html index-6.html index-7.html index-8.html index-9.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: index-1.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-1.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-10.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-10.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-11.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-11.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-12.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-12.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-13.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-13.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-14.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-14.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-15.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-15.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-16.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-16.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-17.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-17.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-18.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-18.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-19.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-19.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-2.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-2.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-20.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-20.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-21.html    	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-21.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-3.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-3.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-4.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-4.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-5.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-5.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-6.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-6.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-7.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-7.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-8.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-8.html,v    Existing Tags: No Tags Exist    =================================================================== File: index-9.html     	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:52 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/index-files/index-9.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:47:59 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use In directory servlets:/tmp/cvs-serv8731/org/jdom/adapters/class-use    Added Files: AbstractDOMAdapter.html CrimsonDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html Log Message: Keeping the 1.1 Javadocs in their own branch. =================================================================== File: AbstractDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/AbstractDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: CrimsonDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/CrimsonDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: DOMAdapter.html  	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: JAXPDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/JAXPDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: OracleV1DOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/OracleV1DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: OracleV2DOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/OracleV2DOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XML4JDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/XML4JDOMAdapter.html,v    Existing Tags: No Tags Exist    =================================================================== File: XercesDOMAdapter.html	Status: Up-to-date    Working revision:	1.1	Sun Apr  8 22:47:55 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use/XercesDOMAdapter.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/output/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:32 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/output/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:32 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/xpath/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:32 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/transform/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform/class-use &lt;br/&gt; added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:31 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/filter/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:31 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/adapters/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters/class-use added &lt;br/&gt; to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/input/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:31 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use In directory servlets:/tmp/cvs-serv7864/1.1/org/jdom/input/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input/class-use added to &lt;br/&gt; the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/xpath</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:28 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/xpath    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/xpath added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/filter</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/filter    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/filter added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/input</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/input    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/input added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/adapters</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/adapters    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/adapters added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/output</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/output    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/output added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/transform</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/transform    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/transform added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom/class-use</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:27 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use In directory servlets:/tmp/cvs-serv7674/1.1/org/jdom/class-use    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom/class-use added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org/jdom</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:13 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom In directory servlets:/tmp/cvs-serv7641/1.1/org/jdom    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org/jdom added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/org</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:02 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/org In directory servlets:/tmp/cvs-serv7557/1.1/org    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/org added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/resources</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:02 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/resources In directory servlets:/tmp/cvs-serv7557/1.1/resources    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/resources added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1/index-files</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:39:02 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1/index-files In directory servlets:/tmp/cvs-serv7557/1.1/index-files    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1/index-files added to the &lt;br/&gt; repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/1.1</header>
    <body>**************************************** Date:   Sun Apr  8, 2012 @15:38:44 PDT Author:    Update of /home/cvs/jdom-site/docs/apidocs/1.1 In directory servlets:/tmp/cvs-serv7525/1.1    Log Message: Directory /home/cvs/jdom-site/docs/apidocs/1.1 added to the repository    =================================================================== File: no file -		Status: Unknown    Working revision:	No entry for - Repository revision:	No revision control file    =================================================================== File: no file New		Status: Unknown    Working revision:	No entry for New Repository revision:	No revision control file    =================================================================== File: no file directory		Status: Unknown    Working revision:	No entry for directory Repository revision:	No revision control file</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Empty File</header>
    <body>Hi Bashiro    Interesting question, and I can understand why you would ask, but, technically, no. JDOM itself does not read the file. It passes it directly to the configured XML Parser (Typically the SAX Parser).    In many instances, JDOM does not even know it is reading a file... it is often converted to a URL before JDOM is aware of its source.    It would not be possible to have a consistent way to check the 'input'.    Further, there is no consistent way to produce errors. In your case you would possibly want an empty Document returned from the parse, but most people would want an Exception.    So, the logical answer is no. If you know you are parsing a file, it would be easy for you to check the File.length() before parsing. If it is not a file source, there is no way for JDOM to intercept the stream before the SAX parser, so no, it cannot be done.    Out of interest, I tried it to see what JDOM does, and, for any file with any amount of plain white-space (newlines, spaces, etc.) it all produces the same Exception:    Exception in thread "main" org.jdom2.input.JDOMParseException: Error on line -1: Premature end of file. at org.jdom2.input.sax.SAXBuilderEngine.build(SAXBuilderEngine.java:232) at org.jdom2.input.sax.SAXBuilderEngine.build(SAXBuilderEngine.java:277) at org.jdom2.input.sax.SAXBuilderEngine.build(SAXBuilderEngine.java:264) at org.jdom2.input.SAXBuilder.build(SAXBuilder.java:1116) at net.tuis.debug.EMptyFile.main(EMptyFile.java:15) Caused by: org.xml.sax.SAXParseException: Premature end of file. at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source) at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)    If you consistently use Xerces, you may be able to trap the JDOMException, and check to see whether the SAXException error is on line -1... which appears, at least in my experimenting, to indicate whether the file has white-space-only content.    Thus, you may be able to trap the empty-source problem after the fact.    Rolf    On 07/04/2012 8:07 PM, Bashiro wrote:   &lt;div class="quote quote-1"&gt;  Hello Folks,    I wonder if Jdom can check a file is empty before attempting to read ?</body>
  </mail>
  <mail>
    <header>[jdom-interest] Empty File</header>
    <body>Hello Folks,     I wonder if Jdom can check a file is empty before attempting to read ?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Hi again Gisella.    I think your examples are great, in the sense that they perfectly illustrate the inconsistencies. On the other hand, they do not help solve the problem of which one is right or wrong. It does make me want to make sure that new Element(String, null) throws NPE though!    Currently the Attribute handling is 'consistent'... get, remove, set all throw NPE for null Namespace.    I can't think of a nice way to put it, but the easiest thing to do would be to change your code to use a conditional: emt.setAttribute(String, String,    That's for 1.1.3 at least.    I still think that maybe I could change the logic on JDOM 2.0.0...    For all the get/set/remove Attribute I can maybe put the if-logic in.    Yes, I have played with it, and it's a reasonable thing to do for 2.0.0. It is also consistent with 'new Attribute(String, String, null).    On the whole, I would agree with you, it should not throw NPE, and get and remove should not throw NPE either.    I just changed to code to 'work', and, surprisingly, all the tests pass.    That's the wonders of wvwn with 100% code coverage you still miss some things.    Maybe that will inspire you to try JDOM 2.0.0 ;-)    Rolf    On 06/04/2012 8:28 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  I see the inconsistencies I would say that when removing the nullpointerexception is OK. But when &lt;br/&gt; creating, you can see for example new Element(string name) new Element (String name, null) both set the value of Namespace to NO_NAMESPACE. And Element.setAttribute(final String name, final String value) does not throw a &lt;br/&gt; NPE but Element.setAttribute(final String name, final String value, null)  does.   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 4:39 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella    Yes, I can see now where the change is. It happened between JDOM 1.0 and 1.1, back in 2006 ...  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139 &lt;/a&gt;   In fact, this issue has been reported before:  &lt;a class="exlink mklink" href="http://markmail.org/message/atybnwqqvlxk7ut4" rel="nofollow"&gt; http://markmail.org/message/atybnwqqvlxk7ut4 &lt;/a&gt; and there was never any follow-up...    So, I can see the problem, and it still exists in JDOM 2.x.    But, I can't see an easy fix.    I am of the opinion that null input values deserve a NullPointerException unless documented that nulls are allowed... but I also recognize that compatibility is important, and JDOM has some consistency in it when treating null Namespace values as Namespace.NO_NAMESPACE.    So, I am going to think about it for a moment.... but, I would not expect a fix in the short term for JDOM 1.x. Even in the best circumstances it would take a month or so to get a 1.1.4 out...    For JDOM 2.x, it is also very late in the game.... too late, in fact.    In order to fix it properly I would have to decide on a strategy for dealing with null Namespace input. A quick 'poll' of the JDOM 2.x code suggests:    Change null to NO_NAMESPACE:    ---------------------------- Element Constructor. Element.setNamespace(Namespace)    Treats null as 'wildcard':    -------------------------- Element.getChild(String,Namespace) Element.getChildren(String,Namespace) Element.getChildText*(String,Namespace) Element.removeChild(String,Namespace) Element.removeChildren(String,Namespace)    Just ignores it.    ---------------- Element.removeNamespaceDeclaration(Namespace)    Throws NPE:    ----------- Element.addNamespaceDeclaration(Namespace) Element.getAttribute(String,Namespace) Element.setAttribute(String,String,Namespace)    I think, having looked at the 'poll' results, when it comes to Attributes, the NPE is the 'right' thing.    Given that getAttribute(String,Namespace) throws NPE (and removeAttribute), and they have 'always' thrown NPE, I think it is logical that setAttribute(String,String,Namespace) throws NPE too.    Bottom line is that I am not convinced that it is a bug in 1.1.3. Perhaps it was a bug in 1.0 to allow the null.    So, this all comes around to the 'push-back' option. How difficult is it for you to do the null-check yourself before you call setAttribute()?    That is the obvious workaround, and it is the 'right thing'....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>I see the inconsistencies I would say that when removing the nullpointerexception is OK. But when &lt;br/&gt; creating, you can see for example new Element(string name) new Element (String name, null) both set the value of Namespace to NO_NAMESPACE. And Element.setAttribute(final String name, final String value) does not throw a &lt;br/&gt; NPE but Element.setAttribute(final String name, final String value, null)  does.   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 4:39 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella    Yes, I can see now where the change is. It happened between JDOM 1.0 and 1.1, back in 2006 ...  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139 &lt;/a&gt;   In fact, this issue has been reported before:  &lt;a class="exlink mklink" href="http://markmail.org/message/atybnwqqvlxk7ut4" rel="nofollow"&gt; http://markmail.org/message/atybnwqqvlxk7ut4 &lt;/a&gt; and there was never any follow-up...    So, I can see the problem, and it still exists in JDOM 2.x.    But, I can't see an easy fix.    I am of the opinion that null input values deserve a NullPointerException unless documented that nulls are allowed... but I also recognize that compatibility is important, and JDOM has some consistency in it when treating null Namespace values as Namespace.NO_NAMESPACE.    So, I am going to think about it for a moment.... but, I would not expect a fix in the short term for JDOM 1.x. Even in the best circumstances it would take a month or so to get a 1.1.4 out...    For JDOM 2.x, it is also very late in the game.... too late, in fact.    In order to fix it properly I would have to decide on a strategy for dealing with null Namespace input. A quick 'poll' of the JDOM 2.x code suggests:    Change null to NO_NAMESPACE:    ---------------------------- Element Constructor. Element.setNamespace(Namespace)    Treats null as 'wildcard':    -------------------------- Element.getChild(String,Namespace) Element.getChildren(String,Namespace) Element.getChildText*(String,Namespace) Element.removeChild(String,Namespace) Element.removeChildren(String,Namespace)    Just ignores it.    ---------------- Element.removeNamespaceDeclaration(Namespace)    Throws NPE:    ----------- Element.addNamespaceDeclaration(Namespace) Element.getAttribute(String,Namespace) Element.setAttribute(String,String,Namespace)    I think, having looked at the 'poll' results, when it comes to Attributes, the NPE is the 'right' thing.    Given that getAttribute(String,Namespace) throws NPE (and removeAttribute), and they have 'always' thrown NPE, I think it is logical that setAttribute(String,String,Namespace) throws NPE too.    Bottom line is that I am not convinced that it is a bug in 1.1.3. Perhaps it was a bug in 1.0 to allow the null.    So, this all comes around to the 'push-back' option. How difficult is it for you to do the null-check yourself before you call setAttribute()?    That is the obvious workaround, and it is the 'right thing'....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Hi Gisella    Yes, I can see now where the change is. It happened between JDOM 1.0 and 1.1, back in 2006 ...  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/b48373d95cd91986f83ac5345566258d80e88027#L0R1139 &lt;/a&gt;   In fact, this issue has been reported before:  &lt;a class="exlink mklink" href="http://markmail.org/message/atybnwqqvlxk7ut4" rel="nofollow"&gt; http://markmail.org/message/atybnwqqvlxk7ut4 &lt;/a&gt; and there was never any follow-up...    So, I can see the problem, and it still exists in JDOM 2.x.    But, I can't see an easy fix.    I am of the opinion that null input values deserve a NullPointerException unless documented that nulls are allowed... but I also recognize that compatibility is important, and JDOM has some consistency in it when treating null Namespace values as Namespace.NO_NAMESPACE.    So, I am going to think about it for a moment.... but, I would not expect a fix in the short term for JDOM 1.x. Even in the best circumstances it would take a month or so to get a 1.1.4 out...    For JDOM 2.x, it is also very late in the game.... too late, in fact.    In order to fix it properly I would have to decide on a strategy for dealing with null Namespace input. A quick 'poll' of the JDOM 2.x code suggests:    Change null to NO_NAMESPACE:    ---------------------------- Element Constructor. Element.setNamespace(Namespace)    Treats null as 'wildcard':    -------------------------- Element.getChild(String,Namespace) Element.getChildren(String,Namespace) Element.getChildText*(String,Namespace) Element.removeChild(String,Namespace) Element.removeChildren(String,Namespace)    Just ignores it.    ---------------- Element.removeNamespaceDeclaration(Namespace)    Throws NPE:    ----------- Element.addNamespaceDeclaration(Namespace) Element.getAttribute(String,Namespace) Element.setAttribute(String,String,Namespace)    I think, having looked at the 'poll' results, when it comes to Attributes, the NPE is the 'right' thing.    Given that getAttribute(String,Namespace) throws NPE (and removeAttribute), and they have 'always' thrown NPE, I think it is logical that setAttribute(String,String,Namespace) throws NPE too.    Bottom line is that I am not convinced that it is a bug in 1.1.3. Perhaps it was a bug in 1.0 to allow the null.    So, this all comes around to the 'push-back' option. How difficult is it for you to do the null-check yourself before you call setAttribute()?    That is the obvious workaround, and it is the 'right thing'....    Rolf    On 06/04/2012 5:53 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  the stack trace belongs to JDOM 1.1.3   &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Saavedra Gisella Sent: Friday, April 06, 2012 2:49 PM To: 'Rolf Lear' Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: RE: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Rolf,    I believe you might be looking at the wrong method:    This is JDOM 1.0  (ns is passed as null)       Inside this code, the constructor new Attribute(name, value, ns) calls:       Here setNamespace(namespace) calls:    // Verify the attribute isn't trying to be in a default namespace // Attributes can't be in a default namespace throw new IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the " +    where namespace being null is set to NO_NAMESPACE.    Stack trace (JODM 1.1.3):    java.lang.NullPointerException at org.jdom.AttributeList.indexOf(AttributeList.java:378) at org.jdom.AttributeList.get(AttributeList.java:366) at org.jdom.Element.getAttribute(Element.java:1004) at org.jdom.Element.setAttribute(Element.java:1178) at &lt;br/&gt; com.navis.argo.business.snx.AbstractXmlExporter.setAttribute(AbstractXmlExporter.java:40)   &lt;div class="footer noise"&gt;  --------------   &lt;/div&gt; &lt;div class="quote quote-3"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 2:40 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;   Here's the attributes.get(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;   And that calls the indexOf(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Ahh, you are right, in your sibject it does say setAttribute(), but the body of the message had references to getAttribute() only.    I will check things again, and the stack trace will make the difference...    Rolf    On 06/04/2012 5:48 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Rolf,    I believe you might be looking at the wrong method:    This is JDOM 1.0  (ns is passed as null)       Inside this code, the constructor new Attribute(name, value, ns) calls:       Here setNamespace(namespace) calls:    // Verify the attribute isn't trying to be in a default namespace // Attributes can't be in a default namespace throw new IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the " +    where namespace being null is set to NO_NAMESPACE.    Stack trace:    java.lang.NullPointerException at org.jdom.AttributeList.indexOf(AttributeList.java:378) at org.jdom.AttributeList.get(AttributeList.java:366) at org.jdom.Element.getAttribute(Element.java:1004) at org.jdom.Element.setAttribute(Element.java:1178) at &lt;br/&gt; com.navis.argo.business.snx.AbstractXmlExporter.setAttribute(AbstractXmlExporter.java:40)   &lt;div class="footer noise"&gt;  --------------   &lt;/div&gt; &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 2:40 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;   Here's the attributes.get(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;   And that calls the indexOf(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>the stack trace belongs to JDOM 1.1.3   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Saavedra Gisella Sent: Friday, April 06, 2012 2:49 PM To: 'Rolf Lear' Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: RE: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Rolf,    I believe you might be looking at the wrong method:    This is JDOM 1.0  (ns is passed as null)       Inside this code, the constructor new Attribute(name, value, ns) calls:       Here setNamespace(namespace) calls:    // Verify the attribute isn't trying to be in a default namespace // Attributes can't be in a default namespace throw new IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the " +    where namespace being null is set to NO_NAMESPACE.    Stack trace (JODM 1.1.3):    java.lang.NullPointerException at org.jdom.AttributeList.indexOf(AttributeList.java:378) at org.jdom.AttributeList.get(AttributeList.java:366) at org.jdom.Element.getAttribute(Element.java:1004) at org.jdom.Element.setAttribute(Element.java:1178) at &lt;br/&gt; com.navis.argo.business.snx.AbstractXmlExporter.setAttribute(AbstractXmlExporter.java:40)   &lt;div class="footer noise"&gt;  --------------   &lt;/div&gt; &lt;div class="quote quote-2"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 2:40 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;   Here's the attributes.get(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;   And that calls the indexOf(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Rolf,    I believe you might be looking at the wrong method:    This is JDOM 1.0  (ns is passed as null)       Inside this code, the constructor new Attribute(name, value, ns) calls:       Here setNamespace(namespace) calls:    // Verify the attribute isn't trying to be in a default namespace // Attributes can't be in a default namespace throw new IllegalNameException("", "attribute namespace", "An attribute namespace without a prefix can only be the " +    where namespace being null is set to NO_NAMESPACE.    Stack trace:    java.lang.NullPointerException at org.jdom.AttributeList.indexOf(AttributeList.java:378) at org.jdom.AttributeList.get(AttributeList.java:366) at org.jdom.Element.getAttribute(Element.java:1004) at org.jdom.Element.setAttribute(Element.java:1178) at &lt;br/&gt; com.navis.argo.business.snx.AbstractXmlExporter.setAttribute(AbstractXmlExporter.java:40)   &lt;div class="footer noise"&gt;  --------------   &lt;/div&gt; &lt;div class="quote quote-1"&gt;  -----Original Message----- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Friday, April 06, 2012 2:40 PM To: Saavedra Gisella Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] NullPointerException in Element.setAttribute(final &lt;br/&gt; String name, final String value, final Namespace ns)    Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;   Here's the attributes.get(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;   And that calls the indexOf(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Hi Gisella.    I have looked through the JDOM 1.0 code. JDOM 1.0 was released in September 2004. Here's the code as it was at the time:    Here's the getAttribute method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/Element.java#L980 &lt;/a&gt;   Here's the attributes.get(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L365 &lt;/a&gt;   And that calls the indexOf(String,Namespace) method:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.0/core/src/java/org/jdom/AttributeList.java#L377 &lt;/a&gt;   Which calls namespace.getURI().    The way I see it is that JDOM 1.0 would always throw a NullPointerException if you gave it a null Namespace.    I don't think it would have ever worked in JDOM 1.0...    Did you have your own custom build of JDOM 1.0?    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>Hi Gisella.    Is it possible to send us a stack trace, at least the parts including the org.jdom.* code.    Thanks    Rolf    On 06/04/2012 1:43 PM, &lt;span&gt; gise &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  I just upgraded from jdom 1.0 to jdom 1.1.3    and I was setting an attribute where the namespace was NULL.    The old code was different, it was NOT calling get(…), so it was setting the namespace to namespace.NO_NAMESPACE when the namespace was NULL,    before calling this get(…)    but the new code, when it calls getAttribute(name, ns) (first line of method described)    is getting a null pointer on the namespace.    Probably the namespace needs to be set to NO_NAMESPACE before calling get(..) when it is NULL.    *Gisella Saavedra** *Framework Team  &lt;span&gt; _gsa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; &lt;span&gt; gsaa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; &amp;gt;_    &lt;a class="exlink mklink" href="http://www.navis.com/images/spacer.gif" rel="nofollow"&gt; http://www.navis.com/images/spacer.gif &lt;/a&gt;   1000 Broadway, Suite 150, Oakland, CA 94607 | T+1 510 267 5123 T Main+1 510 267 5000 F+1 510 267 5100 | _http://www.navis.com &lt;a class="exlink mklink" href="http://www.navis.com/" rel="nofollow"&gt; http://www.navis.com/ &lt;/a&gt; &amp;gt;_</body>
  </mail>
  <mail>
    <header>[jdom-interest] NullPointerException in Element.setAttribute(final String name, final String value, final Namespace ns)</header>
    <body>I just upgraded from jdom 1.0 to jdom 1.1.3 and I was setting an attribute where the namespace was NULL.    The old code was different,  it was NOT calling get(...), so it was setting the &lt;br/&gt; namespace to namespace.NO_NAMESPACE when the namespace was NULL, before calling this get(...) but the new code, when it calls getAttribute(name, ns)  (first line of method &lt;br/&gt; described) is getting a null pointer on the namespace.    Probably the namespace needs to be set to NO_NAMESPACE before calling get(..) &lt;br/&gt; when it is NULL.    Gisella Saavedra Framework Team  &lt;span&gt; gsaa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt; &lt;span&gt; gsaa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @navis.com &lt;/span&gt;    [cid:image001.gif@01CD13E2.1373B860]    1000 Broadway, Suite 150, Oakland, CA 94607   |  T+1 510 267 5123  T Main+1 510 &lt;br/&gt; 267 5000  F+1 510 267 5100  | &lt;a class="exlink mklink" href="http://www.navis.com" rel="nofollow"&gt; http://www.navis.com &lt;/a&gt; &lt;a class="exlink mklink" href="http://www.navis.com/" rel="nofollow"&gt; http://www.navis.com/ &lt;/a&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Download/Distribution format</header>
    <body>Hi all.    I intend to 'release' 2.0.0 in the same format as all the BETA releases. Oh, I have just checked, and the license is not in there....    Apart from the licenses, is there anything else that needs to go in the final package?    This is the 'last moment' for people to inspect that and make sure it is right    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>coalesce is a big name (thinking of not-native-English-speakers), but it does encapsulate the intent of the method. People will figure it out.    There, decision made.    I will need some time to 'package' things up, so no more code changes, only documentation, and wiki....    JDOM 2.0.0 to be released this weekend.    Rolf    On 04/04/2012 11:49 AM, Grzegorz wrote:   &lt;div class="quote quote-1"&gt;  +1 for coalesceText(boolean) ;)    &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt;    I'd probably name it coalesceText().    -jh-    On Apr 4, 2012, at 3:52 AM, Oliver Ruebenacker wrote:    &amp;gt;     Hello Rolf, All, &amp;gt;  I think most users would be puzzled what it means to "simplify" &amp;gt; text. It sounds as if the text itself is affected, rather than its &amp;gt; representation. I would call it Element.defragmentText(). Many people &amp;gt; know that if you defragment a file, the content stays the same. &amp;gt;     Take care &amp;gt;     Oliver &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;  &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt;&amp;gt; wrote: &amp;gt;&amp;gt; Hi all. &amp;gt;&amp;gt; I have moved this code in as the new method Element.simplifyText().  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;  &amp;gt;&amp;gt; It is a non-recursive method. I think the name is better than 'merge', &amp;gt;&amp;gt; 'join', or 'normalize'. &amp;gt;&amp;gt; I think the recursive means of doing it is easy enough to code &amp;gt;&amp;gt; (three-liner), so it does not add much value. &amp;gt;&amp;gt; I think it has enough value to be included. &amp;gt;&amp;gt; Unless someone can come up with better names, options, I think it will stay. &amp;gt;&amp;gt; Rolf &amp;gt;&amp;gt; On 03/04/2012 9:49 AM, Rolf Lear wrote: &amp;gt;&amp;gt;&amp;gt; Hi all. &amp;gt;&amp;gt;&amp;gt; I have been playing with a problem related to multiple-adjacent-text &amp;gt;&amp;gt;&amp;gt; content in Elements. For example: &amp;gt;&amp;gt;&amp;gt; I think there is a useful concept of 'merging' consecutive Text items in &amp;gt;&amp;gt;&amp;gt; to one. The code is simple enough, and I have written it, and it works. &amp;gt;&amp;gt;&amp;gt; This is similar to the 'normalize' function of DOM's Node. &amp;gt;&amp;gt;&amp;gt; The questions are: &amp;gt;&amp;gt;&amp;gt; 1. Should the code be part of the JDOM API? Is it useful? &amp;gt;&amp;gt;&amp;gt; 2. The way I have it now is as a method on Element, which, for example, &amp;gt;&amp;gt;&amp;gt; you call root.runTheMergeMethod() and it *recursively* scans the Element &amp;gt;&amp;gt;&amp;gt; (and child Elements) for consecutive Text items and merges them. Should &amp;gt;&amp;gt;&amp;gt; the &amp;gt;&amp;gt;&amp;gt; method be recursive, or should it be at the current element only. Perhaps &amp;gt;&amp;gt;&amp;gt; there should be two versions, one is recursive, the other is not. &amp;gt;&amp;gt;&amp;gt; 3. What should the methods be called? &amp;gt;&amp;gt;&amp;gt; 4. Should it be accessible through the JDOM Document too, or just the root &amp;gt;&amp;gt;&amp;gt; element? &amp;gt;&amp;gt;&amp;gt; Ideas? &amp;gt;&amp;gt;&amp;gt; Rolf   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>+1 for coalesceText(boolean) ;)    &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  I'd probably name it coalesceText().    -jh-    On Apr 4, 2012, at 3:52 AM, Oliver Ruebenacker wrote:   &lt;div class="quote quote-2"&gt;  Hello Rolf, All,    I think most users would be puzzled what it means to "simplify" text. It sounds as if the text itself is affected, rather than its representation. I would call it Element.defragmentText(). Many people know that if you defragment a file, the content stays the same.    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;  Hi all.    I have moved this code in as the new method Element.simplifyText().   &lt;/div&gt; &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;  &lt;div class="quote quote-2"&gt; &lt;div class="quote quote-3"&gt;   It is a non-recursive method. I think the name is better than 'merge', 'join', or 'normalize'.    I think the recursive means of doing it is easy enough to code (three-liner), so it does not add much value.    I think it has enough value to be included.    Unless someone can come up with better names, options, I think it will stay.    Rolf    On 03/04/2012 9:49 AM, Rolf Lear wrote:   &lt;div class="quote quote-4"&gt;   Hi all.    I have been playing with a problem related to multiple-adjacent-text content in Elements. For example:       I think there is a useful concept of 'merging' consecutive Text items in to one. The code is simple enough, and I have written it, and it works. This is similar to the 'normalize' function of DOM's Node.    The questions are: 1. Should the code be part of the JDOM API? Is it useful? 2. The way I have it now is as a method on Element, which, for example, you call root.runTheMergeMethod() and it *recursively* scans the Element (and child Elements) for consecutive Text items and merges them. Should the method be recursive, or should it be at the current element only. Perhaps there should be two versions, one is recursive, the other is not. 3. What should the methods be called? 4. Should it be accessible through the JDOM Document too, or just the root element?    Ideas?    Rolf    _______________________________________________ To control your jdom-interest membership:   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>Hello,     Sorry for late response...    Why not simply mergeConsecutiveTextNodes? It would just say what it does.    I would also prefer to have recursive version as well - yes, it is a three-liner yet it takes some time and attention to read and understand what this three-liner does. Adding a boolean parameter does not seem an overhead.    I would also think of some automation... but this would be a performance penalty.    Regards, GK    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  Hello Rolf, All,    I think most users would be puzzled what it means to "simplify" text. It sounds as if the text itself is affected, rather than its representation. I would call it Element.defragmentText(). Many people know that if you defragment a file, the content stays the same.    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Hi all.    I have moved this code in as the new method Element.simplifyText().   &lt;/div&gt;  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;  &lt;div class="quote quote-2"&gt;   It is a non-recursive method. I think the name is better than 'merge', 'join', or 'normalize'.    I think the recursive means of doing it is easy enough to code (three-liner), so it does not add much value.    I think it has enough value to be included.    Unless someone can come up with better names, options, I think it will stay.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>I'd probably name it coalesceText().    -jh-    On Apr 4, 2012, at 3:52 AM, Oliver Ruebenacker wrote:   &lt;div class="quote quote-1"&gt;  Hello Rolf, All,    I think most users would be puzzled what it means to "simplify" text. It sounds as if the text itself is affected, rather than its representation. I would call it Element.defragmentText(). Many people know that if you defragment a file, the content stays the same.    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Hi all.    I have moved this code in as the new method Element.simplifyText().    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;   It is a non-recursive method. I think the name is better than 'merge', 'join', or 'normalize'.    I think the recursive means of doing it is easy enough to code (three-liner), so it does not add much value.    I think it has enough value to be included.    Unless someone can come up with better names, options, I think it will stay.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>Hello Rolf, All,    I think most users would be puzzled what it means to "simplify" text. It sounds as if the text itself is affected, rather than its representation. I would call it Element.defragmentText(). Many people know that if you defragment a file, the content stays the same.    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    I have moved this code in as the new method Element.simplifyText().    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;   It is a non-recursive method. I think the name is better than 'merge', 'join', or 'normalize'.    I think the recursive means of doing it is easy enough to code (three-liner), so it does not add much value.    I think it has enough value to be included.    Unless someone can come up with better names, options, I think it will stay.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - org.jdom2.util</header>
    <body>Thanks.    I think 'internal' works well, and the change is done.    Rolf    On 03/04/2012 11:00 AM, Noel Grandin wrote:   &lt;div class="quote quote-1"&gt;   On 2012-04-03 15:41, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  I would particularly like feedback on what a good name would be for the new package containing ArrayCopy and other 'public-but-not-public' classes. "org.jdom2.support"? "org.jdom2.internal"? Any ideas?   &lt;/div&gt;  .internal matches the Eclipse naming conventions.    I haven't seen any other common conventions for this.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>Hi all.    I have moved this code in as the new method Element.simplifyText().    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/d4b5c67f1df51cacf05e704e238f1d5361828233#diff-0 &lt;/a&gt;   It is a non-recursive method. I think the name is better than 'merge', 'join', or 'normalize'.    I think the recursive means of doing it is easy enough to code (three-liner), so it does not add much value.    I think it has enough value to be included.    Unless someone can come up with better names, options, I think it will stay.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>I realize that the conditions under which you get these 'adjacent' Text items are limited. Essentially, the only way to do it is through the programming API.... oh, and, I guess technically the StAX streams could do it. But, I mostly expect this to be a problem with people having JDOM code adding Text content, and then being surprised when they want to retrieve it and have to figure out which one... or all of them to process. The Outputter variants already all (since JDOM 2.x) merge the adjacent Texts in to a single 'event' or whatever... so output is not a problem either    I am really not sure how big the problem is... but the other thing my current code example does is to remove Text items which are empty (new Text("")).... and that is not something that addText() would accommodate...    All this process would solve is that one time when someone has somehow got multiple texts, and they want to simplify the processing of the JDOM tree. A non-recursive example would be       When I look at it like that, it's really simple....    I think my opinion is swaying to either: 1. don't do it at all - but I have the code done already, and even though it is simple, it is *very* useful in a *limited* situation. Hate to waste 10-lines of code ;-) 2. do it as a non-recursive 'cleanup' post-process task.... like the mergeAdjacentTexts() example above.    I think while adding an 'append-or-create' Element.addText() would be somewhat useful at reducing the problem, it does not solve it after it happens.    Rolf    On Tue, 3 Apr 2012 10:38:05 -0500, "Bradley S. Huffman" &lt;span&gt; bshu &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Why not just a Element.addText(String) that either adds a new text node or merges with a adjacent one if one exists?  I don't think a recursive merge method would be that useful since SAXHandler already does it in the characters() method.   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>Why not just a Element.addText(String) that either adds a new text node or merges with a adjacent one if one exists?  I don't think a recursive merge method would be that useful since SAXHandler already does it in the characters() method.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>I was specifically trying to avoid the normalize word.... it has additional connotations in JDOM, in the sense that it is already part of the Element's API which does a 'different' thing (trims and normalizes internal whitespace):  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/apidocs/org/jdom2/Element.html#getTextNormalize%28%29" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/apidocs/org/jdom2/Element.html#getTextNormalize%28%29 &lt;/a&gt;   I assume though that you think it is a good idea to push it in before 2.0.0?    If it helps, the method name I currently have is called 'mergeAdjacentText()'    What about putting it at the document level too? That would involve a change to Document, Parent, and Element....?    Rolf    &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  void normalizeText(boolean recursive)    or    void normalizeTextNodes(boolean recursive)   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>1. Perhaps the nonrecursive version should be part of the API as an example of &lt;br/&gt; how to do building blocks for simple transformations. 2. The recursive version could be in CONTRIB, to show how easy recursive &lt;br/&gt; transformations are in jdom. 3. JOIN, to be compatible with scripting languages, (along with a separator &lt;br/&gt; parameter). 4. Neither the DOCUMENT nor the ROOT, but any element.   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On &lt;br/&gt; Behalf Of Rolf Lear Sent: Tuesday, April 03, 2012 9:50 AM To: Jdom interest Subject: [jdom-interest] Still to do - Text 'merger'    Hi all.    I have been playing with a problem related to multiple-adjacent-text content in Elements. For example:       I think there is a useful concept of 'merging' consecutive Text items in to one. The code is simple enough, and I have written it, and it works. This is similar to the 'normalize' function of DOM's Node.    The questions are: 1. Should the code be part of the JDOM API? Is it useful? 2. The way I have it now is as a method on Element, which, for example, you call root.runTheMergeMethod() and it *recursively* scans the Element (and child Elements) for consecutive Text items and merges them. Should the method be recursive, or should it be at the current element only. Perhaps there should be two versions, one is recursive, the other is not. 3. What should the methods be called? 4. Should it be accessible through the JDOM Document too, or just the root element?    Ideas?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - Text 'merger'</header>
    <body>void normalizeText(boolean recursive)    or    void normalizeTextNodes(boolean recursive)   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Still to do - org.jdom2.util</header>
    <body>On 2012-04-03 15:41, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  I would particularly like feedback on what a good name would be for the new package containing ArrayCopy and other 'public-but-not-public' classes. "org.jdom2.support"? "org.jdom2.internal"? Any ideas?   &lt;/div&gt;  .internal matches the Eclipse naming conventions.    I haven't seen any other common conventions for this.   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Still to do - Text 'merger'</header>
    <body>Hi all.    I have been playing with a problem related to multiple-adjacent-text content in Elements. For example:       I think there is a useful concept of 'merging' consecutive Text items in to one. The code is simple enough, and I have written it, and it works. This is similar to the 'normalize' function of DOM's Node.    The questions are: 1. Should the code be part of the JDOM API? Is it useful? 2. The way I have it now is as a method on Element, which, for example, you call root.runTheMergeMethod() and it *recursively* scans the Element (and child Elements) for consecutive Text items and merges them. Should the method be recursive, or should it be at the current element only. Perhaps there should be two versions, one is recursive, the other is not. 3. What should the methods be called? 4. Should it be accessible through the JDOM Document too, or just the root element?    Ideas?    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Still to do - org.jdom2.util</header>
    <body>Hi all    I have the following on the to-do list: 'fix' the org.jdom2.util package    this package contains public classes many of which are not really JDOM specific:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/tree/master/core/src/java/org/jdom2/util" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/tree/master/core/src/java/org/jdom2/util &lt;/a&gt;   My plan is:    StringBin will become 'package private' and will be moved to org.jdom2. This makes it 'invisible' but still accessible to SlimJDOMFactory    XMLBase will have its internal logic moved to Element as a new method public URI getXMLBase(), then XMLBase will be removed entirely    NamespaceStack can stay in util and be declared part of the public API IteratorIterable can stay in util and be declared part of the public API    This leaves ArrayCopy and ReflectionConstructor. These classes are used from a number of different places in JDOM. ArrayCopy duplicates the Arrays.arrayCopy(*) logic because it is not available in Java5. ReflectionConstructor centralizes the logic and error handling for a number of places too. They cannot be made 'private'.    I think I am going to create a new package org.jdom2.support which I will document as 'this is private JDOM code. Do not use any classes in this directly package in your code!'    I think this will leave org.jdom2.util with just the NamespaceStack and the IteratorIterable. Which are fair to make part of the public JDOM API.    Does anyone have any comments on this? Concerns?    I would particularly like feedback on what a good name would be for the new package containing ArrayCopy and other 'public-but-not-public' classes. "org.jdom2.support"? "org.jdom2.internal"? Any ideas?    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x BETA 6 Released - April Fools</header>
    <body>Thank you , and you're welcome ;-)    Rolf    &lt;span&gt; no &lt;a class="email mklink"&gt; ... &lt;/a&gt; @peralex.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Nice! Thanks for all the hard work!   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 2.x BETA 6 Released - April Fools</header>
    <body>Nice! Thanks for all the hard work!   &lt;div class="footer legalese"&gt;  Disclaimer: &lt;a class="exlink mklink" href="http://www.peralex.com/disclaimer.html" rel="nofollow"&gt; http://www.peralex.com/disclaimer.html &lt;/a&gt;  &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 2.x BETA 6 Released - April Fools</header>
    <body>No, actually, really it has been released. No April Fools in that.    There are some significant changes in this release:    The Parent interface has been extended to incorporate the addContent(*) methods which are common to both Document and Element. When the Parent interface was designed, it was not possible to do Covariant return types, and it was not possible to have addContent(Content) return Document on a Document instance, and Element on an Element instance. With Java5, this is now possible, and it is thus logical to include these methods on the Parent interface.    XPathExpression and its derivative classes have been changed to be more consistent both with each other, and with other 'de-facto' standards in JDOM. This means that: 1. Instead of passing around String uri's, the code now passes around Namespace instances. 2. XPathExpression now supports getting and setting Variables using a 'qname' syntax that matches the syntax used for declaring the variables in the XPathFactory.    JDOMConstants has a few values which represent common prefixes for some namespaces. These were named "NS_PFX_...". They have been renamed to "NS_PREFIX_*" to be more specific.    SAXBuilder was changed by me a while ago to rename three 'boolean' get* methods to be is* methods. For example, getExpandEntities() became isExpandEntities(). It has become apparent that there is no significant benefit from this change. It does not clarify what the methods do, the names are still ugly, and the additional complexity for both the JDOM code (with deprecated get* methods) and the users (having to change their code calls to avoid deprecation warnings) makes it not-worthwhile. Thus these three changes have been 'reverted'.    TextHelper is a 'contrib' class that I recently ported in to 'core'. Unfortunately, I completely missed the fact that the functionality already existed in JDOM's Element class. So, this TextHelper has been completely removed.    I introduced the 'Walker' Interface to deal with the complexities of formatting XML Output in the org.jdom2.output.* packages. The names of the 4 concrete implementations of the Walker interface were inconsistent with the types of formatting they do. The concrete implementations have been renamed to match the TextMode they represent. This change will only affect people who have already subclassed JDOM 2.x beta code.    A number of documentation issues have been addressed, and the wiki page is being improved and updated.    I am hoping that you will all jump on to this beta and run it through it's paces. If you have any questions or suggestions, please speak up. If you notice any JavaDoc issues please shout out as well.    The final 2.0.0 release is still targeted for this Easter weekend. Please continue to play with the JDOM 2.x Beta releases. This latest BETA is available from the regular places (with maven to follow soon):    Downloads: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;  The Release:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.6-BETA.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.6-BETA.zip &lt;/a&gt;  The APIDocs: &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html &lt;/a&gt;  The Code Coverage:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt;  The JUnit Report:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt;   Thanks    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-commits] [hunterhacker/jdom] be5e93: Javadoc typo fixes.</header>
    <body>Branch: refs/heads/master Home: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom" rel="nofollow"&gt; https://github.com/hunterhacker/jdom &lt;/a&gt;  Commit: be5e9394604beddc751c1aeade7300fef52de9c0  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/be5e9394604beddc751c1aeade7300fef52de9c0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/be5e9394604beddc751c1aeade7300fef52de9c0 &lt;/a&gt;  &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; Date:   2012-04-01 (Sun, 01 Apr 2012)    Changed paths: M core/src/java/org/jdom2/xpath/XPathFactory.java M core/src/java/org/jdom2/xpath/XPathHelper.java    Log Message: ----------- Javadoc typo fixes.</body>
  </mail>
  <mail>
    <header>[jdom-commits] [hunterhacker/jdom] 366ae7: Fix a link to the XPath wiki docs.</header>
    <body>Branch: refs/heads/master Home: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom" rel="nofollow"&gt; https://github.com/hunterhacker/jdom &lt;/a&gt;  Commit: 366ae7ecf4f2770fb830e7caadfac17bb4d06178  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/366ae7ecf4f2770fb830e7caadfac17bb4d06178" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/366ae7ecf4f2770fb830e7caadfac17bb4d06178 &lt;/a&gt;  &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; Date:   2012-04-01 (Sun, 01 Apr 2012)    Changed paths: M core/src/java/org/jdom2/xpath/package.html    Log Message: ----------- Fix a link to the XPath wiki docs.</body>
  </mail>
  <mail>
    <header>[jdom-commits] [hunterhacker/jdom] b28496: Some Javadoc typo fixes.</header>
    <body>Branch: refs/heads/master Home: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom" rel="nofollow"&gt; https://github.com/hunterhacker/jdom &lt;/a&gt;  Commit: b28496c10a06526c35311705eefaa3af2c192d3d  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/commit/b28496c10a06526c35311705eefaa3af2c192d3d" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/commit/b28496c10a06526c35311705eefaa3af2c192d3d &lt;/a&gt;  &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; Date:   2012-03-31 (Sat, 31 Mar 2012)    Changed paths: M core/src/java/org/jdom2/NamespaceAware.java M core/src/java/org/jdom2/input/StAXEventBuilder.java M core/src/java/org/jdom2/input/sax/package-info.java M core/src/java/org/jdom2/input/stax/DTDParser.java M core/src/java/org/jdom2/located/Located.java M core/src/java/org/jdom2/output/Format.java M core/src/java/org/jdom2/output/JDOMLocator.java M core/src/java/org/jdom2/output/LineSeparator.java    Log Message: ----------- Some Javadoc typo fixes.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Oliver,    I'm curious, did you ever get an entityRef? To my experience, no SAXBuilder gives you them... Also, they will transform any &lt;br/&gt; numeric reference to a character.    Now, still, I tried to respond to your request and I could not. Watching the XMLOutputter, I saw that it was actually outputting the entity ref &lt;br/&gt; itself (namely: the ampersand, the name, a semicolon), and indeed the EntityRef &lt;br/&gt; object does not carry any information that allows you to "resolve it".    The last step, entity-resolution, actually is the business of the DTD. The Entity-references for xhtml are among the reasons of the xhtml dtd's &lt;br/&gt; enormous weight. If I remember well, mathml has an entity-definition-table that &lt;br/&gt; may be easier to process (also available as xml in case).    Also, beware if you want to parse XHTML: - with a DTD, and without some "public/private catalog", you get a DTD loaded &lt;br/&gt; from W3C very slowly (and denying after a while) - without it, all entity-references are broken. ... maybe you don't parse it?    All in all, could I conjecture the entity-ref objects are actually &lt;br/&gt; programmatically created? If yes, you need to expand them as a programme using &lt;br/&gt; the table mentioned above (could be a nice contrib).    hope it helps.    paul    Le 29 mars 2012 à 18:54, Oliver Ruebenacker a écrit :   &lt;div class="quote quote-1"&gt;  Hello,    Thanks for all the advice, but it seems I did not make myself sufficiently clear.    My situation is this: some one else already parsed XHTML and gave me the JDOM element that represents a fragment of it.    Let us say the original fragment looks something like this:    "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;copy; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;amp; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#169; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#38; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#x00a9; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#26; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;"    I never get to see that fragment, but instead an object of type Element. What I want to get is a String that looks roughly like this:    "© 2012 by Dewey, Cheetham &amp;amp; Howe"    A simple lightweight solution that is roughly acceptable in most simple cases is fine for my purpose.    So I am trying a recursive method that iterates over Element.getContent() and then I am wondering what to do if the content happens to be EntityRef?             // ignore // ignore text = text + ref; // ??? // ignore // ignore, should not happen       Thanks!    Take care Oliver    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;  Another option I've used in the past is changing the underlying SAX parser that jDOM uses to TagSoup ( &lt;a class="exlink mklink" href="http://ccil.org/~cowan/XML/tagsoup/" rel="nofollow"&gt; http://ccil.org/~cowan/XML/tagsoup/ &lt;/a&gt; ).  Their parser is tuned to parsing not fully XML compliant HTML.    (*Chris*)    On Thu, Mar 29, 2012 at 8:47 AM, Olivier Jaquemet &lt;span&gt; oliv &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jalios.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;   Hi Oliver,    JDom is a great tool for parsing XML...    ... but for XHTML fragment (which may not be completely XHTML compliant ... ?) and specially for text extraction, I would strongly suggest JSoup  &lt;a class="exlink mklink" href="http://jsoup.org/" rel="nofollow"&gt; http://jsoup.org/ &lt;/a&gt;      Whatever is your html it will work like a charm (even it is an ugly copy paste wysiwyg from word or any ugly html export from whatever website)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>I think I'd use XSL-T in that case.  It will handle XML -&amp;gt; Text transformations easily and scriptably (if that's a word). (*Chris*)    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt;wrote:   &lt;div class="quote quote-1"&gt;  Hello,    Thanks for all the advice, but it seems I did not make myself sufficiently clear.    My situation is this: some one else already parsed XHTML and gave me the JDOM element that represents a fragment of it.    Let us say the original fragment looks something like this:    "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;copy; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;amp; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#169; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#38; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#x00a9; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#26; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;"    I never get to see that fragment, but instead an object of type Element. What I want to get is a String that looks roughly like this:    "© 2012 by Dewey, Cheetham &amp;amp; Howe"    A simple lightweight solution that is roughly acceptable in most simple cases is fine for my purpose.    So I am trying a recursive method that iterates over Element.getContent() and then I am wondering what to do if the content happens to be EntityRef?             // ignore // ignore text = text + ref; // ??? // ignore // ignore, should not happen       Thanks!    Take care Oliver    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-2"&gt;  Another option I've used in the past is changing the underlying SAX parser that jDOM uses to TagSoup ( &lt;a class="exlink mklink" href="http://ccil.org/~cowan/XML/tagsoup/" rel="nofollow"&gt; http://ccil.org/~cowan/XML/tagsoup/ &lt;/a&gt; ).  Their parser is tuned to parsing not fully XML compliant HTML.    (*Chris*)    On Thu, Mar 29, 2012 at 8:47 AM, Olivier Jaquemet &lt;span&gt; oliv &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jalios.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-3"&gt;   Hi Oliver,    JDom is a great tool for parsing XML...    ... but for XHTML fragment (which may not be completely XHTML compliant ... ?) and specially for text extraction, I would strongly suggest JSoup  &lt;a class="exlink mklink" href="http://jsoup.org/" rel="nofollow"&gt; http://jsoup.org/ &lt;/a&gt;      Whatever is your html it will work like a charm (even it is an ugly copy paste wysiwyg from word or any ugly html export from whatever website)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Hello,    Thanks for all the advice, but it seems I did not make myself sufficiently clear.    My situation is this: some one else already parsed XHTML and gave me the JDOM element that represents a fragment of it.    Let us say the original fragment looks something like this:    "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;copy; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;amp; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#169; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#38; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;" "&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;&amp;amp;#x00a9; 2012&amp;lt;/b&amp;gt; by &amp;lt;em&amp;gt;Dewey, Cheetham &amp;amp;#26; Howe&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;"    I never get to see that fragment, but instead an object of type Element. What I want to get is a String that looks roughly like this:    "© 2012 by Dewey, Cheetham &amp;amp; Howe"    A simple lightweight solution that is roughly acceptable in most simple cases is fine for my purpose.    So I am trying a recursive method that iterates over Element.getContent() and then I am wondering what to do if the content happens to be EntityRef?             // ignore // ignore text = text + ref; // ??? // ignore // ignore, should not happen       Thanks!    Take care Oliver    &lt;span&gt; thec &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Another option I've used in the past is changing the underlying SAX parser that jDOM uses to TagSoup ( &lt;a class="exlink mklink" href="http://ccil.org/~cowan/XML/tagsoup/" rel="nofollow"&gt; http://ccil.org/~cowan/XML/tagsoup/ &lt;/a&gt; ).  Their parser is tuned to parsing not fully XML compliant HTML.      (*Chris*)    On Thu, Mar 29, 2012 at 8:47 AM, Olivier Jaquemet &lt;span&gt; oliv &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jalios.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-2"&gt;   Hi Oliver,    JDom is a great tool for parsing XML...    ... but for XHTML fragment (which may not be completely XHTML compliant ... ?) and specially for text extraction, I would strongly suggest JSoup  &lt;a class="exlink mklink" href="http://jsoup.org/" rel="nofollow"&gt; http://jsoup.org/ &lt;/a&gt;      Whatever is your html it will work like a charm (even it is an ugly copy paste wysiwyg from word or any ugly html export from whatever website)</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Another option I've used in the past is changing the underlying SAX parser that jDOM uses to TagSoup ( &lt;a class="exlink mklink" href="http://ccil.org/~cowan/XML/tagsoup/" rel="nofollow"&gt; http://ccil.org/~cowan/XML/tagsoup/ &lt;/a&gt; ).  Their parser is tuned to parsing not fully XML compliant HTML.    (*Chris*)     &lt;span&gt; oliv &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jalios.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Oliver,    JDom is a great tool for parsing XML...    ... but for XHTML fragment (which may not be completely XHTML compliant ... ?) and specially for text extraction, I would strongly suggest JSoup  &lt;a class="exlink mklink" href="http://jsoup.org/" rel="nofollow"&gt; http://jsoup.org/ &lt;/a&gt;      Whatever is your html it will work like a charm (even it is an ugly copy paste wysiwyg from word or any ugly html export from whatever website)    Olivier    On 29/03/2012 15:23, Oliver Ruebenacker wrote:   &lt;div class="quote quote-2"&gt;  Hello,    I need a simple way to convert some XHTML fragments, provided as a JDOM Element, into plain text. I am willing to ignore most HTML tags and consider only the most commonly used predefined entities.    In JDOM, an entity reference has a name, a public id and a system id. I think I know what the named means, for named entities. But what about numeric entities, how do I get the code point? And what are public id and system id?    Thanks!    Take care Oliver   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Hi Oliver,     JDom is a great tool for parsing XML...    ... but for XHTML fragment (which may not be completely XHTML compliant ... ?) and specially for text extraction, I would strongly suggest JSoup  &lt;a class="exlink mklink" href="http://jsoup.org/" rel="nofollow"&gt; http://jsoup.org/ &lt;/a&gt;      Whatever is your html it will work like a charm (even it is an ugly copy paste wysiwyg from word or any ugly html export from whatever website)    Olivier    On 29/03/2012 15:23, Oliver Ruebenacker wrote:   &lt;div class="quote quote-1"&gt;  Hello,    I need a simple way to convert some XHTML fragments, provided as a JDOM Element, into plain text. I am willing to ignore most HTML tags and consider only the most commonly used predefined entities.    In JDOM, an entity reference has a name, a public id and a system id. I think I know what the named means, for named entities. But what about numeric entities, how do I get the code point? And what are public id and system id?    Thanks!    Take care Oliver   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Discussing character escapes using a web-based mail client is probably not the smartest thing I have done...    Especially complicated when replies are made, etc.    Sorry, but in the 'second example', should read:   &lt;div class="quote quote-1"&gt;  Having said that, you must understand that JDOM *expects* to be given 'un-escaped' data. If you tell JDOM to set the value for attribute 'attb' to the (expanded with a space to preserve formatting)  String '&amp;amp; #169;' then JDOM will do that, and, when you output the value, it will escape the '&amp;amp;' for you so that the value (expanded with a space to preserve formatting) '&amp;amp; #169;' is preserved.... for example, if we add the following lines to the above program:    doc.getRootElement().setAttribute("attb", "&amp;amp; #169;"); // expanded with a space    the output is now:    ©   &lt;/div&gt;   note how I have expanded the char escapes with a space to preserve formatting... this may just make things more complicated... I don't know.    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: Re:  Simple xhtml/entity resolver?</header>
    <body>and I replied to Olive only too... hmmm    Rolf   &lt;div class="quote quote-1"&gt;  -------- Original Message -------- Subject: Re: [jdom-interest] Simple xhtml/entity resolver? Date: Thu, 29 Mar 2012 11:15:26 -0400 &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt;    Ahh,    In order to discuss the 'entity' processing, you need to be careful about how you specify the 'location' of the data...    For example, there are three basic 'locations' for content when we consider JDOM, the 'unparsed XML', the 'JDOM Document', and the 'output'.    Also, when you say &amp;amp;169; do you mean &amp;amp;169; or do you actually mean © ? There is a *big* difference....    When you parse 'unparsed XML' the parser will always translate character escapes to the actual character, for example, © will become ©. JDOM will never see the '©'. If, for example, in the 'unparsed XML' file, you had &amp;lt;root att="&amp;amp;169;" /&amp;gt;, then, when parsed and given to JDOM, you will always have the single char © as root.getAttributeValue("att").    When you output that value from JDOM, JDOM will use the 'charset' of the output destination to determine whether the © char needs to be escaped. For example, the following 'program':       outputs:    ©    Having said that, you must understand that JDOM *expects* to be given 'un-escaped' data. If you tell JDOM to set the value for attribute 'attb' to the String '©' then JDOM will do that, and, when you output the value, it will escape the '&amp;amp;' for you so that the value '©' is preserved.... for example, if we add the following lines to the above program:       the output is now:    ©    So, making sure that we have a good understanding of the concept of character escapes, you must realize that they are *not* EntityReferences... you should never see any JDOM object representing a character escape.    On the other hand, if you had the entity reference '©' in your 'unparsed XML', the parser (by default) should have replaced it with the appropriate character(s) when the document was parsed. Again, JDOM will see the character © and not the reference '©'. A 'default' parser will fail to parse a document if it has references that cannot be resolved. If you change the default parse behaviour (to remove the entity-resolve process), then instead of the © character, you will have a JDOM EntityRef with the name 'copy'.    In other words, you have to go out of your way to create EntityRef instances. If you want to ignore the processes the parser uses to resolve entities, then you will need to scan the JDOM tree, look for EntityRefs, and manually replace them with the appropriate Text.... using whatever strategy you want to use.    In a more general answer to your original question 'how do I basically replace a browser', though, what you really want to be doing is a Transform on your JDOM document, to create an appropriate output for your needs. The transform you use will depend on what results you want. Have a look at XSLTransform class in JDOM, as well as the various resources on the net for XSL Transformations.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd:  Simple xhtml/entity resolver?</header>
    <body>    Hello,    (forwarding this to the list, as I accidentally only sent to Rolf)     I think there is a misunderstanding. I don't want to output as XML. I want to render the XHTML as text like a very primitive browser would display it.     I'm building a String by traversing the tree by calling Element.getContent(). For example, a © can be encoded in XML as "&amp;amp;copy;". Presumably, the Element tree would contain an EntityRef with name "copy". But what if an XML document contains "&amp;amp;169;" or "&amp;amp;x00A9;"? How would the EntityRef object look like?      Thanks!         Take care      Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;   Hi Oliver.    If you already have the XHTML content as JDOM Elements, then you should be able to (just) do:       If you want to change the format of the output (indenting, etc.), you can add a 'Format' to the XMLOutputter with:       I think you may be chasing a red-herring with the Entity References.    The EntityRef code is a 'CYA' implementation, but, in reality, the SystemID and PublicID are never going to be needed in regular usage.    The only place I know of where you have entity references is if you specify your input parser should ignore entity-reference lookups when parsing, and in JDOM you will end up with an EntityRef instead of it's 'underlying' text.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Hi Oliver.    If you already have the XHTML content as JDOM Elements, then you should be able to (just) do:       If you want to change the format of the output (indenting, etc.), you can add a 'Format' to the XMLOutputter with:       I think you may be chasing a red-herring with the Entity References.    The EntityRef code is a 'CYA' implementation, but, in reality, the SystemID and PublicID are never going to be needed in regular usage.    The only place I know of where you have entity references is if you specify your input parser should ignore entity-reference lookups when parsing, and in JDOM you will end up with an EntityRef instead of it's 'underlying' text.    Rolf    &lt;span&gt; cur &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Hello,    I need a simple way to convert some XHTML fragments, provided as a JDOM Element, into plain text. I am willing to ignore most HTML tags and consider only the most commonly used predefined entities.    In JDOM, an entity reference has a name, a public id and a system id. I think I know what the named means, for named entities. But what about numeric entities, how do I get the code point? And what are public id and system id?    Thanks!    Take care Oliver   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Simple xhtml/entity resolver?</header>
    <body>Hello,    I need a simple way to convert some XHTML fragments, provided as a JDOM Element, into plain text. I am willing to ignore most HTML tags and consider only the most commonly used predefined entities.    In JDOM, an entity reference has a name, a public id and a system id. I think I know what the named means, for named entities. But what about numeric entities, how do I get the code point? And what are public id and system id?    Thanks!    Take care Oliver</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Rolf,    Le 26 mars 2012 à 17:20, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  Just checking that we have things 'straight'.... since I have not heard back from you.   &lt;/div&gt;   I'm sorry, I'm swamped and have to accept it.   &lt;div class="quote quote-1"&gt;  Three things... 1. I said that SAX parser will ignore the DTD unless you 'DTD-validate'... but I was wrong, (at least) Xerces SAX parser will apply the default attribtues.   &lt;/div&gt;   And Saxon AElfred. Xerces is the default in all java distributions of Sun and Apple, or? (Sun's Xerces that is)   &lt;div class="quote quote-1"&gt;  2. You said "Removing the validation, sadly disables the passing of attribute presence info, it seems." which I think you were saying because I had said that before to you.... but this is wrong .. .see above. Do you have 'evidence' that this is true though? Or are you basing this on what I told you before...?   &lt;/div&gt;   The example I provided showed it to me: passing no parameter to new SAXBuilder &lt;br/&gt; will avoid, with Xerces' default, the passing of any location info.    I'm sorry, I'll have to accept jDOM 2.0 to go out without evaluating a full &lt;br/&gt; solution...    paul   &lt;div class="quote quote-1"&gt;  3. It seems (at least with the Xerces 2.11 parser) that using non-validating SAXBuilder will produce the exact results you want... (with the exception of Namespace declarations). Can you confirm this?    I have been thinking about the Namespace problem, and, I don't think that there is a 'good' solution on the 'output' side of things, but, there is value in having a tool that: - scans the entire 'Element' tree - 'explicitly' declares namespaces at the highest common node in the tree    This 'tool' will thus 'declare' the namespace at a 'high' level, and the outputter will not need to re-declare them at the lower levels.... which, I would guess, would result in removing many low-level Namespace declarations, and replace them with a single high-level declaration. This would 'solve' your problem in one sense.    Another alternative for you would be to manually remove the not-specified attributes just prior to output:       if you physically remove the (default) attributes from the document, then they will not affect the namespace calculations for the output either.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Previous 'Downloads'</header>
    <body>Oh, I mean the 'zip' files on  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt; page.    So, I intend to remove the files like: jdom-2.x-2011.12.07.09.37.zip and other files that are *not* BETA releases.    In fact, I think the complete list of files to be removed is:    jdom-1.1.2.hf1.zip jdom-2.x-2012.02.02.22.29.zip jdom-2.x-2012.01.* jdom-2.x-2011.*    There should be no reason for anyone to want these files, and they can be rebuilt from the git history anyway.    Rolf    &lt;span&gt; pa &lt;a class="email mklink"&gt; ... &lt;/a&gt; @hoplahup.net &lt;/span&gt; wrote:   &lt;div class="quote quote-1"&gt;  Not any release or?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Previous 'Downloads'</header>
    <body>Not any release or?    paul    Le 27 mars 2012 à 14:48, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  Hi All.    I am about to go through and purge some of the (very) outdated downloads from the github site. I intend to remove all but the BETA releases (and the dev jars zip file).    I cannot think of any reason to keep the older files hanging around, and, unless someone can come up with a good reason within the day, I will purge them tomorrow (28th).</body>
  </mail>
  <mail>
    <header>[jdom-interest] Previous 'Downloads'</header>
    <body>Hi All.    I am about to go through and purge some of the (very) outdated downloads from the github site. I intend to remove all but the BETA releases (and the dev jars zip file).    I cannot think of any reason to keep the older files hanging around, and, unless someone can come up with a good reason within the day, I will purge them tomorrow (28th).    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JOM 2.x BETA Release 5 - the last BETA</header>
    <body>Hi all.    I have just pushed out the last BETA release for JDOM 2.x    As with previous BETA releases, the normal pages are:    Downloads: &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;  The Release:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.5-BETA.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.5-BETA.zip &lt;/a&gt;  The APIDocs: &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html &lt;/a&gt;  The Code Coverage:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt;  The JUnit Report:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt;   Finally, read up on JDOM 2.x here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM-2.0" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM-2.0 &lt;/a&gt;   The changes from BETA-4 are mostly performance and 'Housekeeping'.    Have a look at the performance page:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/performance.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/performance.html &lt;/a&gt;   There are no anticipated changes to happen before the final release.    When the final release happens, the differences will be:    - primary release to www.jdom.org, and also to github and maven - will be called jdom-2.0.0.jar - will be in the org.jdom group, and jdom artifact on maven.    My focus for the next week or so will be updating the jdom.org pages to reflect the new release. When it is ready to go I will be coordinating with Jason to publish the pages at jdom.org.    The timing of this is uncertain, and the official JDOM 2.0.0 release may be happening any time in (hopefully early) April.    Happy coding    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Hi Paul, all.    Just checking that we have things 'straight'.... since I have not heard back from you.    Three things... 1. I said that SAX parser will ignore the DTD unless you 'DTD-validate'... but I was wrong, (at least) Xerces SAX parser will apply the default attribtues. 2. You said "Removing the validation, sadly disables the passing of attribute presence info, it seems." which I think you were saying because I had said that before to you.... but this is wrong .. .see above. Do you have 'evidence' that this is true though? Or are you basing this on what I told you before...? 3. It seems (at least with the Xerces 2.11 parser) that using non-validating SAXBuilder will produce the exact results you want... (with the exception of Namespace declarations). Can you confirm this?    I have been thinking about the Namespace problem, and, I don't think that there is a 'good' solution on the 'output' side of things, but, there is value in having a tool that: - scans the entire 'Element' tree - 'explicitly' declares namespaces at the highest common node in the tree    This 'tool' will thus 'declare' the namespace at a 'high' level, and the outputter will not need to re-declare them at the lower levels.... which, I would guess, would result in removing many low-level Namespace declarations, and replace them with a single high-level declaration. This would 'solve' your problem in one sense.    Another alternative for you would be to manually remove the not-specified attributes just prior to output:       if you physically remove the (default) attributes from the document, then they will not affect the namespace calculations for the output either.    Rolf   &lt;div class="quote quote-1"&gt;  In fact, going back to the original example, I have the following code:    public static void main(String[] args) throws JDOMException, String xml =   &lt;/div&gt;  " &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;   &lt;div class="quote quote-1"&gt;     And it does exactly what you want.... (except for the namespaces).</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>On 2012-03-23 09:40:39 Paul Libbrecht wrote:   &lt;div class="quote quote-1"&gt;  my experience that any parser, Xerces included, parses the DTD completely (including included entities as is the case here) and injects all default values of attributes (including namespaces) without it being validating.   &lt;/div&gt;   We are using JDOM-1.1 and Xerces and my experience that with an XML schema that provides default values you only get the defaults when doing validation. This is XMLSchema, not DTD, so it is possible that the rules are different... it is also possible that xerces can be configured in more ways...   &lt;div class="footer noise"&gt;  --   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Hi Paul, all.    So, I will have to 'eat crow'... the Xerces parser will apply defaulted values even if the DTD is completely broken.... which is odd (note the xxx/yyy discrepency and that 'yyy' is not even declared an Element!).    String xml = "&amp;lt;!DOCTYPE xxx [ &amp;lt;!ATTLIST yyy dodef CDATA \"mydef\" &amp;gt; ]   &lt;div class="quote quote-1"&gt;    &lt;/div&gt;     gives       .... but, when I test it, the new JDOM Format feature works...       gives       So, now I am more confused... Xerces will apply a completely broken DTD to a document, (even the root element name is wrong). Further, it will apply the default attribute values, and it will have the right 'flags' on the values when it tells JDOM about them, and JDOM will flag the attribute as 'not specified', and will ignore it when outputting the XML (with the correct flag set on the Format instance).    In fact, going back to the original example, I have the following code:    String xml = " &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;    And it does exactly what you want.... (except for the namespaces).    Rolf    On 23/03/2012 9:40 AM, Paul Libbrecht wrote:   &lt;div class="quote quote-1"&gt;  Rolf,    I think your assumption is wrong: I remember Michael Kay had a long FAQ entry &lt;br/&gt; about justifying why a DTD was read even though validation was not activated &lt;br/&gt; (for Saxon Aelfred which we have extensively used) and indeed it is my &lt;br/&gt; experience that any parser, Xerces included, parses the DTD completely &lt;br/&gt; (including included entities as is the case here) and injects all default values &lt;br/&gt; of attributes (including namespaces) without it being validating.    Validating implies breaking somehow after an error (the first or the last?).    To summarize I see the following modes: - ignore the DTD completely (no parser does this unless explicitly told it) - use DTD (and inclusions) for all default values - use DTD and report all errors but keep doing - use DTD and break at first error    My understanding is that my SAXBuilder.build was throwing an exception if I &lt;br/&gt; activated DTD validation (so the last two possibilities) thus making it &lt;br/&gt; impossible obtain a good jdom Document object form a slightly invalid document.    paul    PS: sorry for the mailing-fuss, I thought I sent it to the list a bit later &lt;br/&gt; realizing that &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; was not... the list...    Le 23 mars 2012 à 14:21, Rolf Lear a écrit :   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Rolf,    I think your assumption is wrong: I remember Michael Kay had a long FAQ entry &lt;br/&gt; about justifying why a DTD was read even though validation was not activated &lt;br/&gt; (for Saxon Aelfred which we have extensively used) and indeed it is my &lt;br/&gt; experience that any parser, Xerces included, parses the DTD completely &lt;br/&gt; (including included entities as is the case here) and injects all default values &lt;br/&gt; of attributes (including namespaces) without it being validating.    Validating implies breaking somehow after an error (the first or the last?).    To summarize I see the following modes: - ignore the DTD completely (no parser does this unless explicitly told it) - use DTD (and inclusions) for all default values - use DTD and report all errors but keep doing - use DTD and break at first error    My understanding is that my SAXBuilder.build was throwing an exception if I &lt;br/&gt; activated DTD validation (so the last two possibilities) thus making it &lt;br/&gt; impossible obtain a good jdom Document object form a slightly invalid document.    paul    PS: sorry for the mailing-fuss, I thought I sent it to the list a bit later &lt;br/&gt; realizing that &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; was not... the list...    Le 23 mars 2012 à 14:21, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  Hi Paul.    If you were wondering why no-one on the list has commented, it may be because &lt;br/&gt; you you never sent it to the list, just to me ... ;-), so I have CC'd the list &lt;br/&gt; for you...    Anyway, I have been looking in to things, and I think the problem is that you &lt;br/&gt; have missed a detail in the way the data is processed.    Using your example document:  &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;   This document (apart from being 'big'), refers to a single DTD, which, in the &lt;br/&gt; case of this document, only really defaults one attribute: 'scheme' on the &lt;br/&gt; 'competency' element (which defaults to "PISA").    Now, as far as I know, there are only the following ways to reference content of &lt;br/&gt; the DTD:    If you are doing no DTD validation, the DTD will still be accessed to resolve &lt;br/&gt; entity references. But, that is the *only* thing that will be pulled form the &lt;br/&gt; DTD.    If you do validation, then the entire DTD is read, and the validation is done, &lt;br/&gt; and any attributes defaulted in the DTD will be created in the XML 'Model'.    So, it is my understanding that it is impossible to have 'all the defaulted &lt;br/&gt; attributes' without also having done the full DTD Validation.    As it happens, I often use the tool 'xmllint' (available on most unix systems, &lt;br/&gt; including linux) to check my understanding, and, I may be wrong on this because &lt;br/&gt; xmllint has the argument --dtdattr which appears to do a partial thing of &lt;br/&gt; loading the defaulted attrs, but not a full validation...    Anyway, the point is that, using JDOM, and standard SAX parsing, the only time &lt;br/&gt; you could have had 'all the defaulted attrs was when you were doing full &lt;br/&gt; validation anyway... and that full validation fails.    So, if you do not do validating, you will not get the 'scheme' attributes, and &lt;br/&gt; you will not output the scheme attributes (you do not have them to output...).    If you do validating, then you have the scheme attributes, and then you can now &lt;br/&gt; choose to ignore them on the output with the new Format setting.    Your particular problem is confusing to me, and there must be something I am &lt;br/&gt; missing.... I can't figure out why you think you are getting all the defaulted &lt;br/&gt; attributes when it is clear you are not validating...    So, that is my first issue, and I think it means that you are confused too ;-)    The second issue with the namespace declarations is also confusing to me. In &lt;br/&gt; your example document, every single namespace declaration is essential.... not a &lt;br/&gt; single one is 'redundant'.    Is it possible that it is just a bad example?    Anyway, at the worst possible case, I have a hack that would probably make you &lt;br/&gt; happy, but makes me cringe.... I would rather understand your problem properly &lt;br/&gt; before I suggest it.    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Hi Paul.    If you were wondering why no-one on the list has commented, it may be because you you never sent it to the list, just to me ... ;-), so I have CC'd the list for you...    Anyway, I have been looking in to things, and I think the problem is that you have missed a detail in the way the data is processed.    Using your example document:  &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;   This document (apart from being 'big'), refers to a single DTD, which, in the case of this document, only really defaults one attribute: 'scheme' on the 'competency' element (which defaults to "PISA").    Now, as far as I know, there are only the following ways to reference content of the DTD:    If you are doing no DTD validation, the DTD will still be accessed to resolve entity references. But, that is the *only* thing that will be pulled form the DTD.    If you do validation, then the entire DTD is read, and the validation is done, and any attributes defaulted in the DTD will be created in the XML 'Model'.    So, it is my understanding that it is impossible to have 'all the defaulted attributes' without also having done the full DTD Validation.    As it happens, I often use the tool 'xmllint' (available on most unix systems, including linux) to check my understanding, and, I may be wrong on this because xmllint has the argument --dtdattr which appears to do a partial thing of loading the defaulted attrs, but not a full validation...    Anyway, the point is that, using JDOM, and standard SAX parsing, the only time you could have had 'all the defaulted attrs was when you were doing full validation anyway... and that full validation fails.    So, if you do not do validating, you will not get the 'scheme' attributes, and you will not output the scheme attributes (you do not have them to output...).    If you do validating, then you have the scheme attributes, and then you can now choose to ignore them on the output with the new Format setting.    Your particular problem is confusing to me, and there must be something I am missing.... I can't figure out why you think you are getting all the defaulted attributes when it is clear you are not validating...    So, that is my first issue, and I think it means that you are confused too ;-)    The second issue with the namespace declarations is also confusing to me. In your example document, every single namespace declaration is essential.... not a single one is 'redundant'.    Is it possible that it is just a bad example?    Anyway, at the worst possible case, I have a hack that would probably make you happy, but makes me cringe.... I would rather understand your problem properly before I suggest it.    Thanks    Rolf    On 22/03/2012 4:27 PM, Paul Libbrecht wrote:   &lt;div class="quote quote-1"&gt;   Hello list,    Rolf has been so kind to show me how JDOM issue #5 can be run.    So I ran the following snippet:       which allows me to parse a JDOM source, make modifications (typically: &lt;br/&gt; refactorings), then output with almost no difference.    The big advantage to that is that the attributes that were not there... are &lt;br/&gt; simply not injected from the DTD. This is enormous in some XML editing tradition which uses implied values a lot.    There's two BUT:    1) This currently fails if the validation fails and this is a big problem to me. An example file would be the following:  &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;  which references a DTD nearby. This is a manually edited file.    Removing the validation, sadly disables the passing of attribute presence info, &lt;br/&gt; it seems. Rolf, is there a way that the attribute presence info is passed but the &lt;br/&gt; validation is not stopped?    2) namespace declarations, which are kind of attributes, still resurface. They &lt;br/&gt; should be avoided if not present ideally. Doable?    The approach of Rolf is better than the one I had because mine was simply &lt;br/&gt; checking in the DTD if the attribute was provided by it and, if yes, removing &lt;br/&gt; its output while in Rolf's approach, an attribute that is there is output if... &lt;br/&gt; it was there, simply!    Thanks for comments.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] In the 11th Hour</header>
    <body>Hi Rolf,    Thank you very much for the performance details! I definitely think you made me a better java programmer. Mike Brenner    ----------------------------------------------- From: Rolf Lear [mailto: &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; ] Sent: Thursday, March 22, 2012 6:02 PM To: Brenner, Mike Cc: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] In the 11th Hour    On 22/03/2012 2:47 PM, Brenner, Mike wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf, I hope you decide to take the time to post how you accomplished this,  to make &lt;br/&gt; us all better java programmers.   &lt;/div&gt;   Hi Mike.    Thanks... I think.... but I have to admit, I am still learning things too (and have been for years... which I think helps).    It helps that I have spent years doing exactly this sort of thing (high-efficiency Java code) as a regular job. I typically focus more on the memory side of things because memory typically is the first thing to break with Java... when you run out of -Xmx it just dies, but if it runs slow, well, there's always more days to process things in... ;-)    My Java work experience is very useful though... I typically work on 'big' machines, in the finance arena, where setting -Xmx64g is 'routine', and processing tens of millions of records in memory at one time is also common. Having lots of memory creates bad habits in programmers, and when you develop your applications with small scale data, it is easy to set -Xmx2g, build your system, and then, when you scale the system to big data, it all blows up because you have non-linear scalability. That's sort of where I get involved... ;-)    So, if you take the specific example of the 'Scan' times, I can go through the process I took to get it fast (again).    The first trick is to have realistic expectations of what results you should see. With this code, when I started with JDOM 2.x I was able to take a benchmark of the code, and I have been able to refer back to that. That creates a 'minimum' expectation. If I had not done that then I would not have known there was a problem. I am a believer that performance should be 'regression tested' as much as the actual functionality.    So, having identified the scan time as a problem, I just took the scan benchmark code and wrote a loop around it....    System.out.printf("Looped %d times @ %.3fms each (%d lines)\n", cnt,    The challenge is then simply to make the time-per-thousand as small as possible.    Then, while that is running, you launch the trusty $JAVA_HOME/bin/jvisualvm , and you profile the code.    With some tweaking of the settings, you should be looking for three things: CPU Hogs, Memory Hogs, and Tight Loops    - Profile the CPU time, and once the profiling has taken 'some time' (20 seconds or so), you create a snapshot of the profiling. Look at the profile (not the snapshot), and get an idea of the methods that took the most time. Then, in the snapshot, dig down in to it to find out where the code is being called from, why it is called, how often, and where it is spending its time. This is a little bit of 'black magic' to identify where the 'hot spot' is. You need to be able to look at the source code, switch to the snapshot, and back again, and so on.    - while you are in this snapshot, look for items that are called very often. Even a small improvement on 'tight' code will make a big difference. (I have spent a lot of time working on the 'Verifier' for example).    Then, once you have identified the 'hot' code you can look at the code, and decide if things could be done differently. Even a small change can make a difference. Once you make a small change, re-run the test loop (no profiling). Check to see whether it is any faster (or slower).    When I start running out of things in the CPU profiles to 'tweak', I start looking at the memory side of things. Often you see a lot of memory allocation in strange patterns. Use the Memory profiler in jvisualvm (make sure you change the setting to enable "Record allocation's stack trace").    Getting back to the 'scan' loops, I tried a number of different changes to get things better. Changing the whole iterator around (making hasNext() do nothing, and putting all the logic in to 'next()') brought it from 3.2ms to about 2.7ms... which was great, but not as good as JDOM 1.x. So, I after looking at things some more, I decided to try to replace the LinkedList as a stack. I know this sort of thing makes a difference (from experience). I was somewhat surprised by how much of a difference it made though....    For the record, the reason I chose the DescendantIterator to work on is because I had already gone through this sort of exercise with the ContentList Iterators before (bringing the XPath code from 90ms to 30ms), so I did not think I would find much there. If I was starting 'fresh' I would have looked at the lower levels some more too.    Once I had make a good change, I reran the full 'benchmark' and checked the results.    A more interesting fix was the one on the FormatStack. I introduced the FormatStack itself to solve a performance problem - having to keep re-calculating the 'state' of the output formats... But, when I ran the XMLOutputter code through the Memory profiler I found a lot of time was spent in the Format.escapeText() method. This is a very tight method call, and I tried really hard to make it faster. I did a few things which made a difference, but, when I changed from 'Raw' format to 'Pretty' format, it was still very slow. I cold not find the slow-down until I checked the memory profiler, and identified that a huge amount of char[] memory was being created in the FormatStack.push() method.    Memory is a double-edged sword in Java (and other languages). For every byte you allocate, you also need to collect it. Allocating is slow, and collecting is slow (especially if it is a 'full' collection - single-threaded).    So, as soon as I saw all that memory, and realized that it was coming from 'build the indent string' type string concatenation, I found a way to not do that unless 'things change', so, now the FormatStack reuses the indents. This made a huge impact on performance. Saving the allocation of memory pays for itself three times over: not having to do the calculation of the new value, not having to allocate and store the result, and not having to GC it later.    Additionally, because JDOM has a comprehensive test harness, it is easy to make reliable changes, even if they would otherwise be called 'big'. It becomes 'easy' to play with things and see how it changes.    Yet another interesting one is the 'escapeText()' code in Format. It used to look like:    return true;  // Safer this way per  &lt;a class="exlink mklink" href="http://unicode.org/faq/utf_bom.html#utf8-4" rel="nofollow"&gt; http://unicode.org/faq/utf_bom.html#utf8-4 &lt;/a&gt;  if (Verifier.isHighSurrogate(ch)) return true;  // Safer this way per  &lt;a class="exlink mklink" href="http://unicode.org/faq/utf_bom.html#utf8-4" rel="nofollow"&gt; http://unicode.org/faq/utf_bom.html#utf8-4 &lt;/a&gt;   // ignore problems. // Return false if we don't know.  This risks not escaping // things which should be escaped, but also means people won't // start getting loads of unnecessary escapes.    That is a 'big' method, especially when it is called for *every* character that is output by JDOM. The thing is that the nature of the output (7bit, 8bit, 16bit, Charset, or default) is known when the Format instance is created. Having to check again for each character is unnecessary. So, I changed the code to have different escape strategies for each type, and replaced the 'Default' with one of a set of them. Now, for example, if you are outputting to a UTF-8 based output, the method is simply:       And, since I have different instances of the class for different 'shouldEscape()' implementations, the decision is made once for each Format, instead of once for each char.    Summary....    Here are some 'tips' I have come to learn, and they influence my coding style, and how I look at performance problems.    Some of them have bad reputations... and people complain about 'optimizing too early', ... but, it works for me.    Use 'final' as liberally as possible. Classes, methods, variables, parameters, everything.    I have learned, over the years, to be very wary of the Collections API when it comes to memory and performance. They are all extreme memory hogs, and as a result, they are slow... Be careful using them in performance-critical code. arrays of primitives are often just as easy to use, and are faster.    while-loops with break/continue statements are faster than conditionals in the loop.    loops with a constant test are much faster than loops with conditionals... for example:    ....    the above is fine, but this is better:    ...    When you can, do count-down loops instead: ....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] In the 11th Hour</header>
    <body>On 22/03/2012 2:47 PM, Brenner, Mike wrote:   &lt;div class="quote quote-1"&gt;  Hi Rolf, I hope you decide to take the time to post how you accomplished this,  to make &lt;br/&gt; us all better java programmers.    Thanks, Mike Brenner   &lt;/div&gt;  Hi Mike.    Thanks... I think.... but I have to admit, I am still learning things too (and have been for years... which I think helps).    It helps that I have spent years doing exactly this sort of thing (high-efficiency Java code) as a regular job. I typically focus more on the memory side of things because memory typically is the first thing to break with Java... when you run out of -Xmx it just dies, but if it runs slow, well, there's always more days to process things in... ;-)    My Java work experience is very useful though... I typically work on 'big' machines, in the finance arena, where setting -Xmx64g is 'routine', and processing tens of millions of records in memory at one time is also common. Having lots of memory creates bad habits in programmers, and when you develop your applications with small scale data, it is easy to set -Xmx2g, build your system, and then, when you scale the system to big data, it all blows up because you have non-linear scalability. That's sort of where I get involved... ;-)    So, if you take the specific example of the 'Scan' times, I can go through the process I took to get it fast (again).    The first trick is to have realistic expectations of what results you should see. With this code, when I started with JDOM 2.x I was able to take a benchmark of the code, and I have been able to refer back to that. That creates a 'minimum' expectation. If I had not done that then I would not have known there was a problem. I am a believer that performance should be 'regression tested' as much as the actual functionality.    So, having identified the scan time as a problem, I just took the scan benchmark code and wrote a loop around it....    System.out.printf("Looped %d times @ %.3fms each (%d lines)\n", cnt,    The challenge is then simply to make the time-per-thousand as small as possible.    Then, while that is running, you launch the trusty $JAVA_HOME/bin/jvisualvm , and you profile the code.    With some tweaking of the settings, you should be looking for three things: CPU Hogs, Memory Hogs, and Tight Loops    - Profile the CPU time, and once the profiling has taken 'some time' (20 seconds or so), you create a snapshot of the profiling. Look at the profile (not the snapshot), and get an idea of the methods that took the most time. Then, in the snapshot, dig down in to it to find out where the code is being called from, why it is called, how often, and where it is spending its time. This is a little bit of 'black magic' to identify where the 'hot spot' is. You need to be able to look at the source code, switch to the snapshot, and back again, and so on.    - while you are in this snapshot, look for items that are called very often. Even a small improvement on 'tight' code will make a big difference. (I have spent a lot of time working on the 'Verifier' for example).    Then, once you have identified the 'hot' code you can look at the code, and decide if things could be done differently. Even a small change can make a difference. Once you make a small change, re-run the test loop (no profiling). Check to see whether it is any faster (or slower).    When I start running out of things in the CPU profiles to 'tweak', I start looking at the memory side of things. Often you see a lot of memory allocation in strange patterns. Use the Memory profiler in jvisualvm (make sure you change the setting to enable "Record allocation's stack trace").    Getting back to the 'scan' loops, I tried a number of different changes to get things better. Changing the whole iterator around (making hasNext() do nothing, and putting all the logic in to 'next()') brought it from 3.2ms to about 2.7ms... which was great, but not as good as JDOM 1.x. So, I after looking at things some more, I decided to try to replace the LinkedList as a stack. I know this sort of thing makes a difference (from experience). I was somewhat surprised by how much of a difference it made though....    For the record, the reason I chose the DescendantIterator to work on is because I had already gone through this sort of exercise with the ContentList Iterators before (bringing the XPath code from 90ms to 30ms), so I did not think I would find much there. If I was starting 'fresh' I would have looked at the lower levels some more too.    Once I had make a good change, I reran the full 'benchmark' and checked the results.    A more interesting fix was the one on the FormatStack. I introduced the FormatStack itself to solve a performance problem - having to keep re-calculating the 'state' of the output formats... But, when I ran the XMLOutputter code through the Memory profiler I found a lot of time was spent in the Format.escapeText() method. This is a very tight method call, and I tried really hard to make it faster. I did a few things which made a difference, but, when I changed from 'Raw' format to 'Pretty' format, it was still very slow. I cold not find the slow-down until I checked the memory profiler, and identified that a huge amount of char[] memory was being created in the FormatStack.push() method.    Memory is a double-edged sword in Java (and other languages). For every byte you allocate, you also need to collect it. Allocating is slow, and collecting is slow (especially if it is a 'full' collection - single-threaded).    So, as soon as I saw all that memory, and realized that it was coming from 'build the indent string' type string concatenation, I found a way to not do that unless 'things change', so, now the FormatStack reuses the indents. This made a huge impact on performance. Saving the allocation of memory pays for itself three times over: not having to do the calculation of the new value, not having to allocate and store the result, and not having to GC it later.    Additionally, because JDOM has a comprehensive test harness, it is easy to make reliable changes, even if they would otherwise be called 'big'. It becomes 'easy' to play with things and see how it changes.    Yet another interesting one is the 'escapeText()' code in Format. It used to look like:    return true;  // Safer this way per  &lt;a class="exlink mklink" href="http://unicode.org/faq/utf_bom.html#utf8-4" rel="nofollow"&gt; http://unicode.org/faq/utf_bom.html#utf8-4 &lt;/a&gt;  if (Verifier.isHighSurrogate(ch)) return true;  // Safer this way per  &lt;a class="exlink mklink" href="http://unicode.org/faq/utf_bom.html#utf8-4" rel="nofollow"&gt; http://unicode.org/faq/utf_bom.html#utf8-4 &lt;/a&gt;   // ignore problems. // Return false if we don't know.  This risks not escaping // things which should be escaped, but also means people won't // start getting loads of unnecessary escapes.    That is a 'big' method, especially when it is called for *every* character that is output by JDOM. The thing is that the nature of the output (7bit, 8bit, 16bit, Charset, or default) is known when the Format instance is created. Having to check again for each character is unnecessary. So, I changed the code to have different escape strategies for each type, and replaced the 'Default' with one of a set of them. Now, for example, if you are outputting to a UTF-8 based output, the method is simply:       And, since I have different instances of the class for different 'shouldEscape()' implementations, the decision is made once for each Format, instead of once for each char.    Summary....    Here are some 'tips' I have come to learn, and they influence my coding style, and how I look at performance problems.    Some of them have bad reputations... and people complain about 'optimizing too early', ... but, it works for me.    Use 'final' as liberally as possible. Classes, methods, variables, parameters, everything.    I have learned, over the years, to be very wary of the Collections API when it comes to memory and performance. They are all extreme memory hogs, and as a result, they are slow... Be careful using them in performance-critical code. arrays of primitives are often just as easy to use, and are faster.    while-loops with break/continue statements are faster than conditionals in the loop.    loops with a constant test are much faster than loops with conditionals... for example:    ....    the above is fine, but this is better:    ...    When you can, do count-down loops instead: ....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Fwd: Hello and facing a problem with JDOM</header>
    <body>Hi Iman    I am unsure of how you added the JDOM 1.1.3 the first way, but, if it works when you add the Jars individually then the Jars themselves must be OK, the problem must be in how they are added to eclipse.    I wonder whether you are just copying the JDOM jars over the 'old' 1.1.2 jars, but they have different names... jdom-1.1.3.jar not the old jdom-1.1.2.jar, and that eclipse is looking for the 1.1.2 version of the name.....    There are a few things I try to do when I have eclipse build problems: 1. select your project and right-click -&amp;gt; Refresh (F5) to make sure eclipse is up-to-date with everything. 2. open the 'problems' view: Window -&amp;gt; Show View -&amp;gt; Problems    You will see in the problems view all the issues that Eclipse has, with the errors at the top. If you select the 'errors' (with red icons), copy them, and paste them in to an e-mail I will have a better idea of what's wrong.    Rolf    On 22/03/2012 3:21 PM, Jason Hunter wrote:   &lt;div class="quote quote-1"&gt;  Forwarding to the jdom-interest mailing list.    -jh-    Begin forwarded message:   &lt;div class="quote quote-2"&gt;  &lt;span&gt; iman &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &lt;span&gt; iman &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; *Subject: **Hello and facing a problem with JDOM* *Date: *March 22, 2012 3:16:48 PM EDT *To: * &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt;    Hello Dear Jason,    First of all, I am Iman Zabet, and thank you about your JDOM project.    Since, I have a problem with the latest version of your product and can not find a forum of your website, I wrote this email for your considerations.    I have downloaded the last version of JDOM(1.1.3), and intended to substitute its build jar files with the previous version (1.1.2).    Unfortunately, when I want to add them in a user-defined library in "Java Build Path" in Eclipse, they are added as (missing) resourses and can not be recognized by IDE in workspace. When I switch back again to the previous version every thing goes okay!    Is this issue about my old 2009 version of eclipse of a common issue?    But I found they can be added as individual jar (with "add external jars..." botton), not under a user-defined folder with other resources!    Thanks in advance, Iman   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt; &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM Issue #5 - DTD-aware Attribute output</header>
    <body>Hello list,    Rolf has been so kind to show me how JDOM issue #5 can be run.    So I ran the following snippet:       which allows me to parse a JDOM source, make modifications (typically: &lt;br/&gt; refactorings), then output with almost no difference.    The big advantage to that is that the attributes that were not there... are &lt;br/&gt; simply not injected from the DTD. This is enormous in some XML editing tradition which uses implied values a lot.    There's two BUT:    1) This currently fails if the validation fails and this is a big problem to me. An example file would be the following:  &lt;a class="exlink mklink" href="http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath" rel="nofollow"&gt; http://svn.activemath.org/LeAM-calculus/LeAM_calculus/oqmath/contin.oqmath &lt;/a&gt;  which references a DTD nearby. This is a manually edited file.    Removing the validation, sadly disables the passing of attribute presence info, &lt;br/&gt; it seems. Rolf, is there a way that the attribute presence info is passed but the &lt;br/&gt; validation is not stopped?    2) namespace declarations, which are kind of attributes, still resurface. They &lt;br/&gt; should be avoided if not present ideally. Doable?    The approach of Rolf is better than the one I had because mine was simply &lt;br/&gt; checking in the DTD if the attribute was provided by it and, if yes, removing &lt;br/&gt; its output while in Rolf's approach, an attribute that is there is output if... &lt;br/&gt; it was there, simply!    Thanks for comments.    paul</body>
  </mail>
  <mail>
    <header>[jdom-interest] Fwd: Hello and facing a problem with JDOM</header>
    <body>Forwarding to the jdom-interest mailing list.    -jh-    Begin forwarded message:   &lt;div class="quote quote-1"&gt;  &lt;span&gt; iman &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; Subject: Hello and facing a problem with JDOM Date: March 22, 2012 3:16:48 PM EDT To: &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt;   Hello Dear Jason,    First of all, I am Iman Zabet, and thank you about your JDOM project.    Since, I have a problem with the latest version of your product and can not find &lt;br/&gt; a forum of your website, I wrote this email for your considerations.    I have downloaded the last version of JDOM(1.1.3), and intended to substitute &lt;br/&gt; its build jar files with the previous version (1.1.2).    Unfortunately, when I want to add them in a user-defined library in "Java Build &lt;br/&gt; Path" in Eclipse, they are added as (missing) resourses and can not be &lt;br/&gt; recognized by IDE in workspace. When I switch back again to the previous version &lt;br/&gt; every thing goes okay!    Is this issue about my old 2009 version of eclipse of a common issue?    But I found they can be added as individual jar (with "add external jars..." &lt;br/&gt; botton), not under a user-defined folder with other resources!    Thanks in advance, Iman   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] In the 11th Hour</header>
    <body>Hi Rolf, I hope you decide to take the time to post how you accomplished this,  to make &lt;br/&gt; us all better java programmers.    Thanks, Mike Brenner   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On &lt;br/&gt; Behalf Of Rolf Lear Sent: Thursday, March 22, 2012 2:21 PM To: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt;  Subject: Re: [jdom-interest] In the 11th Hour    On 22/03/2012 11:31 AM, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  Hi all.   &lt;/div&gt;  ....   &lt;div class="quote quote-2"&gt;  The only current performance 'slip' is the time it takes to scan an entire document and report the Elements in it. This has slipped significantly from 2.3ms to 3.1ms. I have been investigating it, and it appears to be a function of the additional functionality in the DescendantIterator, and the type-safety of the code. I am still working on it though.   &lt;/div&gt;  And that slip is now fixed, with JDOM 2.x now running in 1.7ms, better than 20% improvement over JDOM 1.x    So, in all benchmarked components, JDOM 2.x outperforms JDOM 1.x, and uses less memory.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] In the 11th Hour</header>
    <body>On 22/03/2012 11:31 AM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi all.   &lt;/div&gt;  ....   &lt;div class="quote quote-1"&gt;  The only current performance 'slip' is the time it takes to scan an entire document and report the Elements in it. This has slipped significantly from 2.3ms to 3.1ms. I have been investigating it, and it appears to be a function of the additional functionality in the DescendantIterator, and the type-safety of the code. I am still working on it though.   &lt;/div&gt;  And that slip is now fixed, with JDOM 2.x now running in 1.7ms, better than 20% improvement over JDOM 1.x    So, in all benchmarked components, JDOM 2.x outperforms JDOM 1.x, and uses less memory.    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] In the 11th Hour</header>
    <body>Hi all.    I am running out of things to do with JDOM, and that means that it's ready to release. I have been playing with the performance of critical parts of the code, and have recently committed some improvements. Still, the fact is that JDOM 2.x is ready to go unless something comes up....    ... so, does anyone have any concerns?    I would really appreciate it if someone could go through the JavaDoc, check for any issues, etc. I have been through it a couple of times, and each time there's something to fix, and it is a thankless process. But a different set of eyes would be very useful.    I have one small performance issue to tackle, but, other than that there's nothing ... left ... to .... do ....    I anticipate making one more BETA version, probably Sunday Evening with the performance updates, but that will be the last one before the Easter release.    Here's the details on the performance of JDOM 2.x...    Rolf   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt; &lt;div class="footer noise"&gt;  ========================   &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;   I have just pushed through some performance fixes. In essence the fixes restore all performance benchmarks (except one) to be better than the same benchmarks on JDOM 1.x.    &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/performance.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/performance.html &lt;/a&gt;   All benchmarks compare apples to apples, are all run on my laptop, with the same data, etc.    SAX Parsing is as fast as before (slightly faster - less than 5% - parsing times are too erratic to get meaningful times), but note, the benchmark only tests a single parse, and JDOM 2.x has massive improvements in parser reuse, so in general, JDOM 2.x is significantly better.    XMLOutputting is much faster than before, and additionally the API is more consistent. Output is at least 15% faster (8ms instead of 10ms)    XPath access is significantly faster (about a third faster 15ms instead of 24ms)    Creating JDOM content (cloning an entire tree) is slightly faster (7.5%) than before (7.4ms instead of 8ms).    Additionally, the memory footprint is 10% less than before (2.06MB instead of 2.26MB)    The only current performance 'slip' is the time it takes to scan an entire document and report the Elements in it. This has slipped significantly from 2.3ms to 3.1ms. I have been investigating it, and it appears to be a function of the additional functionality in the DescendantIterator, and the type-safety of the code. I am still working on it though.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Initial questions - build jdom</header>
    <body>Hi again, George.    I put together a 'quick' primer for using JDOM (the current BETA version...):    &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2:-A-Primer" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2:-A-Primer &lt;/a&gt;   Rolf    &lt;span&gt; gse &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Windows 7, beginner to java.    The download page said "Binary releases come with source, but you're not required to build the code yourself."    q1. But there is no "bin" folder. Doesn't that mean a build is needed?    The README says the build "will generate a file called "jdom.jar" in the "./build" directory.    That file does not exist (from download), so I assume that a build is required.    q2. If the source files are .java, why does a build generate jar files? The jdk bin folder has .exe files.    I followed instructions to build. The results are shown in the Command Prompt below.    q3. Can you determine what the problem may be? build.bat    JDOM Build System    -----------------    Building with classpath c:\Program   &lt;/div&gt;    &lt;div class="quote quote-1"&gt;   Starting Ant...    Buildfile: build.xml    init:    [echo] -------- JDOM 1.1.2-snap ---------    prepare: prepare-src:    BUILD FAILED    file:C:file/Program%20Files/Java/jdom/build.xml:133: Directory c:\Program Files\Java\jdom\build\src creation was not successful for unknown reason    Total time: 0 seconds   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Initial questions - build jdom</header>
    <body>Hi George.    I imagine you have pulled the 1.1.3 version of JDOM.    The zip file is quite big, and contains a lot of 'stuff'. It does contain the JDOM jar (and a matching jar for javadocs and source if you use an IDE like eclipse). Have a look in the zip file in the build/ folder, and you will find build/jdom-1.1.3.jar    Hope that helps.    Though, having said that, if you are new to JDOM I encourage you to start with the (currently in very late beta - final version to be released in a couple of weeks) to work with JDOM 2.x    JDOM 2.x will be much easier for you to start with because it has a more intuitive system of generics, etc. (It has generics, 1.1.3 does not).    So, how about you get JDOM 2.x from  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.4-BETA.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.4-BETA.zip &lt;/a&gt;   That zip file contains the three jars (jdom, apidocs, and sources), as well as the dependancy jars you need to run it.    If you have any questions don't hesitate to shout out.    Happy coding    Rolf    &lt;span&gt; gse &lt;a class="email mklink"&gt; ... &lt;/a&gt; @gmail.com &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Windows 7, beginner to java.    The download page said "Binary releases come with source, but you're not required to build the code yourself."   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>[jdom-interest] Initial questions - build jdom</header>
    <body>Windows 7, beginner to java.    The download page said "Binary releases come with source, but you're not required to build the code yourself."    q1. But there is no "bin" folder. Doesn't that mean a build is needed?    The README says the build "will generate a file called "jdom.jar" in the "./build" directory.    That file does not exist (from download), so I assume that a build is required.    q2. If the source files are .java, why does a build generate jar files? The jdk bin folder has .exe files.    I followed instructions to build. The results are shown in the Command Prompt below.    q3. Can you determine what the problem may be? build.bat    JDOM Build System    -----------------    Building with classpath c:\Program    Starting Ant...    Buildfile: build.xml    init:    [echo] -------- JDOM 1.1.2-snap ---------    prepare: prepare-src:    BUILD FAILED    file:C:file/Program%20Files/Java/jdom/build.xml:133: Directory c:\Program Files\Java\jdom\build\src creation was not successful for unknown reason    Total time: 0 seconds</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>I think that is the close to the way it will happen... although I intend to go with a 3-digit version.    Also, I am curious about why you suggest 2.1 instead of 2.0 (or in my 3-digit thinking would it be 2.0.1 or 2.1.0?). The way you qualify it as being 'version 2.1 for the first production version' seems to imply that you expect 2.0 or something for the first non-production version.    I believe that the very first '2' release will be fully production-ready. The 'Easter' release date is for the 'final' and 'stable' release.    I have been convinced that the release will be just 'JDOM', and not 'JDOM2' and that the version number will reflect the difference. In essence, as you say, JDOM remains the same product as before, just a new version.    In my (current) way of 'sorting' out the version numbers, the three digits boil down to: a.b.c where 'a' is the 'API version', 'b' is the 'feature' version, and 'c' is the 'patch' version.    The major change to the API from JDOM 1.x.x to 2.x.x is reflected in the version number.    If any new features are added (in an API sable way) then the 'feature' version could be updated to 2.1.x, and any bug fixes to a particular feature version will be reflected in the final digit.    I do believe there will be some additional feature entry in to JDOM in the next year or so, so I expect there to be a 2.1.0 at some point (I am thinking XPath 2.0 support at a minimum), so while there may be some more 'regular' updates to JDOM, it does not imply that 2.0.0 is not production ready ... ;-)    So, I think, for the most part, you will find that the releases are similar to what you are suggesting (but a 3 digit version, and a the 'production ready' version will be at 2.0.0 not 2.1.0)    Rolf    On 19/03/2012 6:23 AM, Brenner, Mike wrote:   &lt;div class="quote quote-1"&gt;  I did not do all the work you did on it, so I don't think of jdom version 2 as a &lt;br/&gt; "different product called jdom2".    (BTW, the dual numbering of Java itself has always confused me -- is it java 1.7 &lt;br/&gt; or java 7 or java2 version 7 or java 2.7?)    My vote would go to JDOM version 2.1 for the first production version of the &lt;br/&gt; Rolf Lear work, but I can't say that I would really care if you choose some other naming &lt;br/&gt; convention.   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>In one sense, it would make sense to be a list, but the actual iterator returned is 'live', but a list could not be (I don't think).    As it is, even the iterator is complex enough, a list I think would be too challenging (and slow) to contemplate.... although it is worth investigating it further. Maybe my off-the-cuff assessment is wrong?    The iterator returned is read/write, but I can't see a way to make the list modifiable.    Still, I am open to some suggestions. I don't think I can get a working version of that out in less than a week or so, and that would be too long for an easter release, I think. If anyone is interested in taking a stab at making a list-based return type for getDescendants then I would happily consider it...    I will still take an hour or so to look in to the feasability some more    Rolf    On 19/03/2012 4:22 AM, Noel Grandin wrote:   &lt;div class="quote quote-1"&gt;  I would have thought that it should return some Collection sub-class, e.g. List    Since we're cleaning things up in JDOM2, now seems like a good time to make a change like that.    On 2012-03-15 23:59, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  Hi Craig.       Now that I think about it, it is a mess, but, that's because JDOM 1.x returned an iterator.    Technically your code should be:       I wonder whether I can make an 'Iterable' return value too.... it makes sense to, but I can't change the current return value for getDescendants without breaking compatibility...    suggestions?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>I did not do all the work you did on it, so I don't think of jdom version 2 as a &lt;br/&gt; "different product called jdom2".    (BTW, the dual numbering of Java itself has always confused me -- is it java 1.7 &lt;br/&gt; or java 7 or java2 version 7 or java 2.7?)    My vote would go to JDOM version 2.1 for the first production version of the &lt;br/&gt; Rolf Lear work, but I can't say that I would really care if you choose some other naming &lt;br/&gt; convention.   &lt;div class="quote quote-1"&gt;  -----Original Message----- From: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; [mailto: &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; ] On &lt;br/&gt; Behalf Of Rolf Lear Sent: Saturday, March 17, 2012 9:01 AM To: jdom Subject: [jdom-interest] Why are version numbers so complicated?    Hi all    I am getting (trying to get) things all nicely tidied up, organized, and automated for the JDOM2 releases. But, one thing I have not yet sorted out is the version number(s) for the 'final' JDOM2 release.    Here are the factors that influence the decision: - the www.jdom.org site is the official release site for all things JDOM. - The www.jdom.org site is going to need to have both versions (1.x and 2.x) available simultaneously. - maven has version number requirements - maven has some automated processing for dependency management - Technically the Java package is org.jdom2, not org.jdom - 'in my head' I have JDOM 1.x and JDOM2 - there is an established tradition for JDOM 1.x - there is already some sort of 'consistency' for JDOM2 - I anticipate there to be relatively routine releases for JDOM2 as new features are added and existing bugs fixed. I want it to be easy for new versions to be pushed out, and I want to be able to tell people 'just get the latest version' if there is a problem.    About the maven requirements: maven has a hierarchy of resources. At the top of the hierarchy is a 'group'. We are the 'org.jdom' group. Each group releases 'things', which in maven speak is an 'artifact'. Each artifact has versions. For example, there is the group 'org.jdom', with the artifacts 'jdom', and 'jdom-contrib', and it so happens that there are the jdom versions 1.1.2 and 1.1.3, as well as the jom-contrib version 1.1.3. There is no special 'maven' reason for the version number jdom 1.1.3 to match jdom-contrib 1.1.3.    I have also recently added the jdom2 artifact id for the last couple of JDOM2 beta releases. The reason I added jdom2 is because maven dependencies can be automated, where maven users can say 'I want to use the latest version of org.jdom artifact 'jdom'. I don't want people who expect to use JDOM 1.x to suddenly start getting JDOM2. But, I also needed to test whether I can do the releases to maven, and to make sure that the releases work. Finally, maven has an ordering for versions. It is logical, and systematic, but it means that, if we want to use use the two artifacts (jdom and jdom2) that I have already created, we need to keep in mind that the first available versions for them are 1.1.4 and 0.0.5 respectively.    So, thinking ahead to the first full JDOM2 release, should it be:    JDOM version 2 JDOM version 2.0.0 JDOM2 version 1 JDOM2 version 1.0.0 JDOM2 version 2 JDOM2 verison 2.0.0    Additionally, should I push the JDOM2 release out to the 'jdom' artifact on maven-central, or should I push it to the 'jdom2' artifact? (it affects the options for version numbers).    Anyway, the point is that I am wholly uncertain as to what the 'right' answer to this is. Does anyone have any suggestions, notice anything I have missed, etc?    Thanks</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>I would have thought that it should return some Collection sub-class, e.g. List    Since we're cleaning things up in JDOM2, now seems like a good time to make a change like that.    On 2012-03-15 23:59, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi Craig.       Now that I think about it, it is a mess, but, that's because JDOM 1.x returned an iterator.    Technically your code should be:       I wonder whether I can make an 'Iterable' return value too.... it makes sense to, but I can't change the current return value for getDescendants without breaking compatibility...    suggestions?</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Passing Element parameter in Jax-ws web method</header>
    <body>Hello,    Technically, you can work around by putting an Element into a container (or extend it, as Rolf said), but you may want to consider not passing an Element, but something simpler instead.    De-serialization re-creates all fields, including non-public ones, so the de-serialized Element should have a name if the original one had.    A major problem with object serialization is class compatibility. Compatibility requires that class definitions during serialization agree with class definitions during de-serialization, including all non-public members (except transient ones) and including all dependencies (i.e. all classes needed to compile).    This means if you have two Java processes communicate via serialization, and one of them had a code change (e.g. an updated library), this may break serialization, even if neither the classes directly involved, nor any API, nor any specifications have changed.    If you run a server and deploy a client on the web, users may have cached versions of the client, and changes to the code may not immediately propagate to the client, which may break server-client communication.    It is therefore advisable, that objects you want to serialize are as simple and stable as possible and that dependencies are few and under your control (i.e. you want to think twice before using some one else's library).    Element has a lot of dependencies (e.g. it depends on Document).    If you want to transmit XML, it is probably best to simply write it to a String and pass the String. After all, that's exactly what XML is for. In fact, serialization in Java internally uses XML.    Take care Oliver    &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt; &amp;gt; wrote:   &lt;div class="quote quote-1"&gt;  Hi Dehaene    Technically, the Element instance does have a no-arg constructor, only it is 'protected', not public.    For you to solve your problem in the short term, you may want to do:       Then you can make the method:       I am not familiar enough with the  jax-ws to know whether this will help enough.... It will make the implementation a little messier, but, by default, JDOM doe s not let you create invalid Elements (which an Element without a name would be...).    It is not likely possible to make the no-arg constructor public.    Anothe roption is to create a serialized Element? Element serialization (at least in JDOM2) is reliable....</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>Le 17 mars 2012 à 19:56, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  I think that some maven users will be suprised by a new jdom 2.0.0 release which &lt;br/&gt; causes compile failures, but, this will be a distinct minority, and easily &lt;br/&gt; resolved.   &lt;/div&gt;   Not a small one, really. And I thought we decided that this would not happen (having two different &lt;br/&gt; artifactIds). Isn't it the case?    My suggestion was to try to answer Jason's concern that people would keep &lt;br/&gt; building on jdom for centuries....    paul</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>There is a practical issue in that (apart from the increased Jar size). I build the maven bundle using an ant task, and the ant task only has the current version of the source available. I would need to access the JDOM 1.x jar, unjar it, and then rejar it in to the jdom 2.0.0 bundle.    Not that it is impossible, but, at any one point in time, I only have one branch of the git repository open.    Also, remember, a requirement of the oss-nexus (the way I have linked in to maven central) is that I have to have the Javadoc and source available for all Jars. This would make the process too unwieldy for the perceived benefit.    I think that some maven users will be suprised by a new jdom 2.0.0 release which causes compile failures, but, this will be a distinct minority, and easily resolved.    Additionally, I think I need to say that I really want JDOM 1.x usage to 'die'. I personally have very little interest in maintaining JDOM 1.x. It is not 'sexy' work. I am also pragmatic in the sense that I know it takes time to migrate (for example, I know it will take years to accomplish that even where I work), but when JDOM 2.0.0 is available, I think people need to know in as many ways as possible....    So, I don't think there is any way that I will bundle JDOM 1.x with JDOM 2.0.0. It sends all sorts of 'wrong' messages.    I think there is enough incentive as it is to move... but I am biased. I don't see how bundling jdom 1.x with jdom 2.x is going to add incentive though... it will just add to the inertia to 'stay'.    Rolf    On 17/03/2012 1:49 PM, Paul Libbrecht wrote:   &lt;div class="quote quote-1"&gt;  Why not make a package org.jdom with artifactId jdom version 2.0.0 containing both packages (org.jdom and org.jdom2) with every class in org.jdom deprecated?    It's a bit more work but it might offer a good incentive for the move.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>Why not make a package org.jdom with artifactId jdom version 2.0.0 containing &lt;br/&gt; both packages (org.jdom and org.jdom2) with every class in org.jdom deprecated?    It's a bit more work but it might offer a good incentive for the move.    paul    PS: no big issue about the other decisions.    Le 17 mars 2012 à 16:45, Jason Hunter a écrit :   &lt;div class="quote quote-1"&gt;  In Maven I'm OK either way.  If it's under the artifact name jdom2 we avoid &lt;br/&gt; accidental breakage, but we will have people for years initiating new projects &lt;br/&gt; against jdom instead of jdom2 just by accident.   &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>On 17/03/2012 11:45 AM, Jason Hunter wrote:   &lt;div class="quote quote-1"&gt; &lt;div class="quote quote-2"&gt;  I am getting (trying to get) things all nicely tidied up, organized, and &lt;br/&gt; automated for the JDOM2 releases. But, one thing I have not yet sorted out is &lt;br/&gt; the version number(s) for the 'final' JDOM2 release.   &lt;/div&gt;   My vote would be JDOM version 2.0.0.  I think people will casually refer to it &lt;br/&gt; as JDOM 2, which is fine.    In Maven I'm OK either way.  If it's under the artifact name jdom2 we avoid &lt;br/&gt; accidental breakage, but we will have people for years initiating new projects &lt;br/&gt; against jdom instead of jdom2 just by accident.    -jh-   &lt;/div&gt;  Good point about the jdom maven artifact.... which is contrary to Paul's opinion, but I see more merit in making the 'path' more obvious. Which sort of forces the version numbering.... it must be artifact 'jdom' with a version starting with 2 or 2.0 or 2.0.0.    People who have 'wild-card' dependencines in maven can just set an exclusive upper-bound if they want to link to JDOM 1.x. like: [1.0,2.0) will include the latest 1.x version, but not anything 2.0.0 or later.    I think I also prefer the full 3-digit version number.... If there is going to be a 2.1.1 then I think it should start with 2.0.0. In other words, make it consistent. I think that JDOM 1.x was odd (and just me calling it 1.x illustrates that) in the sense that it was JDOM 1.0, 1.1, 1.1.1, 1.1.2, 1.1.3    It is an interesting question whether it should be 2 or three digits.    Is it going to be 2.0.0, 2.0.1, etc. Or 2.0, 2.1, etc. I think it is a question of release frequency and confidence.... and I think I have to be prepared for some relatively quick releases to start with, so I think I will do 2.0.0    I also think I will put a limit on the availability of some deprecated functions... I think if I do something like: version 2.1.0 will remove the deprecated XPath, Attribute-Type, and SAXBuilder classes/methods, and how about targeting 2.1 for about X-Mas 2012.    So, I think that clears up a few things....    - 3-digit version. - the maven artifact will be jdom (and the jdom2 artifact can 'rot' - good for testing only). - The 'official' name for JDOM2 will be JDOM 2.0.0 and so on. - the release jar will be jdom-2.0.0.jar - maven users requiring JDOM 1.x will maybe have isues unless they set their upper bound on their dependencies.... this may be painful for them for a bit, but it is easy to fix, either by upgrading, or by limiting the upper-bound. I expect most maven users actually require a specific version, so I don't think it will be a big issue.    the www.jdom.org does not even need to jave both releases 'active' concurrently, it can just go from 1.1.3 to 2.0.0. The 1.1.3 will be in the 'archive' area.    Still, there is more time before this needs to be decided, so further input is welcome.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Passing Element parameter in Jax-ws web method</header>
    <body>Hi Dehaene    Technically, the Element instance does have a no-arg constructor, only it is 'protected', not public.    For you to solve your problem in the short term, you may want to do:       Then you can make the method:       I am not familiar enough with the  jax-ws to know whether this will help enough.... It will make the implementation a little messier, but, by default, JDOM doe s not let you create invalid Elements (which an Element without a name would be...).    It is not likely possible to make the no-arg constructor public.    Anothe roption is to create a serialized Element? Element serialization (at least in JDOM2) is reliable....    Rolf    On 17/03/2012 11:14 AM, Dehaene Thomas wrote:   &lt;div class="quote quote-1"&gt;  Hello,    I have a problem when accepting a web parameter of the type Element. My code is &lt;br/&gt; as follows:    @WebMethod(operationName = "hello")          Which generates an error when I try to deploy the web service. Namely that the &lt;br/&gt; Element class does not have a no-arg constructor.    If this where a normal method, I would simply make it a 'public static void' &lt;br/&gt; method, but since WebMethods in Jax-ws can't be of the 'final' or 'static' type, I can't &lt;br/&gt; seem to accept an Element parameter.    Any suggestions how to solve this?    Many thanks and greetings    Thomas Dehaene</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>&lt;div class="quote quote-1"&gt;  I am getting (trying to get) things all nicely tidied up, organized, and &lt;br/&gt; automated for the JDOM2 releases. But, one thing I have not yet sorted out is &lt;br/&gt; the version number(s) for the 'final' JDOM2 release.   &lt;/div&gt;   My vote would be JDOM version 2.0.0.  I think people will casually refer to it &lt;br/&gt; as JDOM 2, which is fine.    In Maven I'm OK either way.  If it's under the artifact name jdom2 we avoid &lt;br/&gt; accidental breakage, but we will have people for years initiating new projects &lt;br/&gt; against jdom instead of jdom2 just by accident.    -jh-</body>
  </mail>
  <mail>
    <header>[jdom-interest] Passing Element parameter in Jax-ws web method</header>
    <body>Hello,     I have a problem when accepting a web parameter of the type Element. My code is &lt;br/&gt; as follows:    @WebMethod(operationName = "hello")          Which generates an error when I try to deploy the web service. Namely that the &lt;br/&gt; Element class does not have a no-arg constructor.    If this where a normal method, I would simply make it a 'public static void' &lt;br/&gt; method, but since WebMethods in Jax-ws can't be of the 'final' or 'static' type, I can't &lt;br/&gt; seem to accept an Element parameter.    Any suggestions how to solve this?    Many thanks and greetings    Thomas Dehaene</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Why are version numbers so complicated?</header>
    <body>Rolf,    Your approach is almost perfect I think. The jdom2 artifactId is useful and correct.    The rest is all a matter of ordering right? isn't maven saying that 2 &amp;lt; 2.1 ? So the first version of 2 should just be 2?    That would be my guess.    paul    Le 17 mars 2012 à 14:01, Rolf Lear a écrit :   &lt;div class="quote quote-1"&gt;  Hi all    I am getting (trying to get) things all nicely tidied up, organized, and &lt;br/&gt; automated for the JDOM2 releases. But, one thing I have not yet sorted out is &lt;br/&gt; the version number(s) for the 'final' JDOM2 release.    Here are the factors that influence the decision: - the www.jdom.org site is the official release site for all things JDOM. - The www.jdom.org site is going to need to have both versions (1.x and 2.x) &lt;br/&gt; available simultaneously. - maven has version number requirements - maven has some automated processing for dependency management - Technically the Java package is org.jdom2, not org.jdom - 'in my head' I have JDOM 1.x and JDOM2 - there is an established tradition for JDOM 1.x - there is already some sort of 'consistency' for JDOM2 - I anticipate there to be relatively routine releases for JDOM2 as new features &lt;br/&gt; are added and existing bugs fixed. I want it to be easy for new versions to be &lt;br/&gt; pushed out, and I want to be able to tell people 'just get the latest version' &lt;br/&gt; if there is a problem.    About the maven requirements: maven has a hierarchy of resources. At the top of &lt;br/&gt; the hierarchy is a 'group'. We are the 'org.jdom' group. Each group releases &lt;br/&gt; 'things', which in maven speak is an 'artifact'. Each artifact has versions. For &lt;br/&gt; example, there is the group 'org.jdom', with the artifacts 'jdom', and &lt;br/&gt; 'jdom-contrib', and it so happens that there are the jdom versions 1.1.2 and &lt;br/&gt; 1.1.3, as well as the jom-contrib version 1.1.3. There is no special 'maven' &lt;br/&gt; reason for the version number jdom 1.1.3 to match jdom-contrib 1.1.3.    I have also recently added the jdom2 artifact id for the last couple of JDOM2 &lt;br/&gt; beta releases. The reason I added jdom2 is because maven dependencies can be &lt;br/&gt; automated, where maven users can say 'I want to use the latest version of &lt;br/&gt; org.jdom artifact 'jdom'. I don't want people who expect to use JDOM 1.x to &lt;br/&gt; suddenly start getting JDOM2. But, I also needed to test whether I can do the &lt;br/&gt; releases to maven, and to make sure that the releases work. Finally, maven has &lt;br/&gt; an ordering for versions. It is logical, and systematic, but it means that, if &lt;br/&gt; we want to use use the two artifacts (jdom and jdom2) that I have already &lt;br/&gt; created, we need to keep in mind that the first available versions for them are &lt;br/&gt; 1.1.4 and 0.0.5 respectively.    So, thinking ahead to the first full JDOM2 release, should it be:    JDOM version 2 JDOM version 2.0.0 JDOM2 version 1 JDOM2 version 1.0.0 JDOM2 version 2 JDOM2 verison 2.0.0    Additionally, should I push the JDOM2 release out to the 'jdom' artifact on &lt;br/&gt; maven-central, or should I push it to the 'jdom2' artifact? (it affects the &lt;br/&gt; options for version numbers).    Anyway, the point is that I am wholly uncertain as to what the 'right' answer to &lt;br/&gt; this is. Does anyone have any suggestions, notice anything I have missed, etc?    Thanks</body>
  </mail>
  <mail>
    <header>[jdom-interest] Why are version numbers so complicated?</header>
    <body>Hi all    I am getting (trying to get) things all nicely tidied up, organized, and automated for the JDOM2 releases. But, one thing I have not yet sorted out is the version number(s) for the 'final' JDOM2 release.    Here are the factors that influence the decision: - the www.jdom.org site is the official release site for all things JDOM. - The www.jdom.org site is going to need to have both versions (1.x and 2.x) available simultaneously. - maven has version number requirements - maven has some automated processing for dependency management - Technically the Java package is org.jdom2, not org.jdom - 'in my head' I have JDOM 1.x and JDOM2 - there is an established tradition for JDOM 1.x - there is already some sort of 'consistency' for JDOM2 - I anticipate there to be relatively routine releases for JDOM2 as new features are added and existing bugs fixed. I want it to be easy for new versions to be pushed out, and I want to be able to tell people 'just get the latest version' if there is a problem.    About the maven requirements: maven has a hierarchy of resources. At the top of the hierarchy is a 'group'. We are the 'org.jdom' group. Each group releases 'things', which in maven speak is an 'artifact'. Each artifact has versions. For example, there is the group 'org.jdom', with the artifacts 'jdom', and 'jdom-contrib', and it so happens that there are the jdom versions 1.1.2 and 1.1.3, as well as the jom-contrib version 1.1.3. There is no special 'maven' reason for the version number jdom 1.1.3 to match jdom-contrib 1.1.3.    I have also recently added the jdom2 artifact id for the last couple of JDOM2 beta releases. The reason I added jdom2 is because maven dependencies can be automated, where maven users can say 'I want to use the latest version of org.jdom artifact 'jdom'. I don't want people who expect to use JDOM 1.x to suddenly start getting JDOM2. But, I also needed to test whether I can do the releases to maven, and to make sure that the releases work. Finally, maven has an ordering for versions. It is logical, and systematic, but it means that, if we want to use use the two artifacts (jdom and jdom2) that I have already created, we need to keep in mind that the first available versions for them are 1.1.4 and 0.0.5 respectively.    So, thinking ahead to the first full JDOM2 release, should it be:    JDOM version 2 JDOM version 2.0.0 JDOM2 version 1 JDOM2 version 1.0.0 JDOM2 version 2 JDOM2 verison 2.0.0    Additionally, should I push the JDOM2 release out to the 'jdom' artifact on maven-central, or should I push it to the 'jdom2' artifact? (it affects the options for version numbers).    Anyway, the point is that I am wholly uncertain as to what the 'right' answer to this is. Does anyone have any suggestions, notice anything I have missed, etc?    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM2 Beta 4 Released</header>
    <body>Hi again everyone.    Given the two structural changes I have made recently it seems appropriate to release another Beta.    JDOM2 Beta 4 is now available from the usual places:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;  and maven central under group org.jdom artifact jdom2 and version 0.0.4 (give it an hour or so....).    The JavaDoc, Code Coverage, JUnit Test Results, and Performance details are all available at their regular locations:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/apidocs/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/coverage/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/coverage/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/junit.report/index.html &lt;/a&gt; &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/performance.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/performance.html &lt;/a&gt;   There are a few significant changes in this release (API changes, in fact, which I was hoping to avoid in the beta cycles) - Filter&amp;lt;T&amp;gt;.and(Filter&amp;lt;?&amp;gt;) now returns a typed Filter&amp;lt;T&amp;gt;, instead of - Parent.getDescendants() now returns an instance which can be treated as either an Iterator (fully compatible with the JDOM 1.x behaviour) or an Iterable (useful for enhanced-for loops). - I have cleaned up the org.jdom2.input package and moved some StAX-specific helper classes to org.jdom2.input.stax. I have also changed the way that the StAX classes access some StAX constants by doing a static import instead of an 'implements'. I do not believe the StAX changes will be a 'big deal' for anyone. - I have done a lot of tidying up on the JavaDoc    It appears that there are a number of people playing with JDOM2 based on the downloads from GitHib. By pushing out additional Beta releases it makes it easier for these people to test the latest code changes.    Please continue to get a feel for JDOM2, and do not hesitate to ask questions, express concerns, and offer suggestions.    In fact, if there is any way I can make it easier for you to get this latest code to try it out, please speak up!    Have a great St. Patricks day    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>So, it is done... and committed.    It came up being even easier than I thought. Thanks for the suggestion.    And it does look better 'in practice'.    I have a few documentation type changes pending, as well as a tidy-up of the 'AndFilter' code. Togerther with this change I think there is enough reason to push out a new Beta build later today (when I get home).    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>That seems almost too easy....    I can see it being very easy to do in this particular use case.... I will have a good look. It will be the documentation that's hardest to do, which is fine....    Thanks    Rolf    On 16/03/2012 2:38 AM, Thomas Scheffler wrote:   &lt;div class="quote quote-1"&gt;  Am 16.03.2012 00:03, schrieb Rolf Lear:   &lt;div class="quote quote-2"&gt;  Hi Craig.    I think my previous reply was a bit hurried... thinking about it more, I get the following...    - It would be nice to return 'Iterable', because that would make the 'enhanced' for possible.... but how important is the enhanced for? - it would require a new method (actually two) in org.jdom2.Parent - it would also be nice to have a method getSelfAndDescendants() - but that would be complicated on Document, because 'self' is not Content (it's Document).   &lt;/div&gt;   Hi Rolf,    my suggestion:    create an Interface IterableIterator that implements both interfaces (Iterable, Iterator) and make this the new return type. This will keep the compatibility and allows those fancy for loops.    Regards</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>Am 16.03.2012 00:03, schrieb Rolf Lear:   &lt;div class="quote quote-1"&gt;  Hi Craig.    I think my previous reply was a bit hurried... thinking about it more, I get the following...    - It would be nice to return 'Iterable', because that would make the 'enhanced' for possible.... but how important is the enhanced for? - it would require a new method (actually two) in org.jdom2.Parent - it would also be nice to have a method getSelfAndDescendants() - but that would be complicated on Document, because 'self' is not Content (it's Document).   &lt;/div&gt;   Hi Rolf,    my suggestion:    create an Interface IterableIterator that implements both interfaces (Iterable, Iterator) and make this the new return type. This will keep the compatibility and allows those fancy for loops.    Regards    Thomas</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>Hi Craig.    I think my previous reply was a bit hurried... thinking about it more, I get the following...    - It would be nice to return 'Iterable', because that would make the 'enhanced' for possible.... but how important is the enhanced for? - it would require a new method (actually two) in org.jdom2.Parent - it would also be nice to have a method getSelfAndDescendants() - but that would be complicated on Document, because 'self' is not Content (it's Document).    So, I think the idea of getSelfAndDescendants is nice, but not viable.    I think the idea of a new method returning an Iterable is nice, and it is viable, but is it necessary? I am not convinced.... yet.    The "enhanced for" (for-each) loop is just a convenience. It technically does not add any new functionality (other than a 'simpler' line of code). Is it really that much harder to do:    // do something.    than    // do something    Actually, looking at the above, it is a significant difference, I guess.    Ok, I am more convinced than before... maybe it would be useful, but then it will be messy too to have the 'old' getDescendants() methods too.    I will think about it some more... if there was a 'logical' way to express these new methods (good, meaningful, non-confusing names) it would make it an easier decision...    What would be a good name?    While I have your code example 'in mind' I thought I would point out a couple of other things....    Have you seen there is the org.jdom2.Filters class? It makes some other lines simpler too. Instead of:       you can do:       Well, that's not exactly better... the exact same number of characters.... oh, it does make a difference if you do not 'keep' the tableFilter instance...       Another thing, in your example you could possibly consider an XPath...    XPathExpression&amp;lt;?&amp;gt; xp = XPathFactory.compile("//Table")    If you want the results as a list of Element:    XPathExpression&amp;lt;Element&amp;gt; xp = XPathFactory.compile( ".//Table", Filters.element())    Anyway, there is some food for thought in all of this.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Possible bug in JDom2</header>
    <body>Hi Craig.       Now that I think about it, it is a mess, but, that's because JDOM 1.x returned an iterator.    Technically your code should be:       I wonder whether I can make an 'Iterable' return value too.... it makes sense to, but I can't change the current return value for getDescendants without breaking compatibility...    suggestions?    Rolf    On 15/03/2012 3:59 PM, Craig Noah wrote:   &lt;div class="quote quote-1"&gt;  I've downloaded the latest JDom2 beta today and am working to incorporate it into some new code.  I am developing against Java6, so I would expect iterators to work.  However, the following code fails to compile (with JDom2 includes):    Document xml = sax.build (source);    // source is a File object for (Element table : root.getDescendants(    The compile-time error that I get states, "Can only iterate over an array or an instance of java.lang.Iterable".  Since Element.getDescendants (Filter&amp;lt;F&amp;gt;) returns a java.util.Iterator&amp;lt;F&amp;gt;, I would expect my code to compile and work.  What am I missing?    Sincerely, Craig</body>
  </mail>
  <mail>
    <header>[jdom-interest] Possible bug in JDom2</header>
    <body>I've downloaded the latest JDom2 beta today and am working to incorporate it into some new code.  I am developing against Java6, so I would expect iterators to work.  However, the following code fails to compile (with JDom2 includes):    Document xml = sax.build (source);    // source is a File object for (Element table : root.getDescendants(    The compile-time error that I get states, "Can only iterate over an array or an instance of java.lang.Iterable".  Since Element.getDescendants (Filter&amp;lt;F&amp;gt;) returns a java.util.Iterator&amp;lt;F&amp;gt;, I would expect my code to compile and work.  What am I missing?    Sincerely, Craig</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM BETA 3</header>
    <body>Happy "March 12"    JDOM2's third, and hopefully final Beta release is available.    Like previous releases, this is available for download from github.  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;   Specifically, the second beta release is:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.3-BETA.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.3-BETA.zip &lt;/a&gt;   The Github Javadoc, JUnit, and Coverage pages have all been updated to match this new BETA release:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM-2.0#wiki-links" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM-2.0#wiki-links &lt;/a&gt;   A few things are different this time: 1. Added 'Specified' flag to attribute:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature:-Attribute-Specified" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM2-Feature:-Attribute-Specified &lt;/a&gt;  2. Moved the TextHelper code to core. 3. AbstractFilter is now public (not package private).    Please take this Beta for a spin, and share your experiences... good and bad.    I believe that this will be the final BETA release. The final JDOM2 release will be over the Easter period.    Have fun!    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Resolver announcement</header>
    <body>On 11/03/2012 6:32 PM, Michael Kay wrote:   &lt;div class="quote quote-1"&gt;  In Saxon 9.4 I have addressed this problem by including a copy of the most common resources within the Saxon JAR file, and ensuring that when Saxon itself allocates the XMLReader, it uses an EntityResolver that grabs these local copies of resources when available. But Saxon isn't architecturally the right place for the solution, any more than JDOM is.    I like the idea of a caching resolver: except that surely, the best way to offer this to the world is as an implementation of XMLReader that wraps an underlying XMLReader with a caching entity resolver. Then anyone who picks up this XMLReader implementation will automatically get the caching behaviour - even if they implement their own EntityResolver on top.    But I think a variant of the caching resolver that only uses a pre-initialized cache containing the common W3C files, and doesn't attempt any dynamic caching, might be even more useful, because it would avoid needing access to writable filestore, and the synchronization and permissions issues that this introduces.    Such a beast could easily be carved out of the existing Saxon code and turned into a freestanding component.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Resolver announcement</header>
    <body>In Saxon 9.4 I have addressed this problem by including a copy of the most common resources within the Saxon JAR file, and ensuring that when Saxon itself allocates the XMLReader, it uses an EntityResolver that grabs these local copies of resources when available. But Saxon isn't architecturally the right place for the solution, any more than JDOM is.    I like the idea of a caching resolver: except that surely, the best way to offer this to the world is as an implementation of XMLReader that wraps an underlying XMLReader with a caching entity resolver. Then anyone who picks up this XMLReader implementation will automatically get the caching behaviour - even if they implement their own EntityResolver on top.    But I think a variant of the caching resolver that only uses a pre-initialized cache containing the common W3C files, and doesn't attempt any dynamic caching, might be even more useful, because it would avoid needing access to writable filestore, and the synchronization and permissions issues that this introduces.    Such a beast could easily be carved out of the existing Saxon code and turned into a freestanding component.</body>
  </mail>
  <mail>
    <header>[jdom-interest] Resolver announcement</header>
    <body>Hi all.    way-back-when... about July last year, I ran in to a problem resolving documents against w3x resources. Essentially the problem is described here:    &lt;a class="exlink mklink" href="http://www.w3.org/blog/systeam/2008/02/08/w3c_s_excessive_dtd_traffic/" rel="nofollow"&gt; http://www.w3.org/blog/systeam/2008/02/08/w3c_s_excessive_dtd_traffic/ &lt;/a&gt;   I thought JDOM was a good location for building a solution to this problem. I even created an 'issue' for it...  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/26" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/26 &lt;/a&gt;   I later decided that JDOM was not necessarily the correct place to solve that problem, so I 'rejected' that issue.    But I have still been perplexed by this problem for a while now, and I have taken some time in the past few weeks to tackle the problem, and perhaps come up with a solution.    Thus, I invite anyone interested to have a look at:  &lt;a class="exlink mklink" href="https://github.com/rolfl/Resolver" rel="nofollow"&gt; https://github.com/rolfl/Resolver &lt;/a&gt;   This project has the 'simple' purpose of behaving very much like a caching proxy server for HTTP documents and exposing the cache as an EntityResolver useful for SAX and other parsing.    I decided to tackle the hard parts first - how do you build a file-based cache in a multithreaded system, with the added complexity that it needs to be accessible from multiple JVM's, not just threads within one JVM.    I figure that the code is too 'immature' to call 'stable', and it is not a great fit for JDOM (since the solution has no code shared with anything in JDOM, and it does not even process any XML...). So, releasing it as part of JDOM2 is not appropriate, but its usefulness is significant.    So, if anyone is interested, I am eager to get some input on it...    I think an attempt to make an 'easy to use' system for entity resolving would be a benefit for the entire Java community... A ssytem that allows you to plug in a combination of in-memory cached entities, combined with on-disk 'catalog' systems (perhaps leveraging the xerces 'Resolver' project, then this 'Resolver' for caching non-catalog resources, finally a fall through to more traditional URL-based resolvers would be ideal.    Thanks    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM2 performance</header>
    <body>Hi all.    As an exercise in a few things, I have run a number of comparative performance tests, comparing JDOM2 (Beta 2) against JDOM 1.1.3.    I put together a performance 'test harness' to track the changes in the performance metrics for JDOM2, and I have taken that harness, stripped out those things which are not available in JDOM 1.1.3, and then run the system on both code bases. I ran the tests in Java5, Java6, and Java7.    I took the performance harness cloned it for JDOM 1.1.3, and 'backported' it. I did the same types of changes to the JDOM2 harness to make them equivalent. I compiled both harnesses with Java6 using a Java5 class target. For the JDOM 1.1.3 test I linked in the JDOM 1.1.3 jar (which is compiled with Java5, and targets Java 1.2). For the JDOM2 test I linked in the Beta2 code (compiled with Java6 targetting Java 5).    I then took those code bases, and ran them using the Java5, 6, and 7 JRE's.    YOu can see the results here:  &lt;a class="exlink mklink" href="http://hunterhacker.github.com/jdom/jdom2/performanceJDKBeta2.html" rel="nofollow"&gt; http://hunterhacker.github.com/jdom/jdom2/performanceJDKBeta2.html &lt;/a&gt;   From that page you can see a number of interesting things: firstly, the XPath expression '//.' is much, much, much faster than '//node()' (in jaxen).    The second item is the jump in memory footprint from Java5 to Java6    You can see that most JDOM2 operations are slightly slower than JDOM 1.1.3, except XPath processing which is much, much faster.    At face value it would seem the slower performance is all related to a slower JDOM class initialization.... I will look in to that.    I figured the results were interesting, though, and there may be some benefit for others.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM2 BETA 2 Released - 0.0.2 - Leap Day - and future version numbering</header>
    <body>And there's the maven artifact:    &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom2|0.0.2-BETA|jar    I would appreciate it if people could think about the version numbers of JDOM2.    The situation is a little more complciated when you consider maven, but, in essence, I think I would like to keep JDOM and JDOM2 as different artifacts in maven. I don't want people with 'liberal' specifications for maven artifacts to suddenly download JDOM2 in to their project if I add the new JDOM2 version to the same jdom artifact.    So, the logical thing to do is create the jdom2 artifact, and put JDOM2 content in there. This is what I did with this BETA release.    But, should I call the upcoming JDOM2 release 'JDOM2 version 1.0.0' or should I call it 'JDOM 2.0.0'    I think I will continue to 'isolate' the JDOM2 maven deployment as the 'jdom2' artifact, but even that is debatable.    Funny how such a small detail can be so complicated ... ;-)    I think I am 'tending' to want to release the JDOM2 release as jdom-2.0.0, but I will do the maven deploy to the artifact 'jdom2'.    Does anyone have any suggestions, questions about this?    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM2 BETA 2 Released - 0.0.2 - Leap Day</header>
    <body>Happy "Leap Day"    JDOM2's second Beta release is available.    Like previous releases, this is available for download from github.  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/downloads" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/downloads &lt;/a&gt;   Specifically, the second beta release is:  &lt;a class="exlink mklink" href="https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.2-BETA.zip" rel="nofollow"&gt; https://github.com/downloads/hunterhacker/jdom/jdom2-0.0.2-BETA.zip &lt;/a&gt;   The Github Javadoc, JUnit, and Coverage pages have all been updated to match this new BETA release:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM-2.0#wiki-links" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM-2.0#wiki-links &lt;/a&gt;   A few things are different this time: - I have changed the 'naming' convention - now jdom2-0.0.2-BETA. This is to satisfy maven-central. - speaking of which, I am releasing this to the 'jdom2' artifact on maven-central. Expect the jdom2 artifact to arrive in a few hours - includes 'Location-aware' SAX Parsing (concept pulled from contrib). - includes Element.sort* for sorting element Content (concept pulled from contrib). - includes XPathHelper for creating XPath queries for selecting JDOM content (concept pulled from contrib).    Please take this Beta for a spin, and share your experiences... good and bad.    On the original schedule this was going to be the last BETA release with final JDOM2 release at Easter. I am going to stick with the Easter release, but I expect to push out additional BETA releases between now and then.    Have fun!    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Location-based parsing</header>
    <body>(most) SAX parsers set a 'Location' instance for each parse. The Location instance is updated just prior to calling any SAX event on the SAX handler.    The protocol is that, if the SAX Handler supports the Location system, it calls setDocumentLocator(Locator) on the handler *before* calling the startDocument() method.    JDOM has 'always' listened for the Locator call because it also supplies the publicID and SystemID values.    The Change I committed yesterday 'just' extends the current usage of the locator so that in each SAX event it passes on the Locator co-ordinates to the new 'location aware' methods on the JDOMFactory.    There are no 'call-backs' to do this.    The location information is tracked for every SAX event (every startElement, processingInstruction, etc.), including nested content.    Thus, in essence, every call to the JDOMFactory contains the coordinates for the item.    In addition to changing the SAXHandler and JDOMFactory to track and recieve the lcoation information, I have also included a new JDOMFactory (the LocatedJDOMFactory) which actually uses the location data when it creates special 'Located' JDOMContent (like LocatedText, LocatedCDATA, LocatedElement, etc.).    Thus, if you give the SAXBuilder a 'LocatedJDOMFactory' instance, you will get a document back which consists of 'Located' Content, and you can say: System.out.printlf("Root document has a SAX location of line %d column    The thing to remember (and what confused me for a bit), is that the SAX specification has an odd idea of what the event 'location' is. It is defined as: "Return the column number where the current document event ends"    So, if you have the root document:    then the location of the 'text' Text JDOM content will be: line 1, column 11 (the char after 'text'), and not the more 'obvious' line 1, column 7. Additionally, the location of the 'root' element is line 1, column 7.    I decided that it was better for me to keep the behaviour of the 'source' system (in this case, SAX), and have a 'general' LocatedJDOMFactory, than to try to calculate actual start positions of content (which would be very challenging).    What it means is that the details of 'Located' JDOM content is dependant on the system that parses the document. Additionally, the SAX specification is 'loose' about the location too, with the documentation: "The return value is an approximation of the line number in the document entity or external parsed entity where the markup triggering the event appears"    Rolf    On 29/02/2012 2:19 AM, Paul Libbrecht wrote:   &lt;div class="quote quote-1"&gt;  Interesting Rolf,    I had to use call-backs to produce the same functionality long ago. Does it include locations inside the elements (optional I suppose)?</body>
  </mail>
  <mail>
    <header>[jdom-interest] Location-based parsing</header>
    <body>Hi all.    I have moved the 'Line-Number' based SAXParser code to core. It is not a straight move, but rather, a rewrite to be more general, and to fit in to the JDOM2 way of doing things in the SAX parsing area.    A big side-effect of this move is that I have Extended the JDOMFactory interface. The changes are all 'extending' the interface, and the changes are fully compatible with JDOM 1.x ... unless you have created your own custom JDOMFactory.    If you have your own factory then you will need to implement a number of new methods. If you extend the DefaultJDOMFactory (like most people will have, I imagine) then you will find that you are overriding final methods (which fails to compile), but the fix is easy... for example if you overrode the 'text(String)' method (which returns a Text instance), you will have (for example):       You will need to change this to:       and you will again have your full functionality.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] jdom-contrib on maven central?</header>
    <body>Hi again Richard, everyone.    I am looking at moving the Location-aware SAX-parsing code to 'core', and I was wondering whether you (or anyone) use both the 'start' and 'end' locations, or just the 'start' location. I ask because if it is just the start location, I may consider adding support for all content, not just Element.    I have tried to imagine a situation where the end-of-element location is significant, and your validation code seems like the most likely type of scenario.    Is the 'end-of-element' information useful?    Thanks    Rolf    On 16/02/2012 5:03 PM, Richard Adams wrote:   &lt;div class="quote quote-1"&gt;  Hello Rolf, Thanks for your prompt and full reply:    why are you using JDOM 1.1 and contrib 1.1.1 when you could be using 1.1.2? 1.1 is *old* (November 2007)    We've found 1.1.1 rock solid so didn't see the need to update, but we can certainly do so, there's no reason in principle.    can you wait for 2 weeks for the scheduled release of 1.1.3 (fixes a bug in SAXOutputter)?    Absolutely, this isn't urgent.    what functionality in contrib are you using in your application... contrib is not treated as 'carefully' as the core JDOM, and it certainly is not as well tested. Perhaps this functionality should be in core JDOM?    Just the org.jdom.contrib.input package , which we use to report line numbers when validating documents.    So, as for putting the code in to maven, in theory I should now know what I am doing.... The build script for JDOM contains a target to do most of the work, and I can 'duplicate' it for the jdom-contrib jar. On the flip side, I am not a regular maven user, and I did make mistakes with the existing 1.1.2 'pom' file (it lists 'jaxen' as a dependency, but there is no jaxen 1.1.3 artifact in maven central - it should be an optional dependency). Unfortunately there is no way to 'fix' maven issues unless you release a newer version.    So, in answer to your questions: No, we do not have plans to release contrib on maven central, but we can if there is a good reason.... It is an active decision because: 1. maven central is 'new' to me, and 1.1.2 JDOM was the first release I have done 2. I do not believe contrib is 'production ready' code. Certainly I do not pay it very much attention. 3. contrib is not 'tidy' enough to package with a sources and javadoc jar to mate with the contrib jar for the OSS requirements    I can volunteer to tidy up ( document? unit test? )  the contrib.input package, if that's any help.    We (I) welcome any assistance you can provide, but, in this particular case, the process of pushing things to maven is fairly well automated, *but*, the actual maven experience we have is somewhat limited... if you have manpower to spare I would appreciate it if you could inspect and criticize/improve the process used to 'push' 1.1.2 to maven... it could be flawed.... and it will be the base for pushing all future versions to maven....    I'll have a look  and get back to you - but  I'm certainly no expert, having gone  through the process once last week! We also use an Ant build as our 'main' build, with the maven build being added solely to run the 'deploy' goals to put the project on their repository as a courtesy to consumers of our library who might use a maven build. But as our library is pretty much just used in academic research just now,  we don't have the same requirement for absolute compatibility as you with your large user-base, so can re-release easily if we screw things up.    I tried to use the mvn:release plugin but ran into all sorts of problems with tagging our code in subversion, so I ended up generating a big jar bundle and uploading it manually, then staging and releasing through their Nexus web-app.    Best wishes Richard    I put together some notes as I went through the 1.1.2 process here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven &lt;/a&gt;   It would be great if you could inspect the 1.1.2 release to see if there are other issues, also the pom file  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.x/maven.pom" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.x/maven.pom &lt;/a&gt; and the build.xml &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/blob/jdom-1.x/build.xml" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/blob/jdom-1.x/build.xml &lt;/a&gt;   Thanks    Ro   &lt;div class="quote quote-2"&gt;   _______________________________________________ To control your jdom-interest membership: http://www.jdom.org/mailman/options/jdom-interest/ &lt;span&gt; your &lt;a class="email mklink"&gt; ... &lt;/a&gt; @yourhost.com &lt;/span&gt;  &lt;/div&gt; &lt;div class="footer noise"&gt;   &lt;/div&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM 1.1.3 released!</header>
    <body>And the maven central repository is now updated. And there are reports that it is working fine.    &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom|1.1.3|jar  &lt;a class="exlink mklink" href="http://search.maven.org/#artifactdetails" rel="nofollow"&gt; http://search.maven.org/#artifactdetails &lt;/a&gt; |org.jdom|jdom-contrib|1.1.3|jar    Thanks all    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/downloads</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @21:44:41 PST Author:    Update of /home/cvs/jdom-site/downloads In directory servlets:/tmp/cvs-serv24849    Modified Files: index.html Log Message: Updating reference to 1.1.3.    -jh-    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.19	Mon Feb 27 05:44:41 2012 Repository revision:	1.19	/home/cvs/jdom-site/downloads/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.10)</body>
  </mail>
  <mail>
    <header>[jdom-interest] JDOM 1.1.3 released!</header>
    <body>JDOM 1.1.3 has just been published to &lt;a class="exlink mklink" href="http://www.jdom.org/" rel="nofollow"&gt; http://www.jdom.org/ &lt;/a&gt;  JDOM 1.1.3 has also been pushed to maven-central, but that typically takes a few hours to process.    The official download is in the standard JDOM format here:  &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-1.1.3.zip" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-1.1.3.zip &lt;/a&gt; or:  &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/jdom-1.1.3.tar.gz" rel="nofollow"&gt; http://jdom.org/dist/binary/jdom-1.1.3.tar.gz &lt;/a&gt;   You can get the contrib and test downloads from:  &lt;a class="exlink mklink" href="http://jdom.org/dist/binary/" rel="nofollow"&gt; http://jdom.org/dist/binary/ &lt;/a&gt;   The code can be pulled from github using the "jdom-1.1.3" tag here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/zipball/jdom-1.1.3" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/zipball/jdom-1.1.3 &lt;/a&gt;   This release fixes one issue - issue #60 -  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/issues/60" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/issues/60 &lt;/a&gt; which affects people using the SAXOutputter (which is also used when doing XSL Transformations).    Additionally, as requested, this release publishes the jdom-contrib jar to maven-central. This is new for JDOM, and while jdom-contrib contains useful code, it is not considered to be 'production-ready'. Please take appropriate care when using the contrib jar.    This 1.1.3 release is a drop-in replacement for either JDOM 1.1.1 or 1.1.2, and all users are encouraged to use 1.1.3.    JDOM 1.x is in 'maintenance mode'. Only bug-fixes will be considered for future a future 1.1.4 release. There are no known bugs in 1.1.3. If you encounter anything please notify the jdom-interest mailing list. The expectation is that 1.1.3 will be the final 1-series release, with the next release scheduled to be JDOM 2.0.0 in April.    Happy coding.    Rolf</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/news</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:13:06 PST Author:    Update of /home/cvs/jdom-site/news In directory servlets:/tmp/cvs-serv19332    Modified Files: index.html Log Message: We're shipping early.    -jh-    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.31	Mon Feb 27 04:13:06 2012 Repository revision:	1.31	/home/cvs/jdom-site/news/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.17)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/transform</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/transform In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/transform    Modified Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file JDOMResult.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:30 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/JDOMResult.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file JDOMSource.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:30 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/JDOMSource.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XSLTransformException.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:30 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file XSLTransformer.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:30 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/XSLTransformer.html,v    Existing Tags: No Tags Exist    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/news</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/news In directory servlets:/tmp/cvs-serv18484/news    Modified Files: index.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.30	Mon Feb 27 04:11:26 2012 Repository revision:	1.30	/home/cvs/jdom-site/news/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.17)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/xpath</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/xpath    Modified Files: XPath.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file XPath.html		Status: Needs Checkout    Working revision:	1.8	Mon Feb 27 04:11:30 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/XPath.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/output/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/output/class-use    Modified Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: DOMOutputter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/DOMOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: EscapeStrategy.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:26 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:26 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.html      	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:26 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: JDOMLocator.html 	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/JDOMLocator.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: SAXOutputter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/SAXOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: XMLOutputter.NamespaceStack.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/XMLOutputter.NamespaceStack.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: XMLOutputter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/class-use/XMLOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/xpath/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/class-use In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/xpath/class-use    Modified Files: XPath.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: XPath.html       	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:26 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/xpath/class-use/XPath.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/transform/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:30 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use In directory &lt;br/&gt; servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/transform/class-use    Modified Files: JDOMResult.html JDOMSource.html XSLTransformException.html XSLTransformer.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: JDOMResult.html  	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/JDOMResult.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: JDOMSource.html  	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:26 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/JDOMSource.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: XSLTransformException.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:26 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/XSLTransformException.html,v    Existing Tags: No Tags Exist    =================================================================== File: XSLTransformer.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:26 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/transform/class-use/XSLTransformer.html,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/input/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:29 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/input/class-use    Modified Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: BuilderErrorHandler.html	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:25 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/BuilderErrorHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: DOMBuilder.html  	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/DOMBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: JDOMParseException.html	Status: Up-to-date    Working revision:	1.8	Mon Feb 27 04:11:25 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/JDOMParseException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: SAXBuilder.html  	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/SAXBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: SAXHandler.html  	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:25 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/class-use/SAXHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/filter</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:29 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/filter In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/filter    Modified Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file AbstractFilter.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:29 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ContentFilter.html		Status: Needs Checkout    Working revision:	1.10	Mon Feb 27 04:11:29 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/ContentFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file ElementFilter.html		Status: Needs Checkout    Working revision:	1.10	Mon Feb 27 04:11:29 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/ElementFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: no file Filter.html		Status: Needs Checkout    Working revision:	1.10	Mon Feb 27 04:11:29 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/Filter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/input</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:29 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/input In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/input    Modified Files: BuilderErrorHandler.html DOMBuilder.html JDOMParseException.html SAXBuilder.html SAXHandler.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file BuilderErrorHandler.html		Status: Needs Checkout    Working revision:	1.12	Mon Feb 27 04:11:29 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/BuilderErrorHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: no file DOMBuilder.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:29 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/DOMBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMParseException.html		Status: Needs Checkout    Working revision:	1.8	Mon Feb 27 04:11:29 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/JDOMParseException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXBuilder.html		Status: Needs Checkout    Working revision:	1.14	Mon Feb 27 04:11:29 2012 Repository revision:	1.14 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/SAXBuilder.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.7)    =================================================================== File: no file SAXHandler.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:29 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/SAXHandler.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:25 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/input/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/output</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:29 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/output In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/output    Modified Files: DOMOutputter.html EscapeStrategy.html Format.TextMode.html Format.html JDOMLocator.html SAXOutputter.html XMLOutputter.NamespaceStack.html XMLOutputter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file DOMOutputter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:29 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/DOMOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EscapeStrategy.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:29 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/EscapeStrategy.html,v    Existing Tags: No Tags Exist    =================================================================== File: Format.TextMode.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:25 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Format.TextMode.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Format.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:29 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/Format.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file JDOMLocator.html		Status: Needs Checkout    Working revision:	1.8	Mon Feb 27 04:11:29 2012 Repository revision:	1.8 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/JDOMLocator.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.1)    =================================================================== File: no file SAXOutputter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:29 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/SAXOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: XMLOutputter.NamespaceStack.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:25 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/XMLOutputter.NamespaceStack.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file XMLOutputter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:29 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/XMLOutputter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:26 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/output/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:28 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/class-use    Modified Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: Attribute.html   	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Attribute.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: CDATA.html       	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/CDATA.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Comment.html     	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Comment.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Content.html     	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:23 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: DataConversionException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/DataConversionException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: DefaultJDOMFactory.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:23 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: DocType.html     	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/DocType.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Document.html    	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Document.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Element.html     	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Element.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: EntityRef.html   	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:23 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/EntityRef.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: IllegalAddException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/IllegalAddException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: IllegalDataException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/IllegalDataException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: IllegalNameException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/IllegalNameException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: IllegalTargetException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/IllegalTargetException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: JDOMException.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:24 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/JDOMException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: JDOMFactory.html 	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:24 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Namespace.html   	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:24 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Namespace.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Parent.html      	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:24 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: ProcessingInstruction.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:24 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/ProcessingInstruction.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: Text.html        	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:24 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Text.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.6	Mon Feb 27 04:11:24 2012 Repository revision:	1.6 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: Verifier.html    	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:24 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/class-use/Verifier.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/filter/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:29 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/filter/class-use    Modified Files: AbstractFilter.html ContentFilter.html ElementFilter.html Filter.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: AbstractFilter.html	Status: Up-to-date    Working revision:	1.7	Mon Feb 27 04:11:24 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/AbstractFilter.html,v    Existing Tags: No Tags Exist    =================================================================== File: ContentFilter.html	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/ContentFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: ElementFilter.html	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/ElementFilter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: Filter.html      	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:24 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/filter/class-use/Filter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:27 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom    Modified Files: Attribute.html CDATA.html Comment.html Content.html DataConversionException.html DefaultJDOMFactory.html DocType.html Document.html Element.html EntityRef.html IllegalAddException.html IllegalDataException.html IllegalNameException.html IllegalTargetException.html JDOMException.html JDOMFactory.html Namespace.html Parent.html ProcessingInstruction.html Text.html UncheckedJDOMFactory.html Verifier.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file Attribute.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Attribute.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file CDATA.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/CDATA.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Comment.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Comment.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Content.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:27 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Content.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DataConversionException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/DataConversionException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file DefaultJDOMFactory.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:27 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/DefaultJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file DocType.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/DocType.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Document.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Document.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Element.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Element.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file EntityRef.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:27 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/EntityRef.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file IllegalAddException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/IllegalAddException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalDataException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/IllegalDataException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalNameException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/IllegalNameException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file IllegalTargetException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/IllegalTargetException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMException.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/JDOMException.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JDOMFactory.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:27 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/JDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Namespace.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Namespace.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Parent.html		Status: Needs Checkout    Working revision:	1.7	Mon Feb 27 04:11:27 2012 Repository revision:	1.7 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Parent.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file ProcessingInstruction.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/ProcessingInstruction.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file Text.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:27 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Text.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: UncheckedJDOMFactory.html	Status: Up-to-date    Working revision:	1.6	Mon Feb 27 04:11:22 2012 Repository revision:	1.6 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/UncheckedJDOMFactory.html,v    Existing Tags: No Tags Exist    =================================================================== File: no file Verifier.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:27 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/Verifier.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:22 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:22 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:22 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:22 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/adapters</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:28 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters In directory servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/adapters    Modified Files: AbstractDOMAdapter.html CrimsonDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html package-frame.html package-summary.html package-tree.html package-use.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: no file AbstractDOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/AbstractDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file CrimsonDOMAdapter.html		Status: Needs Checkout    Working revision:	1.12	Mon Feb 27 04:11:28 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/CrimsonDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: no file DOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file JAXPDOMAdapter.html		Status: Needs Checkout    Working revision:	1.11	Mon Feb 27 04:11:28 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/JAXPDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: no file OracleV1DOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/OracleV1DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file OracleV2DOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/OracleV2DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XML4JDOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/XML4JDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: no file XercesDOMAdapter.html		Status: Needs Checkout    Working revision:	1.13	Mon Feb 27 04:11:28 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/XercesDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/package-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-summary.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/package-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-tree.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/package-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: package-use.html 	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/package-use.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/org/jdom/adapters/class-use</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:28 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use In directory &lt;br/&gt; servlets:/tmp/cvs-serv18484/docs/apidocs/org/jdom/adapters/class-use    Modified Files: AbstractDOMAdapter.html CrimsonDOMAdapter.html DOMAdapter.html JAXPDOMAdapter.html OracleV1DOMAdapter.html OracleV2DOMAdapter.html XML4JDOMAdapter.html XercesDOMAdapter.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: AbstractDOMAdapter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/AbstractDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: CrimsonDOMAdapter.html	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:23 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/CrimsonDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: DOMAdapter.html  	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: JAXPDOMAdapter.html	Status: Up-to-date    Working revision:	1.11	Mon Feb 27 04:11:23 2012 Repository revision:	1.11 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/JAXPDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.4)    =================================================================== File: OracleV1DOMAdapter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/OracleV1DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: OracleV2DOMAdapter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/OracleV2DOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: XML4JDOMAdapter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/XML4JDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: XercesDOMAdapter.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:23 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/org/jdom/adapters/class-use/XercesDOMAdapter.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:27 PST Author:    Update of /home/cvs/jdom-site In directory servlets:/tmp/cvs-serv18484    Modified Files: index.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.41	Mon Feb 27 04:11:19 2012 Repository revision:	1.41	/home/cvs/jdom-site/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.24)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:27 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs In directory servlets:/tmp/cvs-serv18484/docs/apidocs    Modified Files: allclasses-frame.html allclasses-noframe.html constant-values.html deprecated-list.html help-doc.html index.html overview-frame.html overview-summary.html overview-tree.html serialized-form.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: allclasses-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/allclasses-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: allclasses-noframe.html	Status: Up-to-date    Working revision:	1.9	Mon Feb 27 04:11:19 2012 Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/allclasses-noframe.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: constant-values.html	Status: Up-to-date    Working revision:	1.9	Mon Feb 27 04:11:19 2012 Repository revision:	1.9 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/constant-values.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: deprecated-list.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/deprecated-list.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: help-doc.html    	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13	/home/cvs/jdom-site/docs/apidocs/help-doc.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: index.html       	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13	/home/cvs/jdom-site/docs/apidocs/index.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-frame.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-frame.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-summary.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-summary.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: overview-tree.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/overview-tree.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)    =================================================================== File: serialized-form.html	Status: Up-to-date    Working revision:	1.13	Mon Feb 27 04:11:19 2012 Repository revision:	1.13 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/serialized-form.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.6)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/docs/apidocs/index-files</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:11:27 PST Author:    Update of /home/cvs/jdom-site/docs/apidocs/index-files In directory servlets:/tmp/cvs-serv18484/docs/apidocs/index-files    Modified Files: index-1.html index-10.html index-11.html index-12.html index-13.html index-14.html index-15.html index-16.html index-17.html index-18.html index-19.html index-2.html index-20.html index-21.html index-3.html index-4.html index-5.html index-6.html index-7.html index-8.html index-9.html Log Message: New site for 1.1.3 from Rolf.    -jh-    =================================================================== File: index-1.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-1.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-10.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-10.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-11.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-11.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-12.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-12.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-13.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-13.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-14.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-14.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-15.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-15.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-16.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-16.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-17.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-17.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-18.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-18.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-19.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:19 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-19.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-2.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-2.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-20.html    	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-20.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-21.html    	Status: Up-to-date    Working revision:	1.10	Mon Feb 27 04:11:20 2012 Repository revision:	1.10 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-21.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.3)    =================================================================== File: index-3.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-3.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-4.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-4.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-5.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-5.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-6.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-6.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-7.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-7.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-8.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-8.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)    =================================================================== File: index-9.html     	Status: Up-to-date    Working revision:	1.12	Mon Feb 27 04:11:20 2012 Repository revision:	1.12 &lt;br/&gt; /home/cvs/jdom-site/docs/apidocs/index-files/index-9.html,v    Existing Tags: jdom_1_0_b9              	(revision: 1.5)</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:07:01 PST Author:    Update of /home/cvs/jdom-site/dist/binary In directory servlets:/tmp/cvs-serv18142    Removed Files: jdom-1.1.3-binaries.zip Log Message: Removing unneeded file.    -jh-    =================================================================== File: no file jdom-1.1.3-binaries.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.3-binaries.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-1.1.3-binaries.zip,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/source</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:06:37 PST Author:    Update of /home/cvs/jdom-site/dist/source In directory servlets:/tmp/cvs-serv17967/source    Added Files: jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Removed Files: jdom-1.1.2.binary.zip jdom-1.1.2.site.zip jdom-1.1.2.tar.gz jdom-1.1.2.zip jdom-contrib-1.1.2.tar.gz jdom-contrib-1.1.2.zip jdom-test-1.1.2.tar.gz jdom-test-1.1.2.zip Log Message: Updating to 1.1.3.    -jh-    =================================================================== File: jdom-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:37 2012 Repository revision:	1.1	/home/cvs/jdom-site/dist/source/jdom-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.3.zip   	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:49 2012 Repository revision:	1.1	/home/cvs/jdom-site/dist/source/jdom-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:51 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/jdom-contrib-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/jdom-contrib-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:56 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/jdom-test-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:59 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/jdom-test-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.binary.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.binary.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.2.binary.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.site.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.site.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.2.site.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-1.1.2.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-contrib-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-contrib-1.1.2.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-test-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/source/Attic/jdom-test-1.1.2.zip,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/source/archive</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:06:38 PST Author:    Update of /home/cvs/jdom-site/dist/source/archive In directory servlets:/tmp/cvs-serv17967/source/archive    Added Files: jdom-1.1.2.tar.gz jdom-1.1.2.zip jdom-contrib-1.1.2.tar.gz jdom-contrib-1.1.2.zip jdom-test-1.1.2.tar.gz jdom-test-1.1.2.zip Log Message: Updating to 1.1.3.    -jh-    =================================================================== File: jdom-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:11 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.2.zip   	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:23 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:24 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-contrib-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.2.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:25 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-contrib-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:27 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-test-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.2.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:06:30 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/source/archive/jdom-test-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary/archive</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:06:33 PST Author:    Update of /home/cvs/jdom-site/dist/binary/archive In directory servlets:/tmp/cvs-serv17967/binary/archive    Added Files: jdom-1.1.2.tar.gz jdom-1.1.2.zip jdom-contrib-1.1.2.tar.gz jdom-contrib-1.1.2.zip jdom-test-1.1.2.tar.gz jdom-test-1.1.2.zip Log Message: Updating to 1.1.3.    -jh-    =================================================================== File: jdom-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:05 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.2.zip   	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:18 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:18 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-contrib-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.2.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-contrib-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.2.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:22 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-test-1.1.2.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.2.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:05:25 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/archive/jdom-test-1.1.2.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>[jdom-commits] CVS Update: jdom-site/dist/binary</header>
    <body>**************************************** Date:   Sun Feb 26, 2012 @20:06:31 PST Author:    Update of /home/cvs/jdom-site/dist/binary In directory servlets:/tmp/cvs-serv17967/binary    Added Files: jdom-1.1.3-binaries.zip jdom-1.1.3.tar.gz jdom-1.1.3.zip jdom-contrib-1.1.3.tar.gz jdom-contrib-1.1.3.zip jdom-test-1.1.3.tar.gz jdom-test-1.1.3.zip Removed Files: jdom-1.1.2.tar.gz jdom-1.1.2.zip jdom-contrib-1.1.2.tar.gz jdom-contrib-1.1.2.zip jdom-test-1.1.2.tar.gz jdom-test-1.1.2.zip Log Message: Updating to 1.1.3.    -jh-    =================================================================== File: jdom-1.1.3-binaries.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:19 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/jdom-1.1.3-binaries.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:31 2012 Repository revision:	1.1	/home/cvs/jdom-site/dist/binary/jdom-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-1.1.3.zip   	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:44 2012 Repository revision:	1.1	/home/cvs/jdom-site/dist/binary/jdom-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:45 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/jdom-contrib-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-contrib-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:48 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/jdom-contrib-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.tar.gz	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:50 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/jdom-test-1.1.3.tar.gz,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: jdom-test-1.1.3.zip	Status: Up-to-date    Working revision:	1.1	Mon Feb 27 04:04:53 2012 Repository revision:	1.1 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/jdom-test-1.1.3.zip,v Sticky Options:	-kb    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-1.1.2.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-contrib-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-contrib-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-contrib-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-contrib-1.1.2.zip,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.2.tar.gz		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.2.tar.gz Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-test-1.1.2.tar.gz,v    Existing Tags: No Tags Exist    =================================================================== File: no file jdom-test-1.1.2.zip		Status: Up-to-date    Working revision:	No entry for jdom-test-1.1.2.zip Repository revision:	1.2 &lt;br/&gt; /home/cvs/jdom-site/dist/binary/Attic/jdom-test-1.1.2.zip,v    Existing Tags: No Tags Exist</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM2 and Runtime Exceptions - and XPath</header>
    <body>On 25/02/2012 7:51 PM, Victor Toni wrote:   &lt;div class="quote quote-1"&gt;  &lt;span&gt; leig &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xerox.com &lt;/span&gt;  &lt;span&gt; leig &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xerox.com &lt;/span&gt;    Given what I decided about our usage of org.jdom.xpath packages being isolated, the issue of exception checking isn't a big one for me, but sadly that's because we can't much use it anyway.    If you're interested in doing refactoring, making it easier to use a different XPath implementation would be my suggested goal.    Leigh.    I would second that especially since Jaxen does not support XPath2 currently and it doesn't look like it would in the near future.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM2 and Runtime Exceptions</header>
    <body>&lt;span&gt; leig &lt;a class="email mklink"&gt; ... &lt;/a&gt; @xerox.com &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  Given what I decided about our usage of org.jdom.xpath packages being isolated, the issue of exception checking isn't a big one for me, but sadly that's because we can't much use it anyway.    If you're interested in doing refactoring, making it easier to use a different XPath implementation would be my suggested goal.</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM2 and Runtime Exceptions</header>
    <body>&lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;   &lt;div class="quote quote-1"&gt;  Hi all.    Recent discussions have highlighted the area of how JDOM handles some exceptions. In particular the context was XPath expressions. JDOM specifies (and 'always' has specified) that XPath throws JDOMException in the event of a failure on XPath. This has been 'questioned' from the perspective that this would not be the fault of JDOM if the XPath expression failed to compile, or evaluate.    Exceptions that are outside the control of the programmer, like IOException, should be thrown and caught, but an illegal XPath is more of a bug/programming error than an Exception, and hence should be treated more like a NullPointerException, IllegalArgumentException, IndexOutOfBoundsException, etc.    Certainly it is 'ugly' to have to try/catch even the simplest XPath expressions:    // handle it somehow ... // do something with nodes.    This would all be much simpler if the code throws a RuntimeException instead:       So, having used XPath as one example, I can then extrapolate the issue in to other general areas (sticking with concepts that are 'old' - in JDOM as well as JDOM2 - JDOM2 has additional areas of concern): 1. SAXOutputter throws JDOMExcepion on all it's calls because it traps SAXException from the output target:  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/org/jdom/output/SAXOutputter.html#output%28org.jdom.Document%29" rel="nofollow"&gt; http://jdom.org/docs/apidocs/org/jdom/output/SAXOutputter.html#output%28org.jdom.Document%29 &lt;/a&gt;  2. DOMOutputter throws JDOMException to wrap ParserConfigurationException from Java's DocumentBuilder. 3. XSLTransform throws a subclass of JDOMException.    Interestingly, XMLOutputter throws IOException, but not JDOMException.    Taking the issue to an abstract level, there are a number of places where JDOM throws the checked exception JDOMException, and that exception requires cumbersome handling in situations where unchecked exceptions would (potentially) be a better choice.    There are a number issues at stake here though:    1. In JDOM the JDOMException is specified (  &lt;a class="exlink mklink" href="http://jdom.org/docs/apidocs/org/jdom/JDOMException.html" rel="nofollow"&gt; http://jdom.org/docs/apidocs/org/jdom/JDOMException.html &lt;/a&gt; ) as being the 'top level Exception JDOM classes can throw'. But that's already *not* true. We have had all sorts of runtime exceptions thrown from various classes like 'Element' which throws IlleglNameException from it's constructor... So, should JDOMException be redefined to be JDOM-specific problems only?    2. Where is the 'line'? Should SAXOutputter throw SAXException instead of JDOMException (like XMLOutputter throws IOException not JDOMException)? Should SAXOutputter throw some new RuntimeException instead? How could the 'system' be described so that this inconsistency of exceptions is better controlled?    3. It creates a major backward-compatibility issue to remove the 'throws JDOMException' from methods. Existing code that does:    // handle it somehow ...    Fails to compile with:    [javac] ....\src\java\org\jdom2\test\cases\xpath\AbstractTestXPath.java:595: exception org.jdom2.JDOMException is never thrown in body of corresponding try statement [javac]               ^ [javac] 1 error    I have been playing with the code anyway, and I like the looks of the results of replacing 'strategic' JDOMExceptions with a runtime Exception. For example, I created a new unchecked JDOMRuntimeException class. From this class I created two subclasses: XPathCompileException and XPathEvaluationException. I made all the code 'work' nicely with these exceptions and the code looks very clean.    Backward compatibility is 'screwed' though, but somewhat mitigated by the fact that 'old' code can be modified from:    ... ...    to    ... ...    Alternatively, depending on the actual exception handling, the try/catch can be completely removed and handling can be cascaded up to a higher point....    Apart from renaming all the packages to org.jdom2, this would be the most significant migration problem for any users of JDOM/JDOM2. Documenting it as a migration issue should be relatively easy, but the fix would not be a pure search/replace, but the exceptions would have to be identified and fixed individually.    Admittedly in a tool like eclipse, it is quite easy to put 'Runtime' in your copy/paste buffer, and go from one compile problem to the next simply looking for the 'unreachable code' problem and adding the 'Runtime' to the middle of 'JDOMException'.    Sorry for the long mail, but this is a 'feature' which could make JDOM2 much easier to work with, but would certainly make a migration from JDOM more complicated.    Would love some thoughts on this....    Rolf   &lt;/div&gt;   What about a JDOMXPathException as a subclass of JDOMException? The code above would still work. You could still subclass JODMException from RuntimeException fi really wanted. Personally I rather like unchecked exceptions but would love a hint from the compiler/IDE. Runtime exceptions can be quite nice but it depends very much on the use case. I had once a dependency injection framework which worked great with them, but all the checks needed to be done only once at startup and if failed to program schould startuo at all, so this was a special case...    What I personally prefer is that an API, offers a special exception to deal with, in this case JDOMException. This way you can embed all the JDOM JDOMException could still use some more subclasses though.    Victor</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven build</header>
    <body>Hi All.    I intend to release JDOM 1.1.3 this week (the 1st March - Thursday).    I intend to release it to maven central too, but this time, I also intend to: 1. get the dependencies right 2. also deploy jdom-contrib    the contrib is a useful part of JDOM 1.x, but it will be merged in to core for JDOM2. Still, it makes some sense to release it for 1.1.3    So, attached are the pom files for what I intend to be the 1.1.3 release, the jdom and the jdom-contrib artifacts.    If people could please inspect them, ensure that the dependencies (and everything else) are right, I would appreciate it. I do not get two chances to get the maven-central release right, so I cannot afford to make a mistake on it.    So, those who use maven, please take some time to have a look, and give me some feedback on whether it will be good (or not).    For the record, these are the things I already know about (but do not intend to fix... unless someone can help...) 1. there should possibly be optional dependencies on: xalan, isorelax, jakarta-regex 2. ... well, there is no 2, I guess.    Thanks    Rolf    On 17/02/2012 8:06 PM, Rolf Lear wrote:   &lt;div class="quote quote-1"&gt;  Hi all.    As an update, I have been 'messing around', and, I have just been getting frustrated by Maven.   &lt;/div&gt;        A complete, Java-based solution for accessing, manipulating, and outputting XML data &lt;a class="exlink mklink" href="http://www.jdom.org" rel="nofollow"&gt; http://www.jdom.org &lt;/a&gt;    &lt;a class="exlink mklink" href="http://www.jdom.org" rel="nofollow"&gt; http://www.jdom.org &lt;/a&gt;    &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; &lt;a class="exlink mklink" href="http://jdom.markmail.org/" rel="nofollow"&gt; http://jdom.markmail.org/ &lt;/a&gt;    &lt;br/&gt; &lt;a class="exlink mklink" href="https://raw.github.com/hunterhacker/jdom/master/LICENSE.txt" rel="nofollow"&gt; https://raw.github.com/hunterhacker/jdom/master/LICENSE.txt &lt;/a&gt;    &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt; &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt; &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt;    &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;                   A complete, Java-based solution for accessing, manipulating, and outputting XML data &lt;a class="exlink mklink" href="http://www.jdom.org" rel="nofollow"&gt; http://www.jdom.org &lt;/a&gt;    &lt;a class="exlink mklink" href="http://www.jdom.org" rel="nofollow"&gt; http://www.jdom.org &lt;/a&gt;    &lt;span&gt; jdom &lt;a class="email mklink"&gt; ... &lt;/a&gt; @jdom.org &lt;/span&gt; &lt;a class="exlink mklink" href="http://jdom.markmail.org/" rel="nofollow"&gt; http://jdom.markmail.org/ &lt;/a&gt;    &lt;br/&gt; &lt;a class="exlink mklink" href="https://raw.github.com/hunterhacker/jdom/master/LICENSE.txt" rel="nofollow"&gt; https://raw.github.com/hunterhacker/jdom/master/LICENSE.txt &lt;/a&gt;    &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt; &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt; &lt;span&gt; gi &lt;a class="email mklink"&gt; ... &lt;/a&gt; @github.com &lt;/span&gt;    &lt;span&gt; jhun &lt;a class="email mklink"&gt; ... &lt;/a&gt; @servlets.com &lt;/span&gt; &lt;span&gt; jd &lt;a class="email mklink"&gt; ... &lt;/a&gt; @tuis.net &lt;/span&gt;</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] JDOM2 BETA available.</header>
    <body>Hi all.    It has been somewhat quiet this past week ;-) I know that some people have downloaded the JDOM2 Beta... but, no-one has provided any feedback....    ... perhaps everything is perfect? Nothing to complain about? ... perhaps everything is so broken that there's no point in complaining?    If you have played with JDOM2 it would be great if you could provide some feedback... even a simple 'works for me' would be great. Even a 'It sucks!' would be useful....    If you have not played with JDOM2 it would be great if you did ... ;-)    This is the last weekend I have before I 'push' out the 'final' BETA release on the 29th. I have a few outstanding issues that I will tackle, but, in essence, JDOM2 is, in theory, mostly done. All the remaining items are around the periphery, they are 'extensions' to the core JDOM2, and they will not change what JDOM2 feels like.    So, I am really hoping that if there are any concerns that I can deal with them this weekend.... and stay on schedule for the 29th.    Additionally, there has been no additional feedback on JDOM 1.1.2, so, the pending fix for the SAXOutputter bug appears to be the only fix needed before pushing out JDOM 1.1.3 on the 1st of March.    Since it has been requested, and since it is easy to do, I will push 1.1.3 out to maven-central together with the jdom-contrib jar. I will do it in a way that I believe will do 'the right thing', but I cannot easily test it. If someone can offer suggestions as to how to test releases on maven central I am all ears....    If you are aware of any other issues in 1.1.3, then speak up.    I do not intend to release a 'contrib' jar for JDOM2.    Happy JDOMing.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Contrib</header>
    <body>I have done a scan of the contrib code, and grouped things in to 4 chunks:    1. code I think should be 'supported' - moved to 'core' 2. code I think should be 'considered'. 'Considered' code I think will need a 'subject specialist' (not me) to do the 'official' migration. 3. code I think should be kept as 'sample' code only. 4. code which no longer has significant value... and should be abandoned.    The way I see it happening is that the contrib jar (and org.jdom2.contrib) is going to disappear, with the code either moving to org.jdom2, moving to 'sample', or being deleted entirely.    For the 'considered' code, there are things (like JavaBean mapping systems) which are subject-specialized. If there is someone using that code, or an 'expert' in the subject area, who is able to work on bringing the code to adequate 'production-ready' status (generalized, test code, etc.) then it can (likely) be moved in to core.    Code to 'move' to core ====================== - Sort content in a ContentList - Issue #65 - I think this should be re-structured as Element.sortContent(Comparator&amp;lt;? extends Content&amp;gt;). (avoid problems with existing Collections.sort() where detach() is not called). - AttAwareXMLOutputProcessor - Issue #66 - this code allows you to *not* output Attributes if they match certain rules (like they are 'fixed' or 'defaulted' values from a DTD. - TextHelper - Issue #67 - This has some 'convenience methods' for getting Text content. Some of the methods already exist in some core places (like Format.compact(), Format.trim(), etc.). - XPathHelper - Issue #68 - provides ways to create XPath query strings for existing content (think "the xpath to this Element is "/x/y/z/this") - In-memory verifier - issue #11 - contrib version uses RelaxNG, but this could be made more general.    Code to Consider (subject-specialized) ================    - org.jdom2.contrib.beans - JavaBean mapping code. This code has a number of structures which are not 'general XML' type items, and this code is not likely to be considered unless it is 'motivated' somehow.    - org.jdom2.contrib.dom - A 'lightweight read-only DOM wrapper for JDOM content'. I added this code recently because I used it to 'interface' with javax.xml.xpath and Xalan XPath libraries. It makes it possible to use DOM-only libraries to access JDOM content. Being that this code is new, currently has little 'testing', etc., it should be 'motivated' too. If it is considered valuable enough, then I volunteer to get it production-ready    - org.jdom2.contrib.xpath Java/Xalan - test code used to validate XPath API. May be worth building in to core. Already got test cases, etc. The native Java version does not support String/Boolean/Double return values.... yet.    - org.jdom2.contrib.ids - tracking 'ID' values for Elements. Allows fast lookup by ID. - has to be 'maintained' as the JDOM document is built.    Sample Code ===========    - ResultSetBuilder - converts an SQL ResultSet to a JDOM/XML implementation. I don't know if this is 'generalized' enough... there are standard ways of doing this thing now... not sure if it is in JDOM's Domain. - Input Scanner - filter Input SAX Events... this is mostly replaced by functionality in the StAX API. - JTreeOutputter - output of Element content to a Swing JTree. This appears incomplete... - Perf code - used as the benchmark for JDOM performance.    Dead Code =========    - nothing, it seems.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Maven build</header>
    <body>Hi all.    As an update, I have been 'messing around', and, I have just been getting frustrated by Maven.    To my knowledge, I am unable to deploy 'snapshot' type builds to oss/sonatype nexus.... or, rather, I am unable to upload snapshot 'bundles' to their web-based interface.    This means that the only way I understand it is possible to create SNAPSHOT builds is through the 'mvn deploy' command, and JDOM does not do that.    As a result, I am frustrated, and I am wasting time on it.    I have a 'procedure' in place that allows me to upload maven bundles to oss.sonatype.org. The procedure is partially manual, and described here:  &lt;a class="exlink mklink" href="https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven" rel="nofollow"&gt; https://github.com/hunterhacker/jdom/wiki/JDOM1.1.2-and-Maven &lt;/a&gt;   This procedure is good enough to load up 'release' builds only (it seems).    This means that I cannot find a good way to test the maven part of the processes.... and I cannot trust myself to be doing 'the right thing' because I simply cannot fathom what 'the right thing' from a maven perspective is.    For me the maven aspect JDOM has become 'not fun', and since I do not use maven myself, I now have low motivation for making it work. Further, any previous 'good will' I have had in considering a more 'maven like' build process is evaporating... right now (and I am somewhat peeved) I think maven sucks, and is more trouble than it is worth.    So, if maven is to redeem itself to me, I think someone with a more friendly attitude toward it is going to have to smooth out the process, put together a 'just do this, this, and this...', and if it works I will keep doing it.    So, if there are maven-experienced people out there... people who have deployed open-source projects to maven-central (not just used maven central as a resource), further, people who have experience with using a non-maven-like source repository like JDOM is, then please consider helping out here.    Just to be clear, what I can do is: - 'release' a maven bundle    what I cannot do is: - put out 'test' maven releases that are not linked to 'official' JDOM releases. - put out a new JDOM release if I somehow mess up a maven release.... so, I need to ensure that all maven releases are 100% correct. If JDOM 2.x.y is released, and the maven artifact for 2.x.y is somehow broken (bad dependency or something) then I do not want to have to release a JDOM 2.x.z to fix a maven problem.    So, if someone wants to take a stab at it, please speak up.    Rolf</body>
  </mail>
  <mail>
    <header>Re: [jdom-interest] Contrib</header>
    <body>I am for #1 too : Building a jar of contrib incorrectly let people think it can be used as is for production, and maybe sometimes it can, but it is probably not the most common case.    Just to provide a counter example if you want to explorer other approach, since the solr/lucene merge, the contribs are provided in the main distribution, as several jar, one for each individual "contrib". Due to the size of this project, it leads to a 55Mb zip distribution....    Olivier    On 17/02/2012 06:28, Jason Hunter wrote:   &lt;div class="quote quote-1"&gt;  The original purpose of contrib was to share the interesting work people were &lt;br/&gt; doing "around" JDOM in such a way that people could find it.  It did not have a &lt;br/&gt; very high bar for entry.    I lean toward #1 as well.  Course, if something is genuinely valuable and fits &lt;br/&gt; the core JDOM model then it should move into core.    -jh-    On Feb 16, 2012, at 8:43 PM, Rolf Lear wrote:   &lt;div class="quote quote-2"&gt;  Hi all.    I want some input on the way that JDOM has previously shipped as both the 'core' &lt;br/&gt; and 'contrib' jars. It is my feeling that 'contrib' is a second-class citizen in &lt;br/&gt; the JDOM process... this is reinforced by the fact that I have paid it very &lt;br/&gt; little attention in the past 6 months and there are still functional elements in &lt;br/&gt; it which are new to me.    I do not feel that I am in a position to 'support' the contrib code... if there &lt;br/&gt; are bugs, I am not familiar enough with the code to fix them, etc.    If anyone has any ideas of how to deal with contrib I would appreciate hearing &lt;br/&gt; them.    The options I see are: 1. keep the code as 'sample' code, but do not create a contrib jar (my &lt;br/&gt; preference, I think). 2. keep the code, build it, but document that the 'contrib' jar contains &lt;br/&gt; unsupported code. 3. move the 'valuable' contrib code in to core, 'support' that code, and 'kill' &lt;br/&gt; the code that is not valuable.    I am interested in hearing people's ideas on this, and I am also interested in &lt;br/&gt; hearing from people who use the contrib jar, and what they use from that jar.    Thanks</body>
  </mail>
</mails>

