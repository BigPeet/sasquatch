/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

import manager.systems.Archive;
import manager.systems.SoftwareSystem;

/**
 *
 * @author Peter Wolf
 */
public class SystemCreationDialog extends javax.swing.JDialog {

	
	private static final int TYPE_COLUMN = 0;
	private static final int REF_COLUMN = 1;
	private ArrayList<Archive> archives = new ArrayList<Archive>();
	private SoftwareSystem created = null;
	
    /**
     * Creates new form SystemCreationDialog
     */
    public SystemCreationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public SystemCreationDialog(SoftwareSystem system, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        for (Archive a : system.getArchives()) {
        	archives.add(a);
        }
        updateTable();
        nameField.setText(system.getName());
    }

    public void run() {
    	this.setLocationRelativeTo(getParent());
    	this.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        archiveTable = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnAddArchive = new javax.swing.JButton();
        btnRemoveArchive = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnUp = new javax.swing.JButton();
        btnDown = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        archiveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Reference"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        archiveTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(archiveTable);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnAddArchive.setText("Add Archive");
        btnAddArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddArchiveActionPerformed(evt);
            }
        });

        btnRemoveArchive.setText("Remove Archive");
        btnRemoveArchive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveArchiveActionPerformed(evt);
            }
        });

        jLabel2.setText("Archives:");

        btnUp.setText("Move Up");
        btnUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpActionPerformed(evt);
            }
        });

        btnDown.setText("Move Down");
        btnDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnAddArchive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveArchive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addContainerGap())
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDown)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUp)
                    .addComponent(btnDown))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancel)
                        .addComponent(btnAdd))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddArchive)
                            .addComponent(btnRemoveArchive))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddArchiveActionPerformed
        ArchiveCreationDialog ac = new ArchiveCreationDialog(this, true);
        ac.run();
        Archive a = ac.getCreated();
        if (a != null) {
        	addArchive(a);
        }
    }//GEN-LAST:event_btnAddArchiveActionPerformed

    private void addArchive(Archive a) {
    	archives.add(a);
    	updateTable();
	}
    
    private void removeArchive(Archive a) {
    	archives.remove(a);
    	updateTable();
    }

	private void updateTable() {
		DefaultTableModel model = (DefaultTableModel) archiveTable.getModel();
		for (int i = 0; i < Math.min(archives.size(), archiveTable.getRowCount()); i++) {
			setRow(model, i, archives.get(i));
			
		}
		if (archives.size() > archiveTable.getRowCount()) {
			for (int i = archiveTable.getRowCount(); i < archives.size(); i++) {
				model.addRow(new Object[2]);
				setRow(model, i, archives.get(i));
			}
		} else if (archiveTable.getRowCount() > archives.size()) {
			for (int i = archives.size(); i < archiveTable.getRowCount(); i++) {
				model.removeRow(i);
			}
		}
	}
	
	private void setRow(DefaultTableModel model, int row, Archive a) {
		model.setValueAt(archives.get(row).getType(), row, TYPE_COLUMN);
		model.setValueAt(archives.get(row).getReference(), row, REF_COLUMN);
	}

	private void btnRemoveArchiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveArchiveActionPerformed
        int index = archiveTable.getSelectedRow();
        Archive a = archives.get(index);
        removeArchive(a);
    }//GEN-LAST:event_btnRemoveArchiveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!nameField.getText().isEmpty()) {
        	created = new SoftwareSystem(nameField.getText(), archives.toArray(new Archive[archives.size()]));
            this.dispose();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        created = null;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpActionPerformed
        int index = archiveTable.getSelectedRow();
        if (index > 0) {
        	Archive selected = archives.get(index);
        	Archive replaced = archives.get(index - 1);
        	archives.set(index - 1, selected);
        	archives.set(index, replaced);
        	updateTable();
        	archiveTable.getSelectionModel().setSelectionInterval(index - 1, index - 1);
        }
    }//GEN-LAST:event_btnUpActionPerformed

    private void btnDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownActionPerformed
    	int index = archiveTable.getSelectedRow();
        if (index < archiveTable.getRowCount() - 1) {
        	Archive selected = archives.get(index);
        	Archive replaced = archives.get(index + 1);
        	archives.set(index + 1, selected);
        	archives.set(index, replaced);
        	updateTable();
        	archiveTable.getSelectionModel().setSelectionInterval(index + 1, index + 1);
        }
    }//GEN-LAST:event_btnDownActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable archiveTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddArchive;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDown;
    private javax.swing.JButton btnRemoveArchive;
    private javax.swing.JButton btnUp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    // End of variables declaration//GEN-END:variables

	/**
	 * @return the created
	 */
	public SoftwareSystem getCreated() {
		return created;
	}

	/**
	 * @param created the created to set
	 */
	public void setCreated(SoftwareSystem created) {
		this.created = created;
	}
}
